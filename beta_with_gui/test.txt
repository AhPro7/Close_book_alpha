


------------------------


Data Visualization


------------------------





------------------------


Data Visualization
A PRACTICAL INTRODUCTION
Kieran Healy
princeton university press
princeton and oxford


------------------------


©2019PrincetonUniversityPress
PublishedbyPrincetonUniversityPress
41WilliamStreet,Princeton,NewJersey08540
6OxfordStreet,Woodstock,OxfordshireOX201TR
press.princeton.eduAllRightsReservedLibraryofCongressControlNumber:2018935810
ISBN978-0-691-18161-5
ISBN(pbk.)978-0-691-18162-2
BritishLibraryCataloging-in-PublicationDataisavailable
Thisbookhasbeencomposedwithopen-sourcetoolsinMinionPro,
MyriadPro,andIosevkaType.
Printedonacid-freepaper. ∞
PrintedintheUnitedStatesofAmerica
1 0987654321


------------------------


For the Llamanteriat, who saw it first.


------------------------





------------------------


Contents
Preface xi
WhatYouWillLearn xiiTheRightFrameofMind xivHow toUse ThisBook xvConventions xviBeforeYouBegin xvii
1 Look at Data 1
1.1 WhyLookatData? 2
1.2 WhatMakesBadFiguresBad? 51.3 PerceptionandDataVisualization 141.4 VisualTasksandDecodingGraphs 231.5 ChannelsforRepresentingData 261.6 ProblemsofHonestyandGoodJudgment 271.7 ThinkClearlyaboutGraphs 291.8 WheretoGoNext 31
2 Get Started 32
2.1 WorkinPlainText,UsingRMarkdown 322.2 UseRwithRStudio 352.3 ThingstoKnowaboutR 382.4 BePatientwithR,andwithYourself 482.5 GetDataintoR 49


------------------------


viii •Contents
2.6 MakeYourFirstFigure 51
2.7 WheretoGoNext 52
3 Make a Plot 54
3.1 HowGgplotWorks 543.2 TidyData 563.3 MappingsLinkDatatoThingsYouSee 563.4 BuildYourPlotsLayerbyLayer 593.5 MappingAestheticsvsSettingThem 633.6 AestheticsCanBeMappedperGeom 663.7 SaveYourWork 683.8 WheretoGoNext 71
4 Show the Right Numbers 73
4.1 ColorlessGreenDataSleepsFuriously 744.2 GroupedDataandthe“Group”Aesthetic 744.3 FacettoMakeSmallMultiples 764.4 GeomsCanTransformData 804.5 FrequencyPlotstheSlightlyAwkwardWay 824.6 HistogramsandDensityPlots 85
4.7 AvoidTransformationsWhenNecessary 88
4.8 WheretoGoNext 91
5 Graph Tables, Add Labels, Make Notes 93
5.1 UsePipestoSummarizeData 945.2 ContinuousVariablesbyGrouporCategory 1025.3 PlotTextDirectly 1155.4 LabelOutliers 1215.5 WriteandDrawinthePlotArea 124


------------------------


Contents •ix
5.6 UnderstandingScales,Guides,andThemes 125
5.7 WheretoGoNext 131
6 Work with Models 134
6.1 ShowSeveralFitsatOnce,withaLegend 1356.2 LookInsideModelObjects 1376.3 GetModel-BasedGraphicsRight 1416.4 GeneratePredictionstoGraph 1436.5 TidyModelObjectswithBroom 1466.6 GroupedAnalysisandListColumns 1516.7 PlotMarginalEffects 1576.8 PlotsfromComplexSurveys 161
6.9 WheretoGoNext 168
7 Draw Maps 173
7.1 MapU.S.State-LevelData 1757.2 America’sUr-choropleths 1827.3 Statebins 1897.4 Small-MultipleMaps 1917.5 IsYourDataReallySpatial? 194
7.6 WheretoGoNext 198
8 Refine Your Plots 199
8.1 UseColortoYourAdvantage 2018.2 LayerColorandTextTogether 2058.3 ChangetheAppearanceofPlotswithThemes 2088.4 UseThemeElementsinaSubstantiveWay 2118.5 CaseStudies 2158.6 WheretoGoNext 230


------------------------


x •Contents
Acknowledgments 233
Appendix 235
1 ALittleMoreaboutR 2352 CommonProblemsReadinginData 245
3 ManagingProjectsandFiles 253
4 SomeFeaturesofThisBook 257
References 261
Index 267


------------------------


Preface
You should look at your data. Graphs and charts let you explore
andlearnaboutthestructureoftheinformationyoucollect.Gooddatavisualizationsalsomakeiteasiertocommunicateyourideas
and findings to other people. Beyond that, producing effective
plots from your own data is the best way to develop a good eyefor reading and understanding graphs—good and bad—made byothers,whetherpresentedinresearcharticles,businessslidedecks,
public policy advocacy, or media reports. This book teaches you
howtodoit.
My main goal is to introduce you to both the ideasand the
methodsofdatavisualizationinasensible,comprehensible,repro-
d u c i b l ew a y .S o m ec l a s s i cw o r k so nv i s u a l i z i n gd a t a ,s u c ha s The
Visual Display of Quantitative Information (Tufte 1983), present
numerous examples of good and bad work together with somegeneral taste-based rules of thumb for constructing and assess-
ing graphs. In what has now become a large and thriving field of
research, more recent work provides excellent discussions of thecognitive underpinnings of successful and unsuccessful graphics,again providing many compelling and illuminating examples
(Ware2008).Otherbooksprovidegoodadviceabouthowtograph
data under different circumstances (Cairo 2013; Few 2009; Mun-zer 2014) but choose not to teach the reader about the tools usedt op r od u c eth egr a p h i c sth eys h o w .T h i sm a ybebeca u seth eso ft -
wareusedissome(proprietary,costly)point-and-clickapplication
thatrequiresafullyvisualintroductionofitsown,suchasT ableau,Microsoft Excel, or SPSS. Or perhaps the necessary software isfreely available, but showing how to use it is not what the book
is about (Cleveland 1994). Conversely, there are excellent cook-
books that provide code “recipes” for many kinds of plot (Chang2013).Butforthatreasontheydonottakethetimetointroducethe
beginnertotheprinciplesbehindtheoutputtheyproduce.Finally,
we also have thorough introductions to particular software tools


------------------------


xii •Preface
andlibraries,includingtheoneswewilluseinthisbook(Wickham
2016).Thesecansometimesbehardforbeginnerstodigest,asthey
maypresupposeabackgroundthatthereaderdoesnothave.
Each of the books I have just cited is well worth your time.
Whenteachingpeople howtomakegraphicswithdata, however,Ihaverepeatedlyfoundtheneedforanintroductionthatmotivates
and explains whyy o ua r ed o i n gso m e th i n gb u tth a td oe sn o ts ki p
thenecessarydetailsof howtoproducetheimagesyouseeonthe
page.Andsothisbookhastwomainaims.First,Iwantyoutoget
to the point where you can reproduce almost every figure in the
text for yourself. Second, I want you to understand why the codei sw r i t t e nt h ew a yi ti s ,s u c ht h a tw h e ny o ul o o ka td a t ao fy o u rownyoucanfeelconfidentaboutyourabilitytogetfromarough
p i c t u r ei ny o u rh e a dt oah i g h - q u a l i t yg r a p h i co ny o u rs c r e e no r
page.
What You Will Learn
T h i sb o o ki sah a n d s - o ni n t r o d u c t i o nt ot h ep r i n c i p l e sa n dp r a c -tice of looking at and presenting data using R and ggplot. R is a
powerful,widelyused,andfreelyavailableprogramminglanguage
for data analysis. You may be interested in exploring ggplot afterha vingusedRbefo r eo rbeen tir elynewtobo thRandggplo tandjust want to graph your data. I do not assume you have any prior
knowledgeofR.
Afterinstallingthesoftwareweneed,webeginwithanoverview
ofsomebasicprinciplesofvisualization.Wefocusnotjustontheaes-theticaspectsofgoodplotsbutonhowtheireffectivenessisrooted
inthewayweperceivepropertieslikelength,absoluteandrelative
size, orientation, shape, andcolor. Wethenlearn how toproduceand refine plots using ggplot2, a powerful, versatile, and widelyused visualization package for R (Wickham 2016). The ggplot2
library implements a “grammar of graphics” (Wilkinson 2005).
T h i sa p p r o a c hg i v e su sac o h e r e n tw a yt op r o d u c ev i s u a l i z a t i o n sbyexpressingrelationshipsbetweentheattributesofdataandtheirgraphicalrepresentation.
Through a series of worked examples, you will learn how to
build plots piece by piece, beginning with scatterplots and sum-mariesofsinglevariables,thenmovingontomorecomplexgraph-ics. Topics covered include plotting continuous and categorical


------------------------


Preface •xiii
variables;layeringinformationongraphics;facetinggroupeddata
to produce effective “small multiple” plots; transforming data to
easilyproducevisualsummariesonthegraphsuchastrendlines,
linear fits, error ranges, and boxplots; creating maps; and somealternativestomapsworthconsideringwhenpresentingcountry-or state-level data. We will also cover cases where we are not
working directly with a dataset but rather with estimates from a
statisticalmodel. From there, we willexplore the process of refin-ing plots to accomplish common tasks such as highlighting key
features of the data, labeling particular items of interest, anno-
tating plots, and changing their overall appearance. Finally wewill examine some strategies for presenting graphical results indifferentformatsandtodifferentsortsofaudiences.
If you follow the text and examples in this book, then by the
endyouwill
•understandthebasicprinciplesbehindeffectivedatavisualiza-tion;
•have a practical sense for why some graphs and figures workwell,whileothersmayfailtoinformoractivelymislead;
•know how to create a wide range of plots in R using ggplot2;and
•knowhowtorefineplotsforeffectivepresentation.
Learning how to visualize data effectively is more than just
knowing how to write code that produces figures from data. Thisb o o kw i l lt e a c hy o uh o wt od ot h a t .B u ti tw i l la l s ot e a c hy o u
howtothinkabouttheinformationyouwanttoshow,andhowto
c o n s i d e rt h ea u d i e n c ey o ua r es h o w i n gi tt o — i n c l u d i n gt h em o s tcommoncase,whentheaudienceisyourself.
This book is not a comprehensive guide to R, or even a com-
prehensivesurveyofeverythingggplotcando.Norisitacookbook
containingjustexamplesofspecificthingspeoplecommonlywanttodowithggplot.(Boththesesortsofbooksalreadyexist:seethereferences in the appendix.) Neither is it a rigid set of rules, or a
sequence of beautiful finished examples that you can admire but
notreproduce.MygoalistogetyouquicklyupandrunninginR,makingplotsinawell-informedway,withasolidgraspofthecoresequence of steps—taking your data, specifying the relationship
between variables and visible elements, and building up images
layerbylayer —thatisattheheartofwhatggplotdoes.


------------------------


xiv •Preface
LearningggplotdoesmeangettingusedtohowRworks,and
also understanding how ggplot connects to other tools in the R
language.Asyouworkyourwaythroughthebook,youwillgrad-
ually learn more about some very useful idioms, functions, andtechniquesformanipulatingdatainR.Inparticularyouwilllearnabout some of the tools provided by the
tidyverse library that
ggplotbelongsto.Similarly,althoughthisisnotacookbook,once
y o ug e tp a s tc h a p t e r1y o uw i l lb ea b l et os e ea n du n d e r s t a n dt h ecode used to produce almost every figure in the book. In most
casesyouwillalsoseethesefiguresbuiltuppiecebypiece, astep
atatime.Ifyouusethebookasitisdesigned,bytheendyouwillhave the makings of a version of the book itself, containing codeyou have written out and annotated yourself. And though we do
notgointogreatdepthonthetopicofrulesorprinciplesofvisual-
ization,thediscussioninchapter1anditsapplicationthroughoutthe book gives you more to think about than just a list of graphtypes.Bytheendofthebookyoushouldbeabletolookatafigure
and be able to see it in terms of ggplot’s grammar, understand-
inghowthevariouslayers,shapes,anddataarepiecedtogethertomakeafinishedplot.
The Right Frame of Mind
Itcanbealittledisorientingtolearnaprogramminglanguagelike
R,mostlybecauseatthebeginningthereseemtobesomanypieces
tofittogetherinorderforthingstoworkproperly.Itcanseemlikeyouhavetolearneverythingbeforeyoucandoanything.Thelan-guage has some possibly unfamiliar concepts that define how it
works, like “object,” “function,” or “class.” The syntactic rules for
writing code are annoyingly picky. Error messages seem obscure;help pages are terse; other people seem to have had not quite the
s a m ei s s u ea sy o u .B e y o n dt h a t ,y o us e n s et h a td o i n go n et h i n g
ofteninvolveslearningabitaboutsomeotherpartofthelanguage.
To make a plot you need a table of data, but maybe you need tofilteroutsomerows,recalculatesomecolumns,orjustgetthecom-puter to see it is there in the first place. And there is also a wider
environmentofsupportingapplicationsandtoolsthataregoodto
know about but involve new concepts of their own—editors thathighlightwhatyouwrite;applicationsthathelpyouorganizeyour


------------------------


Preface •xv
code and its output; ways of writing your code that let you keep
trackofwhatyouhavedone.I tcanallseemabitconfusing.
Don’tpanic.Youhavetostartsomewhere.Startingwithgraph-
ics is more rewarding than some of the other places you mightbegin,becauseyouwillbeabletoseetheresultsofyoureffortsveryquickly.Asyoubuildyourconfidenceandabilityinthisarea,you
will gradually see the other tools as things that help you sort out
someissueorsolveaproblemthat’sstoppingyoufrommakingthepictureyouwant.Thatmakesthemeasiertolearn.Asyouacquire
thempiecemeal—perhapsinitiallyusingthemwithoutcompletely
understandingwhatishappening—youwillbegintoseehowtheyfit together and be more confident of your own ability to do whatyouneedtodo.
Even better, in the past decade or so the world of data anal-
ysis and programming generally has opened up in a way that hasmadehelpmucheasiertocomeby.Freetoolsforcodinghavebeenaroundforalongtime,butinrecentyearswhatwemightcallthe
“ecologyofassistance”hasgottenbetter.Therearemoreresources
availableforlearningthevariouspieces,andmoreofthemareori-entedtothewaywritingcodeactuallyhappensmostofthetime—which is to say, iteratively, in an error-prone fashion, and taking
accountofproblemsotherpeoplehaverunintoandsolvedbefore.
How to Use This Book
Thisbookcanbeusedinanyoneofseveralways.Ataminimum,
youcansitdownandreaditforageneraloverviewofgoodprac-ticesindatavisualization,togetherwithmanyworkedexamplesof
graphics from their beginnings to a properly finished state. Even
if you do not work through the code, you will get a good sense ofhowtothinkaboutvisualizationandabetterunderstandingoftheprocessthroughwhichgoodgraphicsareproduced.
Moreuseful,ifyousetthingsupasdescribedinchapter2and
thenworkthroughtheexamples,youwillendupwithadatavisu-
You can also bring your own data to
explore instead of or alongside theexamples, as described in chapter 2. alization book of your own. If you approach the book this way,
thenbytheendyouwillbecomfortableusingggplotinparticular
andalsobereadytolearnmoreabouttheRlanguageingeneral.
T h i sb o o kc a na l s ob eu s e dt ot e a c hw i t h ,e i t h e ra st h em a i n
f o c u so fac o u r s eo nd a t av i s u a l i z a t i o no ra sas u p p l e m e n tt o


------------------------


xvi •Preface
undergraduateorgraduatecoursesinstatisticsordataanalysis.My
aim has been to make the “hidden tasks” of coding and polishing
graphs more accessible and explicit. I want to make sure you are
not left with the “How to Draw an Owl in Three Steps” problemcommontomanytutorials.Youknowtheone.Thefirsttwostepsare shown clearly enough. Sketch a few bird-shaped ovals. Make
al i n ef o rab r a n c h .B u tt h efi n a ls t e p ,a no w ls u c ha sJ o h nJ a m e s
Audubonmighthavedrawn,ispresentedasasimpleextensionforreaderstofigureoutforthemselves.
If you have never used R or ggplot, you should start at the
beginning of the book and work your way through to the end.If you know about R already and only want to learn the core ofggplot,thenafterinstallingthesoftwaredescribedbelow,focuson
chapters3through5.Chapter6(onmodels)necessarilyincorpo-
rates some material on statistical modeling that the book cannotd e v e l o pf u l l y .T h i si sn o tas t a t i s t i c st e x t .S o ,f o re x a m p l e ,Is h o wgenerallyhowtofitandworkwithvariouskindsofmodelinchap-
ter 6, but I do not go through the important details of fitting,
selecting,andfullyunderstandingdifferentapproaches.Iprovidereferencesinthetexttootherbooksthathavethismaterialastheirmainfocus.
Eachchapterendswithasectionsuggestingwheretogonext
(apart from continuing to read the book). Sometimes I suggestother books or websites to explore. I also ask questions or posesome challenges that extend the material covered in the chapter,
encouragingyoutousetheconceptsandskillsyouhavelearned.
Conventions
Inthisbookwealternatebetweenregulartext(likethis), samples
ofcodethatyoucantypeandrunyourself,andtheoutputofthat
code. In the main text, references to objects or other things that
exist in the R language or in your R project—tables of data, vari-ables,functions,andsoon—willalsoappearin
a monospaced or
“typewriter” typeface .CodeyoucantypedirectlyintoRatthe
consolewillbeingrayboxesandalsomonospaced,likethis:
my_numbers ← c(1,1,4,1,1,4,1)
If you type that line of code into R’s console, it will create a
thing called my_numbers . Doing this doesn’t produce any output,Additional notes and information will sometimes
appear in the margin, like this.


------------------------


Preface •xvii
however.Whenwewritecodethatalsoproducesoutputatthecon-
sole,w ewillfirstseethecode(inagra ybo x)a ndthentheo u t p u t
in a monospaced font against a white background. Here we add
twonumbersandseetheresult:
4+1
## [1] 5
Two further notes about how to read this. First, by default in
this book, anything that comes back to us at the console as theresult of typing a command will be shown prefaced by two hash
characters (
##) at the beginning of each line of output. This is to
help distinguishitfrom commandswe typeintotheconsole. YouwillnotseethehashcharactersattheconsolewhenyouuseR.
Second, both in the book andat the console, if the output of
what you did results in a series of elements (numbers, observa-
tions from a variable, and so on), you will often see output thatincludes some number in square brackets at the beginning of theline. It looks like this:
[1].T h i si sn o tp a r to ft h eo u t p u ti t s e l f
butjustacounterorindexkeepingtrackofhowmanyitemshave
been printed out so far. In the case of adding 4+1we got just
one, or [1], thing back—the number five. If there are more ele-
mentsreturnedastheresultofsomeinstructionorcommand,the
counterwillkeeptrackofthatoneachline.Inthisnextbitofcode
wewilltellRtoshowusthelowercaselettersofthealphabet:
letters
## [1] "a" "b" "c" "d" "e" "f" "g" "h" "i" "j"
## [11] "k" "l" "m" "n" "o" "p" "q" "r" "s" "t"
## [21] "u" "v" "w" "x" "y" "z"
Youcanseethecounterincrementingoneachlineasitkeeps
countofhowmanylettershavebeenprinted.
Before You Begin
Thebookisdesignedforyoutofollowalonginanactiveway,writ-ing out the examples and experimenting with the code as you go.You will be able to reproduce almost all the plots in the text. You
needtoinstallsomesoftwarefirst.Hereiswhattodo:


------------------------


xviii •Preface
1 . G e tt h em o s tr e c e n tv e r s i o no fR .I ti sf r e ea n da v a i l a b l ef o r
Windows, Mac, and Linux operating systems. Download the cloud.r-project.org
versionofRcompatiblewithyouroperatingsystem.Ifyouarerunning Windows or MacOS, choose one of the precompiled
binarydistributions(i.e.,ready-to-runapplications)linkedat
thetopoftheRProject’swebpage.
2. OnceRisinstalled,downloadandinstallRStudio,whichisan
rstudio.com
“Integrated Development Environment,” or IDE. This means
itisafront-endforRthatmakesitmucheasiertoworkwith.R
StudioisalsofreeandavailableforWindows,Mac,andLinux
platforms.
3. Installthetidyverseandseveralotheradd-onpackagesforR. tidyverse.org
Thesepackagesprovideusefulfunctionalitythatwewilltake
advantageofthroughoutthebook. Youcanlearnmoreabout
thetidyverse’sfamilyofpackagesatitswebsite.
To install the tidyverse, make sure you have an internet con-
nectionandthenlaunchRStudio.Typethefollowinglinesofcode I strongly recommend typing all the code examples
right from the beginning, instead of copying andpasting. atR’scommandprompt,locatedinthewindownamed“Console,”
andhitreturn.Inthecodebelow,the ←arro wismadeupoftwo
keystrokes,first <andthentheshortdashorminussymbol, -.
my_packages ←c("tidyverse" ,"broom" ,"coefplot" ,"cowplot" ,
"gapminder" ,"GGally" ,"ggrepel" ,"ggridges" ,"gridExtra" ,
"here" ,"interplot" ,"margins" ,"maps" ,"mapproj" ,
"mapdata" ,"MASS" ,"quantreg" ,"rlang" ,"scales" ,
"survey" ,"srvyr" ,"viridis" ,"viridisLite" ,"devtools" )
install.packages (my_packages, repos = "http://cran.rstudio.com" )
RStudioshouldthendownloadandinstallthesepackagesfor
you.Itmaytakealittlewhiletodownloadeverything.
With these packages available, you can then install one last
l i b r a r yo fm a t e r i a lt h a t ’ su s e f u ls p e c i fi c a l l yf o rt h i sb o o k .I ti s github.com
hosted on GitHub, rather than R’s central package repository, so GitHub is a web-based service where users can host,
develop, and share code. It uses git, a version controlsystem that allows projects, or repositories, topreserve their history and incorporate changes fromcontributors in an organized way. weuseadifferentfunctiontofetchit.
devtools ::install_github ("kjhealy/socviz" )
Onceyou’vedonethat,wecangetstarted.


------------------------


Data Visualization


------------------------





------------------------


1 Look at Data
Some data visualizations are better than others. This chapter dis-
cusseswhythatis.Whileitistemptingtosimplystartlayingdownthelawaboutwhatworksandwhatdoesn’t,theprocessofmakinga
reallygoodorreallyusefulgraphcannotbeboileddowntoalistof
simplerulestobefollowedwithoutexceptioninallcircumstances.Thegra p h sy o umak ea r emea n ttobeloo k eda tb yso meo ne .The
effectiveness of any particular graph is not just a matter of how
it looks in the abstract but also a question of who is looking atit, and why. An image intended for an audience of experts read-ing a professional journal may not be readily interpretable by the
generalpublic.Aquickvisualizationofadatasetyouarecurrently
exploringmightnotbeofmuchusetoyourpeersoryourstudents.
Some graphs work well becausethey depend in part on some
strong aesthetic judgments about what will be effective. That sort
ofgoodjudgmentishardtosystematize.However,datavisualiza-
tion is not simply a matter of competing standards of good taste.Someapproachesworkbetterforreasonsthathavelesstodowithone’s sense of what looks good and more to do with how human
visual perception works. When starting out, it is easier to grasp
theseperceptualaspectsofdatavisualizationthanitistogetareli-able, taste-based feel for what works. For this reason, it is bettertobeginbythinkingabouttherelationshipbetweenthestructure
ofyourdataandtheperceptualfeaturesofyourgraphics.Getting
into that habit will carry you a long way toward developing theabilitytomakegoodtaste-basedjudgments,too.
As we shall see later on, when working with data in R and
ggplot, we get many visualization virtues for free. In general, the
default layout and look of ggplot’s graphics is well chosen. Thismakesiteasiertodotherightthing.Italsomeansthat,ifyou really
just want to learn how to make some plots right this minute, you
couldskipthischapteraltogetherandgostraighttothenextone.
Butalthoughwewillnotbewritinganycodeforthenextfewpages,we will be discussing aspects of graph construction, perception,andinterpretationthatmatterforcodeyouwillchoosetowrite.So


------------------------


2 •Chapter 1
Iurgeyoutostickaroundandfollowtheargumentofthischapter .
Whenmakinggraphsthereisonlysomuchthatyoursoftwarecan
dotokeepyouontherighttrack.Itcannotforceyoutobehonest
withyourself,yourdata,andyouraudience.Thetoolsyouusecan
helpyouliveuptotherigh tstandards.Buttheycannotmakeyou
dotherightthing.Thismeansitmakessensetobegincultivating
yourowngoodsenseaboutgraphsrightaway.
W ewillbeginb yaskin gwh yw esho uldbo thertoloo ka tp ic-
turesofdatainthefirstplace,insteadofrelyingontablesornumer-
ical summaries. Then we will disc uss a few examples, first of bad
visualizationpractice,andthenmorepositivelyofworkthatlooks
(andis)muchbetter.Wewillexaminetheusefulnessandlimitsof
general rules of thumb in visualization and show how even taste-
ful, well-constructed graphics can mislead us. From there we will
briefly examine some of what we know about the perception of
shapes, colors, and relationships between objects. The core point
hereisthatwearequiteliterallyabletoseesomethingsmuchmore
easily than others. These cognitive aspects of data visualization
makesomekindsofgraphsreliablyharderforpeopletointerpret.
Cognitionandperceptionarerelevantinotherways,too.Wetend
to make inferences about relationships between the objects that
w es e ei nw a y st h a tb e a ro no u ri n t e r p r e t a t i o no fg r a p h i c a ld a t a ,
f o re x a m p l e .A r r a n g e m e n t so fp o i n t sa n dl i n e so nap a g ec a n
encourage us—sometimes quite unconsciously—to make infer-
ences about similarities, clustering, distinctions, and causal rela-
tionshipsthatmightormightnotbethereinthenumbers.Some-
times these perceptual tendencies can be honestly harnessed to
makeourgraphicsmoreeffective.Atothertimes,theywilltendto
leadusastray,andwemusttakecarenottoleanonthemtoomuch.
Inshort,goodvisualizationmethodsofferextremelyvaluable
tools that we should use in the process of exploring, understand-
ing, and explaining data. But they are not a magical means of
seeing the world as it really is. They will not stop you from try-
ing to fool other people if that is what you want to do, and they
maynotstopyoufromfoolingyourselfeither .12.512
347.510.0
5.0
12.5
7.510.0
5.0
51 0 1 5 5
x valuesy values
10 15
Figure 1.1: Plots of Anscombe’s quartet.1.1 Why Look at Data?
Anscombe’s quartet (Anscombe 1973; Chatterjee & Firat 2007),
shown in figure 1.1, presents its argument for looking at data in
visualform.Itusesaseriesoffour scatterplots .Ascatterplotshows


------------------------


Look at Data •3
therelationshipbetweentwoquantities,suchasheightandweight,
age and income, or time and unemployment. Scatterplots are the
workhorse of data visualization in social science, and we will be
looking at a lot of them. The data for Anscombe’s plots comes
bundledwithR.Y oucanlookatitbytyping anscombe atthecom-
mandprompt.Eachofthefourmade-up“datasets”containseleven
observationsoftwovariables,xandy.Byconstruction,thenumer-
icalpropertiesofeachpairofxandyvariables,suchastheirmeans,
arealmostidentical.Moreover,thestandardmeasuresoftheasso-
ciation between each x and y pair also match. The correlation Correlations can run from -1 to 1, with zero meaning
there is no association. A score of -1 means a perfect
negative association and a score of 1 a perfect
positive asssociation between the two variables.
So 0.81 counts as a strong positive correlation.coefficient is a strong 0.81 in every case. But when the datasets
a r ev i s u a l i z e da sas c a t t e r p l o t ,w i t ht h exv a r i a b l e sp l o t t e do nt h e
horizontal axis and the y variables on the vertical, the differences
betweenthemarereadilyapparent.
10
9
8
7
6
5
4
3
2
1
0
0 20 40 80 100 % 60
TurnoutIncome inequality*
Key. Bivariate slope including South Africa ( N = 18)
Bivariate slope excluding South Africa ( N = 17)South Africa
Figure 1.2: Seeing the effect of an outlier on a
regression line.Anscombe’squartetisanextreme,manufacturedexample.But
the benefits of visualizing one’s data can be shown in real cases.
Figure 1.2 shows a graph from Jackman (1980), a short comment
onHewitt (1977). Theoriginalpaperhadarguedforasignificant
associationbetweenvoterturnoutandincomeinequalitybasedon
a quantitative analysis of eighteen countries. When this relation-
A more careful quantitative approach could have
found this issue as well, for example, with a proper
sensitivity analysis. But the graphic makes the case
directly.shipwasgraphedasascatterplot,however,itimmediatelybecame
clear that the quantitative association depended entirely on the
inclusionofSouthAfricainthesample.
An exercise by Jan Vanhove (2016) demonstrates the useful-
nessoflookingatmodelfitsanddataatthesametime.Figure1.3
presentsanarrayofscatterplots.AswithAnscombe’squartet,each
panel shows the association between two variables. Within each
panel, the correlation between the x and y variables is set to be
0.6,aprettygooddegreeofassociation.Buttheactualdistribution
of points is created by a different process in each case. In the top
left panel each variable is normally distributed around its mean
value.Inotherpanelsthereisasingleoutlyingpointfaroffinone
direction or another. Others are produced by more subtle rules.
Buteachgivesrisetothesamebasiclinearassociation.
Illustrations like this demonstrate why it is worth looking at
data. But that does not mean that looking at data is all one needs
to do. Real datasets are messy, and while displaying them graph-
ically is very useful, doing so presents problems of its own. As
w ew i l ls e eb e l o w ,t h e r ei sc o n s i d e r a b l ed e b a t ea b o u tw h a ts o rto f
visualworkismosteffective,whenitcanbesuperfluous,andhow
it can at times be misleading to researchers and audiences alike.
Justlikeseeminglysoberandauthoritativetablesofnumbers,data


------------------------


1. Normal x, normal residuals 2. Uniform x, normal residuals 3. + skewed x, normal residuals 4. – skewed x, normal residuals
5. Normal x, + skewed residuals 6. Normal x, - skewed residuals 7. Increasing spread 8. Decreasing spread
9. Quadratic trend 10. Sinusoid relationship 11. A single positive outlier 12. A single negative outlier
13. Bimodal residuals 14. Two groups 15. Sampling at the extremes 16. Categorical datay
x0.50
0.25
0.00
–0.250.20.750.25
0.00
–0.25
–0.500.50
0.25
0.00
–0.25
–0.500.0
–0.2
–0.4
–2 –1 0 1 2
–20.80.250.50
0.2
0.0
–0.2
–0.40.25
0.00
–0.25
01 2 34 5 01 2 3450.00
–0.25
–0.500.4
0.0
–0.2
–2 –1 0 1
–2 –1 0 1 –5.0 –2.5 0.0 2.5 5.0 8 12 34 5 4 0 –42 –4 0 4 –2.5 0.0 2.5 5.0 7.5 10.0 8 4 00.00.20.40.6
–0.4–0.20.00.2
–0.20.00.20.4
0.2
0.0
–0.20.2
0.0
–0.2
–0.40.40.21.0
0.5
0.00.5
0.00.0
–0.2
–0.4–1 0 1 –2 –1 0 1 20.25 0.50 0.75 1.00 0 250 500 750 1000 5000 4500 4000
Figure 1.3: What data patterns can lie behind a correlation? The correlation coefficient in all these plots is 0.6. Figure adapted from code by Jan
Vanhove.


------------------------


Look at Data •5
visualizations have their own rhetoric of plausibility. Anscombe’s
quartetnotwithstanding,andespeciallyforlargevolumesofdata,
summary statistics and model estimates should be thought of as
tools that we use to deliberately simplify things in a way that lets
us seepastac l o u do fd a t ap o i n t ss h o w ni nafi g u r e .W ew i l ln o t
automaticallygettherightanswertoourquestionsjustbylooking.
1.2 What Makes Bad Figures Bad?
It is traditional to begin discussions of data visualization with a“parade of horribles,” in an effort to motivate good behavior later.However, thesenegativeexamples often combineseveral kindsof
badness that are better kept separate. For convenience, we can
say that our problems tend to come in three varieties. Some arestrictlyaesthetic.T h eg r a p hw ea r el o o k i n ga ti si ns o m ew a y
tacky, tasteless, or a hodgepodge of ugly or inconsistent design
choices. Some are substantive . Here, our graph has problems that
are due to the data being presented. Good taste might makethings look better, but what we really need is to make betteruse of the data we have, or get new information and plot that
instead. And some problems are perceptual . In these cases, even
with good aesthetic qualities and good data, the graph will beconfusingormisleadingbecauseofhowpeopleperceiveandpro-cess what they are looking at. It is important to understand that
these elements, while often found together, are distinct from one
another.
Bad taste
Let’sstartwiththebadtaste. Thechartinfigure1.4bothistaste-
lessandhasfartoomuchgoingoninit,giventhemodestamount
of information it displays. The bars are hard to read and com-pare. It needlessly duplicates labels and makes pointless use of
three-dimensional effects, drop shadows, and other unnecessary
designfeatures.
Thebest-knowncriticbyfarofthisstyleofvisualization,and
the best-known taste-maker in the field, is Edward R. Tufte. His
bookThe Visual Display of Quantitative Information (1983) is a
classic,anditssequelsarealsowidelyread(Tufte1990,1997).The


------------------------


6 •Chapter 1
Figure 1.4: A chart with a considerable amount of
junk in it.
bulkofthisworkisaseriesofexamplesofgoodandbadvisualiza-
tion, along with some articulation of more general principles (or
rules of thumb) extracted from them. It is more like a reference
bookaboutcompleteddishesthanacookbookfordailyuseinthe
kitchen.Atthesametime,Tufte’searlyacademicworkinpolitical
scienceshowsthatheeffectivelyappliedhisownideastoresearch
questions. His Political Control of the Economy (1978) combines
tables,figures,andtextinamannerthatremainsremarkablyfresh
almostfortyyearslater.
Tufte’smessageissometimesfrustrating,butitisconsistent:
Graphical excellence is the well-designed presentation of interest-
ing data—a matter of substance, of statistics, and of design....
[It] consists of complex ideas communicated with clarity, preci-
sion, andefficiency.... [It]isthatwhichgivestotheviewerthe
greatest number of ideas in the shortest time with the least ink
inthesmallestspace....[It]isnearlyalwaysmultivariate....And
graphicalexcellencerequirestellingthetruthaboutthedata.(Tufte
1983,51)
TufteillustratesthepointwithCharlesJosephMinard’sfamous
visualization of Napoleon’s march on Moscow, shown here in


------------------------


Look at Data •7
Figure 1.5: Minard’s visualization of Napoleon’s
retreat from Moscow. Justifiably cited as a classic, it
is also atypical and hard to emulate in its specifics.
fi g u r e1 . 5 .H er e m a r k st h a tt h i si m a g e“ m a yw e l lb et h eb e s t
statisticalgraphiceverdrawn”andarguesthatit“tellsarich,coher-
entstorywithitsmultivariatedata,farmoreenlighteningthanjust
asinglenumberbouncingalongovertime. Sixvariablesareplot-
ted:thesizeofthearmy,itslocationonatwo-dimensionalsurface,
direction of the army’s movement, and temperature on various
datesduringtheretreatfromMoscow.”
It is worth noting how far removed Minard’s image is from
most contemporary statistical graphics. At least until recently,
these have tended to be applications or generalizations of scatter-
plotsandbarplots,inthedirectionofeitherseeingmorerawdata
or seeing the output derived from a statistical model. The former
looksforwaystoincreasethevolumeofdatavisible,orthenumber
ofvariablesdisplayedwithinapanel,orthenumberofpanelsdis-
played within a plot. The latter looks for ways to see results such
as point estimates, confidence intervals, and predicted probabil-
i t i e si na ne a s i l yc o m p r e h e n s i b l ew a y .T u ft ea c k n o w l e d g e st h a ta
tourdeforcesuchasMinard’ s“ canbedescribedandadmired,but
there are no compositional principles on how to create that one
wonderful graphic in a million.” The best one can do for “more
routine, workaday designs” is to suggest some guidelines such as
“have a properly chosen format and design,” “use words, num-
bers, and drawing together,” “display an accessible complexity of
detail,” and “avoid content-free decoration, including chartjunk”
(Tufte1983,177).
In practice those compositional principles have amounted to
an encouragement to maximize the “data-to-ink” ratio. This is
practical advice. It is not hard to jettison tasteless junk, and if


------------------------


8 •Chapter 1
we look a little harder we may find that the chart can do with-
out other visual scaffolding as well. We can often clean up the
typeface, remove extraneous colors and backgrounds, and sim-
plify,mute,ordeletegridlines,superfluousaxismarks,orneedless
keys and legends. Given all that, we might think that a solid
rule of “simpify, simplify” is almost all of what we need to make
s u r et h a to u rc h a r t sr e m a i nj u n k - f r e ea n dt h u se ff e c t i v e .U n f o r -
tunately this is not the case. For one thing, somewhat annoy-
ingly, there is evidence that highly embellished charts like Nigel
Holmes’s“MonstrousCosts”(fig.1.6)areoftenmoreeasilyrecalled
than their plainer alternatives (Bateman et al. 2010). Viewers do
not find them more easily interpretable, but they do remember
them more easily and also seem to find them more enjoyable to
look at. They also associate them more directly with value judg-
ments,asopposedtojusttryingtogetinformationacross.Borkin
et al. (2013) also found that visually unique, “infographic”-style
graphsweremorememorablethanmorestandardstatisticalvisu-
alizations. (“It appears that novel and unexpected visualizations
can be better remembered than the visualizations with limited
variability that we are exposed to since elementary school,” they
remark.)
Evenworse,itmaybethecasethatgraphicsthatreallydomax-
imize thedata-to-inkratioare harder to interpret thanthose that
arealittlemorerelaxedaboutit.E.W.Andersonetal.(2011)found
that,ofthesixkindsofboxplotshowninfigure1.7,theminimalist
version from Tufte’s own work (option C) proved to be the most
cognitively difficult for viewers to interpret. Cues like labels and
gridlines, together with some strictly superfluous embellishment
ofdatapointsorotherdesignelements,mayoftenbeanaidrather
thananimpedimenttointerpretation.
Figure 1.6: “Monstrous Costs” by Nigel Holmes
(1982). Also a classic of its kind.
ab c d e f
Figure 1.7: Six kinds of summary boxplots. Type (c) is
from Tufte. Whilechartjunkisnotentirelydevoidofmerit, bearinmind
that ease of recall is only one virtue among many for graphics.
It is also the case that, almost by definition, it is no easier to
systematize the construction of a chart like “Monstrous Costs”
than it is to replicate the impact of Minard’s graph of Napoleon’s
retreat. Indeed, the literature on chartjunk suggests that the two
may have some qualities in common. To be sure, Minard’s figure
isadmirablyrichindatawhileHolmes’sisnot.Butbotharevisu-
ally distinctive in a way that makes them memorable, both show
asubstantialamountofbespokedesign,andbothareunlikemost
ofthestatisticalgraphsyouwillseeormake.


------------------------


Look at Data •9
Bad data
In your everyday work you will be in little danger of produc-
ing either a “Monstrous Costs” or a “Napoleon’s Retreat.” You are
much more likely to make a good-looking, well-designed figure
thatmisleadspeoplebecauseyouhaveusedittodisplaysomebad
data. Well-designed figures with little or no junk in their compo-
nentpartsarenotby themselves adefenseagainstcherry-picking
your dataor presentinginformation inamisleadingway. Indeed,
it is even possible that, in a world where people are on guard
againstjunkyinfographics,the“haloeffect”accompanyingawell-
produced figure might make it easierto mislead some audiences.
Or,perhapsmorecommon,goodaestheticsdoesnotmakeitmuch
harderforyoutomisleadyourselfasyoulookatyourdata.
In November 2016 the New York Times reported on some
research on people’s confidence in the institutions of democracy.
It had been published in an academic journal by the political sci-
entists Yascha Mounk and Roberto Stefan Foa. The headline in
theTimesran“HowStableAreDemocracies?‘WarningSignsAre
FlashingRed’”(Taub2016).Thegraphaccompanyingthearticle,
reproduced in figure 1.8, certainly seemed to show an alarming
decline.
Thegraphwaswidelycirculatedonsocialmedia.Itisimpres-
sivelywellproduced.It’sanelegantsmall-multiplethat,inaddition
tothepointrangesitidentifies,alsoshowsanerrorrange(labeled
as such for people who might not know what it is), and the story
toldacrossthepanelsforeachcountryisprettyconsistent.
Percentage of people who say it is “essential” to live in a democracy
Sweden
100%
75%
50%
25%
1930s 1980s ‘30s ‘80s95%
conﬁdence
intervals
‘30s ‘80s ‘30s
Decade of birth‘80s ‘30s ‘80s ‘30s ‘80sAustralia Netherlands United States New Zealand Britain
Figure 1.8: A crisis of faith in democracy?
(Source: Roberto Stefan Foa and Yascha Mounk,
“The Signs of Deconsolidation,” Journal of
Democracy ,28(1), 5–16.)


------------------------


10 •Chapter 1
Thefigureisalittletrickytointerpret.Asthex-axislabelsays,
theunderlyingdataarefromacross-sectionalsurveyofpeopleof
differentagesratherthanalongitudinalstudymeasuringeveryone
at different times. Thus the lines do not show a trend measured
each decade from the 1930s but rather differences in the answers
givenbypeoplebornindifferentdecades,allofwhomwereasked
thequestionatthesametime.Giventhat,abargraphmighthave
beenamoreappropriatetodisplaytheresults.
More important, as the story circulated, helped by the com- One reason I chose this example is that, at the time
of writing, it is not unreasonable to be concerned
about the stability of people’s commitment to
democratic government in some Western countries.
Perhaps Mounk’s argument is correct. But in such
cases, the question is how much we are letting the
data speak to us, as opposed to arranging it to say
what we already think for other reasons.pellinggraphic,scholarswhoknewtheWorldValuesSurveydata
underlying the graph noticed something else. The graph reads
as though people were asked to say whether they thought it was
essential to live in a democracy, and the results plotted show the
percentageofrespondentswhosaid“Yes,”presumablyincontrast
to those who said “No.” But in fact the survey question asked
respondents to rate the importance of living in a democracy on
aten-pointscale,with1being“NotatallImportant”and10being
“Absolutely Important.” The graph showed the difference across
agesofpeoplewhohadgivenascoreof10only,notchangesinthe
averagescoreonthequestion.Asitturnsout,whilethereissome
variation by year of birth, most people in these countries tend to
rate the importance of living in a democracy very highly, even if
theydonotallscoreitas“AbsolutelyImportant.”Thepoliticalsci-
entist Erik Voeten redrew the figure using the average response.
Theresultsareshowninfigure1.9.
Figure 1.9: Perhaps the crisis has been overblown.
(Erik Voeten.)10Australia Netherlands Sweden Great Britain United States
9
8
7
6
5
4
3
2
1
30s 50s 70s 90s 30s 50s 70s 90s
Graph by Erik Voeten, based on WVS 530s 50s 70s
Decade of birthAverage importance of democracy
90s 30s 50s 70s 90s 30s 50s 70s 90s


------------------------


Look at Data •11
T h ec h a n g eh e r ei s notd u et oad i ff e r e n c ei nh o wt h ey - a x i s
is drawn. That is a common issue with graphs, and one we will
d i s c u s sb e l o w .I nt h i sc a s eb o t ht h e New York Times graph and
Voeten’s alternative have scales that cover the full range of pos-sible values (from 0 to 100% in the former case and from 1 to 10in the latter). Rather, a different measure is being shown. We are
nowlookingatthetrendintheaveragescore,ratherthanthetrend
forthehighestpossibleanswer.Substantively,there doesstillseem
to be a decline in the average score by age cohort, on the order
of between 0.5 point and 1.5 points on a 10-point scale. It could
beanearlywarningsignofacollapseofbeliefindemocracy,oritcouldbeexplainedbysomethingelse.Itmightevenbereasonable(a sw ewillseef o radiff er en texa m p les h o rtl y)t op r esen tth eda ta
in Voeten’s version with the y-axis covering just the range of the
decline,ratherthanthefull0–10scale.Butitseemsfairtosaythatthestorymightnothavemadethe New York Times iftheoriginal
research article had presented Voeten’s version of the data rather
thantheonethatappearedinthenewspaper.
Bad perception
Our third category of badness lives in the gap between data and
aesthetics. Visualizations encode numbers in lines, shapes, andcolors. That means that our interpretation of these encodings ispartlyconditionalonhowweperceivegeometricshapesandrela-
tionships generally. We have known for a long time that poorly
encoded data can be misleading. Tufte (1983) contains manyexamples, as does Wainer (1984). Many of the instances they citerevolve around needlessly multiplying the number of dimensions
s h o w ni nap l o t .U s i n ga na r e at or e p r e s e n tal e n g t h ,f o re x a m -
ple, can make differences between observations look larger thantheyare.
Although the most egregious abuses are less common than
they once were, adding additional dimensions to plots remains a
common temptation. Figure 1.10, for instance, is a 3-D bar chartmadeusingarecentversionofMicrosoftExcel.Chartslikethisarecommoninbusinesspresentationsandpopularjournalismandare
alsoseeninacademicjournalarticlesfromtimetotime. Herewe
seek to avoid too much junk by using Excel’s default settings. As
To be fair, the 3-D format is not Excel’s default type
of bar chart.


------------------------


12 •Chapter 1
Figure 1.10: A 3-D column chart created
in Microsoft Excel for Mac. Although it may
seem hard to believe, the values shown in the
b a r sa r e1 ,2 ,3 ,a n d4 .A
B
C
D1
2
3
44
3
2
1
0
ABCD3D column charts in excel are awesome
youcanseefromthecellsshowntotheleftofthechart,thedatawe
aretryingtoplotisnotverycomplex.Thecharteventriestohelp
usbydrawingandlabelinggridlinesonthey-(andz-)axes.And
yetthe3-Dcolumnsincombinationwiththedefaultangleofview
forthechartmakethevaluesasdisplayeddiffersubstantiallyfrom
theonesactuallyinthecell.Eachcolumnappearstobesomewhat
belowitsactualvalue.Itispossibletosee,ifyousquintwithyour
mind’s eye, how the columns would line up with the axis guide-
lines if your angle of view moved so that the bars were head-on.
B u ta si ts ta n d s,a n y o n ea s k edwh a tval uesth ec h a rts h o wsw o uld
givethewronganswer.
B yn o w ,m a n yr e g u l a ru s e r so fs t a t i s t i c a lg r a p h i c sk n o w
enough to avoid excessive decorative embellishments of charts.
They are also usually put on their guard by overly elaborate pre-
sentation of simple trends, as when a three-dimensional ribbon
is used to display a simple line. Moreover, the default settings of
mostcurrentgraphicalsoftwaretendtomaketheuserworkalittle
hardertoaddthesefeaturestoplots.
Even when the underlying numbers are sensible, the default
settings of software are good, and the presentation of charts is
mostly junk-free, some charts remain more difficult to interpret
thanothers.Theyencodedatainwaysthatarehardforviewersto
understand. Figure 1.11 presents a stacked bar chart with time in
years on the x-axis and some value on the y-axis. The bars show
the total value, with subdivisions by the relative contribution of
different categoriestoeachyear’s observation. Chartslikethisare
commonwhenshowingtheabsolutecontributionofvariousprod-
uctstototalsalesovertime,forexample,orthenumberofdifferent
groups of people in a changing population. Equivalently, stacked


------------------------


Look at Data •13
2000
1500
1000
500
0
2004 2007 2010 2013 2016
YearValueType A B C D
Figure 1.11: A junk-free plot that remains hard to
interpret. While a stacked bar chart makes the
overall trend clear, it can make it harder to see the
trends for the categories within the bar. This is partly
due to the nature of the trends. But if the additional
data is hard to understand, perhaps it should not be
included to begin with.
4000
3000
2000
1000
0
02 4 68xValue4000
3000
2000
1000
0
02468xValueFigure 1.12: Aspect ratios affect our perception of
rates of change. (After an example by William S.
Cleveland.)
line-graphs showing similar kinds of trends are also common for
datawithmanyobservationpointsonthex-axis,suchasquarterly
observationsoveradecade.
In a chart like this, the overall trend is readily interpretable,
a n di ti sal sopos si b let oea sil yf o llo wth eo v er -tim epa t t erno fth e
category that is closest to the x-axis baseline (in this case, type D,
inpurple).Butthefortunesoftheothercategoriesarenotsoeasily
grasped.Comparisonsofboththeabsoluteandtherelativeshareof
typeBorCaremuchmoredifficult,whetheronewantstocompare
trends within type or between them. Relative comparisons need
a stable baseline. In this case, that’s the x-axis, which is why the
overalltrendandthetypeDtrendaremucheasiertoseethanany
othertrend.
Adifferentsortofproblemisshowninfigure1.12. Intheleft
panel, the lines appear at first glance to be converging as the
value of x increases. It seems like they might even intersect if
we extended the graph out further. In the right panel, the curves
areclearlyequidistantfromthebeginning.Thedataplottedineach
panel is the same, however. The apparent convergence in the left
panelisjustaresultoftheaspectratioofthefigure.


------------------------


14 •Chapter 1
Theseproblemsarenoteasilysolvedbytheapplicationofgood
taste, or by following a general rule to maximize the data-to-ink
ratio,eventhoughthatisagoodruletofollow.Instead,weneedto
knowalittlemoreabouttheroleofperceptionintheinterpretation
of graphs. Fortunately for us, this is an area that has produced a
substantialamountofresearchoverthepasttwenty-fiveyears.
1.3 Perception and Data Visualization
While a detailed discussion of visual perception is well beyond
the scope of this book, even a simple sense of how we see things
will help us understand why some figures work and others do
not. For a much more thorough treatment of these topics, Colin
Ware’s books on information design are excellent overviews of
researchonvisualperception,writtenfromtheperspectiveofpeo-
ple designing graphs, figures, and systems for representing data
(Ware2008,2013).
Edges, contrasts, and colors
Looking at pictures of data means looking at lines, shapes, and
colors. Our visual system works in a way that makes some things
easier for us to see than others. I am speaking in slightly vague
terms here because the underlying details are the remit of vision
science, and the exact mechanisms responsible are often the sub-
jectofongoingresearch.Iwillnotpretendtosummarizeorevalu-
atethismaterial.Inanycase,independentofdetailedexplanation,
theexistenceoftheperceptualphenomenathemselvescanoftenbe
directly demonstrated through visual effects or “optical illusions”
ofvariouskinds. Theseeffectsdemonstratethatperceptionisnot
a simple matter of direct visual inputs producing straightforward
mentalrepresentationsoftheircontent.Rather,ourvisualsystem
is tuned to accomplish some tasks very well, and this comes at a
costinotherways.
Figure 1.13: Hermann grid effect.Theactivenatureofperceptionhaslongbeenrecognized.The
Hermanngrideffect,showninfigure1.13,wasdiscoveredin1870.
Ghostly blobs seem to appear at the intersections in the grid but
onlyaslongasoneisnotlookingatthemdirectly.Arelatedeffect
isshowninfigure1.14.Theseare Machbands .Whenthegraybars
share a boundary, the apparent contrast between them appears to


------------------------


Look at Data •15
Figure 1.14: Mach bands. On the left side, five gray
bars are ordered from dark to light, with gaps
between them. On the right side, the bars have no
gap between them. The brightness or luminance of
the corresponding bars is the same. However, when
the bars touch, the dark areas seem darker and the
light areas lighter.
increase.Speakingloosely,wecansaythatourvisualsystemistry-
ingtoconstructarepresentationofwhatitislookingatbasedmore
onrelativedifferencesintheluminance(orbrightness)ofthebars
ratherthanontheirabsolutevalue.Similarly,theghostlyblobsin
the Hermann grid effect can be thought of as a side-effect of the
visualsystembeingtunedforadifferenttask.
These sorts of effects extend to the role of background con-
trasts.Thesameshadeofgraywillbeperceiveddifferentlydepend-
ingonwhetheritisagainstadarkbackgroundoralightone.Our
ability to distinguish shades of brightness is not uniform either.
We are better at distinguishing dark shades than we are at distin-
guishing light ones. The effects interact, too. We will do better at
distinguishing very light shades of gray when they are set against
a light background. When set against a dark background, differ-
encesinthemiddlerangeofthelight-to-darkspectrumareeasier
todistinguish.
Our visual system is attracted to edges, and we assess con-
trastandbrightnessintermsofrelativeratherthanabsolutevalues.
Someofthemorespectacularvisualeffectsexploitourmostlysuc-
cessfuleffortstoconstructrepresentationsofsurfaces,shapes,and
objects based on what we are seeing. Edward Adelson’s checker-
shadowillusion,showninfigure1.15,isagoodexample.Though
hardtobelieve,thesquaresmarked“ A ”and“B”arethesameshade
ofgray.
Tofigureouttheshadeofthesquaresonthefloor,wecompare
it to the nearby squares, and we also discount the shadows cast
by other objects. Even though a light-colored surface in shadow
mightreflectlesslightthanadarksurfaceindirectlight,itwould
generallybeanerrortoinferthatthesurfaceintheshadereallywas
adarkercolor.Thecheckerboardimageiscarefullyconstructedto
exploit these visual inferences made based on local contrasts in
brightnessandtheinformationprovidedbyshadows.AsAdelson
(1995) notes, “The visual system is not very good at being a
physical light meter, but that is not its purpose.” Because it has


------------------------


16 •Chapter 1
Figure 1.15: The checkershadow illusion
(Edward H. Adelson).
evolved to be good at perceiving real objects in its environment,
weneedtobeawareofhowitworksinsettingswhereweareusing
ittodootherthings,suchaskeyingvariablestosomespectrumof
grayscalevalues.
A ni m p o r t a n tp o i n ta b o u tv i s u a le ff e c t so ft h i sk i n di st h a t
they are not illusions in the way that a magic trick is an illusion.
Ifamagiciantakesyouthroughanillusionstepbystepandshows
youhowitisaccomplished,thenthenexttimeyouwatchthetrick
performed you will see through it and notice the various bits of
misdirectionandsleightofhandthatareusedtoachievetheeffect.
But the most interesting visual effects are not like this. Even after
they have been explained to you, you cannot stop seeing them,
b e c a u s et h ep e r c e p t u a lp r o c e s s e st h e ye x p l o i ta r en o tu n d e ry o u r
conscious control. This makes it easy to be misled by them, as
when(forexample)weoverestimatethesizeofacontrastbetween
two adjacent shaded areas on a map or grid simply because they
shareaboundary.
Figure 1.16: Edge contrasts in monochrome and
color, after Ware (2008).O u ra b i l i t yt ose ee d g ec o n t r a s t si ss t r o n g e rf o rm o n oc h r o m e
images than for color. Figure 1.16, from Ware (2008, 71), shows
an image of dunes. In the red-green version, the structure of the
landscape is hard to perceive. In the grayscale version, the dunes
andridgesaremuchmoreeasilyvisible.
Usingcolorindatavisualizationintroducesanumberofother
complications(Zeileis&Hornik2006). Thecentraloneisrelated
to the relativity of luminance perception. As we have been dis-
cussing, our perception of how bright something looks is largely
a matter of relative rather than absolute judgments. How bright a
surface looks depends partly on the brightness of objects near it.
In addition to luminance, the color of an object can be thought
ofhashavingtwoothercomponents.First,anobject’s hueiswhat
we conventionally mean when we use the word “color”: red, blue,


------------------------


Look at Data •17
green, purple, and so on. In physical terms it can be thought of
asthedominantwavelengthofthelightreflectedfromtheobject’s
surface.Thesecondcomponentis chrominance orchroma.Thisis
theintensityorvividnessofthecolor.
Toproducecoloroutputonscreensorinprintweusevarious
color models that mix together color components to get specific
outputs.UsingtheRGBmodel,acomputermightrepresentcolor
in terms of mixtures of red, green, and blue components, each of
whichcantakearangeofvaluesfrom0to255.Whenusingcolors
inagraph,wearemappingsomequantityorcategoryinourdata
toacolorthatpeoplesee.Wewantthatmappingtobe“accurate”in
somesense,withrespecttothedata.Thisispartlyamatterofthe
mapping being correct in strictly numerical terms. For instance,
we want the gap between two numerical values in the data to be
meaningfullypreservedinthenumericalvaluesusedtodefinethe
c o l o r ss h o w n .B u ti ti sa l s op a r t l yam a t t e ro fh o wt h a tm a p p i n g
willbeperceivedwhenwelookatthegraph.
For example, imagine we had a variable that could take val-
ues from 0 to 5 in increments of 1, with zero being the lowest
value.ItisstraightforwardtomapthisvariabletoasetofRGBcol-
ors that are equally distant from one another in purely numerical
termsinourcolorspace.Thewrinkleisthatmanypointsthatare
equidistant from each other in this sense will not be perceived as
equallydistantbypeoplelookingatthegraph.Thisisbecauseour
perception is not uniform across the space of possible colors. For
instance,therangeofchromaweareabletoseedependsstrongly
onluminance. Ifwepickthewrongcolorpalettetorepresentour
data,foranyparticulargradientthesame-sizedjumpbetweenone
value and another (e.g., from 0 to 1, as compared to from 3 to 4)
mightbeperceiveddifferentlybytheviewer.Thisalsovariesacross
colors, in that numerically equal gaps between a sequences of
reds(say)areperceiveddifferentlyfromthesamegapsmappedto
blues.Sequential grayscale
Sequential blue to gray
Sequential terrain
Diverging
Unordered hues
Figure 1.17: Five palettes generated from R’s color
space library. From top to bottom, the sequential
grayscale palette varies only in luminance, or
brightness. The sequential blue palette varies in
both luminance and chrominance (or intensity).
The third sequential palette varies in luminance,
chrominance, and hue. The fourth palette is
diverging, with a neutral midpoint. The fifth features
balanced hues, suitable for unordered categories.When choosing color schemes, we will want mappings from
datatocolorthatarenotjustnumericallybutalso perceptually uni-
form.Rprovidescolormodelsandcolorspacesthattrytoachieve
this. Figure 1.17 shows a series of sequential gradients using the
HCL (hue-chroma-luminance)color model. The grayscalegradi-
en ta ttheto pvariesb yl uminanceo nly .Thebl uepalettevariesb y
luminanceandchrominance,asthebrightnessandtheintensityof
the color vary across the spectrum. The remaining three palettes


------------------------


18 •Chapter 1
varybyluminance,chrominance,andhue.Thegoalineachcaseis
togenerateaperceptuallyuniformscheme, wherehopsfromone
leveltothenextareseenashavingthesamemagnitude.
Gradients or sequential scales from low to high are one of
three sorts of color palettes. When we are representing a scalewith a neutral midpoint (as when we are showing temperatures,
forinstance, orvarianceineitherdirectionfromazeropointora
meanvalue),wewanta diverging scale,wherethestepsawayfrom
themidpointareperceptuallyeveninbothdirections.Theblue-to-
red palette in figure 1.17 displays an example. Finally, perceptual
uniformitymattersforunorderedcategoricalvariablesaswell.Weoften use color to represent data for different countries, or politi-cal parties, or types of people, and so on. In those cases we want
thecolorsinour qualitative palettetobeeasilydistinguishablebut
a l s oh a v et h es a m ev a l e n c ef o rt h ev i e w e r .U n l e s sw ea r ed o i n gi tdeliberately, we do not want one color to perceptually dominatetheothers.Thebottompaletteinfigure1.17showsanexampleof
aqualitativepalettethatisperceptuallyuniforminthisway .
Theupshotisthatweshouldgenerallynotpickcolorsinanad
hocway.Itistooeasytogoastray.Inadditiontotheconsiderationswe have been discussing, we also want to avoid producing plots
thatconfusepeoplewhoarecolor-blind,forexample.Fortunately,
almost all the work has been done for us already. Different colorspaces have been defined and standardized in ways that accountfor these uneven or nonlinear aspects of human color percep-
tion.Randggplotmakethesefeaturesavailabletousforfree.The
The body responsible for this is the appropriately
authoritative-sounding Commission Internationalede l’Eclairage, or International Commission onIllumination. default palettes we will be using in ggplot are perceptually uni-
form in the right way. If we want to get more adventurous later,t h et o o l sa r ea v a i l a b l et op r o d u c ec u s t o mp a l e t t e st h a ts t i l lh a v e
desirableperceptualqualities.Ourdecisionsaboutcolorwillfocus
more on when and how it should be used. As we are about tosee,colo risapo w erfulcha nnelf o rp ickin go u tvisualelemen tso finterest.
Preattentive search and what “pops”
Someobjectsinourvisualfieldareeasiertoseethanothers.Theypop out at us from whatever they are surrounded by. For some
kinds of object, or through particular channels, this can happen
very quickly. Indeed, from our point of view it happens before or


------------------------


Look at Data •19
Color only, N = 20 Color only, N = 100 Shape only, N = 20 Shape only, N = 100 Color & shape, N = 100
Figure 1.18: Searching for the blue circle becomes progressively harder.
almost before the conscious act of looking at or for something.
The general term for this is “preattentive pop-out,” and there is
an extensive experimental and theoretical literature on it in psy-
chologyandvisionscience.Aswiththeotherperceptualprocesses
wehavebeendiscussing,theexplanationforwhatishappeningis
or has been a matter of debate, up to and including the degree to
which the phenomenon really is “preattentive,” as discussed, for
example,byTreisman&Gormican(1988)orNakayama&Joseph
(1998). But it is the existence of pop-out that is relevant to us,
ra thertha ni tsexp la na tio n.P o p-o u tmak esso methin gso nada ta
graphiceasiertoseeorfindthanothers.
Considerthepanelsinfigure1.18.Eachoneofthemcontains
asinglebluecircle.Thinkofitasanobservationofinterest.Read-
ing left to right, the first panel contains twenty circles, nineteen
of which are yellow and one blue. The blue circle is easy to find,
astherearearelativelysmallnumberofobservationstoscan,and
their color is the only thing that varies. The viewer barely has to
searchconsciouslyatallbeforeseeingthedotofinterest.
In the second panel, the search is harder, but not that much
harder.Thereareahundreddotsnow,fivetimesasmany,butagain
thebluedotiseasilyfound.Thethirdpanelagainhasonlytwenty
observations. Butthistimethere isnovariationon color. Instead
nineteenobservationsaretrianglesandoneisacircle.Onaverage,
lookingforthebluedotisnoticeablyharderthansearchingforitin
thefirstpanel,anditmayevenbemoredifficultthaninthesecond
paneldespitetherebeingmanyfewerobservations.
T h i nko fs h a pea n dc o l o ra stw od i s ti n ct channelsthatcanbe
usedtoencodeinformationvisually.Itseemsthatpop-outonthe


------------------------


20 •Chapter 1
color channel is stronger than it is on the shape channel. In the
fourth panel, the number of observations is again upped to one
hundred. Finding the single blue dot may take noticeably longer.
If you don’t see it on the first or second pass, it may require a
consciouseffort tosystematicallyscantheareainorder tofindit.
It seems that search performance on the shape channel degrades
muchfasterthanonthecolorchannel.
Finallythefifthpanelmixescolorandshapeforalargenum-
berofobservations.Againthereisonlyonebluedotonthegraph,
butannoyinglytherearemanybluetrianglesandyellowdotsthat
makeithardertofindwhatwearelookingfor.Dual-ormultiple-
channel searches for large numbers of observations can be very
slow.
Similar effects can be demonstrated for search across other
channels (for instance, with size, angle, elongation, and move-
ment) and for particular kinds of searches within channels. For
example,somekindsofanglecontrastsareeasiertoseethanoth-
ers, as are some kinds of color contrasts. Ware (2008, 27–33) has
morediscussionandexamples.Theconsequencesfordatavisual-
izationareclearenough.Asshowninfigure1.19,addingmultiple
channels to a graph is likely to quickly overtax the capacity of
the viewer. Even if our software allows us to, we should think
carefully before representing different variables and their values
by shape, color, and position all at once. It is possible for there
to be exceptions, in particular (as shown in the second panel of
13
12
11
10
9
8 9 10 11 12
Tea7Biscuits13
12
11
10
9
8 9 10 11 12
Tea78Biscuits
8
Figure 1.19: Multiple channels become uninterpretable very fast ( left), unless your data has a great deal of structure ( right ).


------------------------


Look at Data •21
figure1.19)ifthedatashowsagreatdealofstructuretobeginwith.
Butevenhere,inallbutthemoststraightforwardcasesadifferent
visualizationstrategyislikelytodobetter.
Gestalt rules
At first glance, the points in the pop-out examples in figure 1.18
mightseemrandomlydistributedwithineachpanel. Infact, they
arenotquiterandomlylocated.Instead,Iwrotealittlecodetolay
t h e mo u ti naw a yt h a ts p r e a dt h e ma r o u n dt h ep l o t t i n ga r e ab u t
preventedanytwopointsfromcompletelyorpartiallyoverlapping
each other. I did this because I wanted the scatterplots to be pro-
grammaticallygeneratedbutdidnotwanttotaketheriskthatthe
b l u ed o tw o u l de n du pp l o t t e du n d e r n e a t ho n eo ft h eo t h e rd o t s
ortriangles.It’sworthtakingacloserlookatthiscase,asthereisa
lessonhereforhowweperceivepatterns.
Each panel in figure 1.20 shows a field of points. There are
clearly differences in structure between them. The first panel
was produced by a two-dimensional Poisson point process and is
“properly”random.(Definingrandomness,orensuringthatapro-
cess really is random, turns out to be a lot harder than you might
think.Butweglossoverthosedifficultieshere.)Thesecondpanel
wasproducedfromaMatérnmodel,aspecificationoftenfoundin
spatial statisticsand ecology. I namodellikethispointsareagain
randomly distributed but are subject to some local constraints.
In this case, after randomly generating a number of candidate
points in order, the field is pruned to eliminate any point that
appears too close to a point that was generated before it. We can
tune the model to decide how close is “too close.” The result is a
setofpointsthatareevenlyspreadacrosstheavailablespace.Poisson
Matérn
Figure 1.20: Each panel shows simulated data.
The upper panel shows a random point pattern
generated by a Poisson process. The lower panel
is from a Matérn model, where new points are
randomly placed but cannot be too near already-
existing ones. Most people see the Poisson-
generated pattern as having more structure, or less
“randomness,” than the Matérn, whereas the reverse
is true.Ifyouaskpeoplewhichofthesepanelshasmorestructurein
it,theywilltendtosaythePoissonfield.Weassociaterandomness
witharelativelyevendistributionacrossaspace.Butinfact,aran-
domprocesslikethisissubstantiallymoreclumpythanwetendto
think. I first saw a picture of this contrast in an essay by Stephen
JayGould(1991).TheretheMatérn-likemodelwasusedasarep-
resentationofglowwormsonthewallofacaveinNewZealand.It’s
agoodmodelforthatcasebecauseifoneglowwormgetstooclose
to another, it’s liable to get eaten. Hence the relatively even—but
notrandom—distributionthatresults.


------------------------


22 •Chapter 1
Figure 1.21: Gestalt inferences: proximity, similarity,
connection, common fate. The layout of the figure
employs some of these principles, in addition to
displaying them.
Welookforstructureallthetime.Wearesogoodatitthatwe
willfinditinrandomdata,giventime.(Thisisoneofthereasons
that data visualization can hardly be a replacement for statisti-
calmodeling.)Thestronginferenceswemakeaboutrelationships
between visual elements from relatively sparse visual information
are called “gestalt rules.” They are not pure perceptual effects like
the checkerboard illusions. Rather, they describe our tendency to
infer relationships between the objects we are looking at in a way
thatgoesbeyondwhatisstrictlyvisible.Figure1.21providessome
examples.
What sorts of relationships are inferred, and under what cir-
cumstances? In general we want to identify groupings, classifica-
tions, or entities than can be treated as the same thing or part of
thesamething:
•Proximity :T h i n g st h a ta r es p a t i a l l yn e a rt oo n ea n o t h e rs e e m
toberelated.
•Similarity :Thingsthatlookalikeseemtoberelated.
•Connection : Things that are visually tied to one another seem
toberelated.
•Continuity : Partially hidden objects are completed into famil-
iarshapes.
•Closure:Incompleteshapesareperceivedascomplete.
•Figureandground :Visualelementsaretakentobeeitherinthe
foregroundorinthebackground.
•Common fate : Elements sharing a direction of movement are
perceivedasaunit.


------------------------


Look at Data •23
S o m ek i n d so fv i s u a lc u e so u t w e i g ho t h e r s .F o re x a m p l e ,i n
the upper left of figure 1.21, the circles are aligned horizontally
intorows,buttheirproximitybycolumntakespriority,andwesee
threegroupsofcircles.Intheupperright,thethreegroupsarestillsalientbuttherowofbluecirclesisnowseenasagroupedentity.Inthemiddlerowofthefigure,theleftsideshowsmixedgroupingby
shape, size, and color. Meanwhile the right side of the row shows
thatdirectconnectionoutweighsshape.Finallythetwoschematicplots in the bottom row illustrate both connection and common
fate, in that the lines joining the shapes tend to be read left-to-
rightaspartofaseries.Notealsothepointsinthelowerrightplotwhere the lines cross. There are gaps in the line segments joiningthecircles, butweperceivethisasthem“passingunderneath”the
linesjoiningthetriangles.
1.4 Visual Tasks and Decoding Graphs
Theworkingsofourvisualsystemandourtendencytomakeinfer-
encesaboutrelationshipsbetweenvisibleelementsformthebasisof our ability to interpret graphs of data. There is more involved
besides that, however. Beyond core matters of perception lies the
question of interpreting and understanding particular kinds ofgraphs.Theproportionofpeoplewhocanreadandcorrectlyinter-pret a scatterplot is lower than you might think. At the intersec-
tion of perception and interpretation there are specific visual
tasks that people need to perform in order to properly see thegraph in front of them. To understand a scatterplot, for example,the viewer needs to know a lot of general information, such as
w h a tav a r i a b l ei s ,w h a tt h ex - yc o o r d i n a t ep l a n el o o k sl i k e ,w h y
we might want to compare two variables on it, and the conven-tion of putting the supposed cause or “independent” variable onthe x-axis. Even if viewers understand all these things, they must
stillperformthevisualtaskofinterpretingthegraph.Ascatterplot
i sav i s u a l representation of data, not a way to magically transmit
pure understanding. Even well-informed viewers may do worsethanwethinkwhenconnectingthepicturetotheunderlyingdata
(Doherty,etal.2007;Rensink&Baldridge2010).
In the 1980s William S. Cleveland and Robert McGill con-
ductedsomeexperimentsidentifyingandrankingthesestasksfordifferenttypesofgraphics(Cleveland&McGill,1984,1987).Most


------------------------


24 •Chapter 1
Position1100
0
23 4 5 6 7 9 8
Length Angle Circular
areaRectangular
area
Figure 1.22: Schematic representation of basic perceptual tasks for nine chart types, by Heer and Bostock, following Cleveland and McGill. In both
studies, participants were asked to make comparisons of highlighted portions of each chart type and say which was smaller.
often,researchsubjectswereaskedtoestimatetwovalueswithina
chart (e.g., two bars in a bar chart, or two slices of a pie chart) or
comparevaluesbetweencharts(e.g.,twoareasinadjacentstacked
bar charts). Cleveland went on to apply the results of this work,
developingthetrellisdisplaysystemfordatavisualizationinS,the
statistical programming language developed at Bell Labs. (R is a
laterimplementationofS.)Healsowrotetwoexcellentbooksthat
describeandapplytheseprinciples(Cleveland1993,1994).
In 2010 Heer & Bostock replicated Cleveland’s earlier exper-
iments and added a few assessments, including evaluations of
rectangular-area graphs, which have become more popular in
recent years. These include treemaps, where a square or rectan-
gleissubdividedintofurtherrectangularareasrepresentingsome
proportionorpercentageofthetotal.Itlooksalittlelikeastacked
barchartwithmorethanonecolumn.Thecomparisonsandgraph
types made by their research subjects are shown schematically in
figure 1.22. For each graph type, subjects were asked to identify
the smaller of two marked segments on the chart and then to
“make a quick visual judgment” estimating what percentage the
smaller one was of the larger. As can be seen from the figure, the
charts tested encoded data in different ways. Types 1–3 use posi-
tionencodingalongacommonscalewhiletypes4and5uselength
encoding.Thepiechartencodesvaluesasangles,andtheremain-
ingchartsasareas,usingeithercircular,separaterectangles(asin
acartogram)orsubrectangles(asinatreemap).
Their results are shown in figure 1.23, along with Cleveland
and McGill’s original results for comparison. The replication was
quite good. The overall pattern of results seems clear, with per-
formanceworseningsubstantiallyaswemoveawayfromcompar-
ison on a common scale to length-based comparisons to angles
and finally areas. Area comparisons perform even worse than the
(justifiably)malignedpiechart.


------------------------


Look at Data •25
Cleveland & McGill’s results
Crowdsourced resultsT1
T2
T3
T4
T5
T1
T2
T3
T4
T5
T6
T7
T8
T91.0 1.5 2.0
Log error3.0 2.5
1.0 1.5 2.0
Log error3.0 2.5Figure 1.23: Cleveland and McGill’s original results
(top) and Heer and Bostock’s replication with
additions ( bottom ) for nine chart types.
Thesefindings,andotherworkinthistradition,stronglysug-
gest that there are better and worse ways of visually representing
datawhenthetasktheusermustperforminvolvesestimatingand
co m pa rin gval ueswi thinth egra p h.Thinko fthi sa sa“ decodin g ”
operation that the viewer must perform in order to understand
the content. The data values were encoded or mapped in to the
graph, andnowwehavetogetthembackoutagain. Whendoing
this, we do best judging the relative position of elements aligned
onacommonscale ,as,forexample,whenwecomparetheheights
o fb a r so nab a rc h a r t ,o rt h ep o s i t i o no fd o t sw i t hr e f e r e n c et oa
fixed x-or y-axis. When elements are not aligned but stillshare a
scale, comparison isalittleharderbutstillprettygood. Itismore
difficult again to compare the lengths of lines without a common
baseline.
Outside of position and length encodings, things generally
becomeharderandthedecodingprocessismoreerrorprone.We
tend to misjudge quantities encoded as angles. The size of acute
angles tends to be underestimated, and the size of obtuse angles


------------------------


26 •Chapter 1
overestimated.Thisisonereasonpiechartsareusuallyabadidea.
Wealsomisjudge areaspoorly.W ehaveknownforalongtimethat
area-based comparisons of quantitiesare easily misinterpreted or
exaggerated.Forexample,valuesinthedatamightbeencodedaslengths, which are then squared to make the shape on the graph.Theresultisthatthedifferenceinsizebetweenthesquaresorrect-
anglesareawillbemuchlargerthanthedifferencebetweenthetwo
numberstheyrepresent.
Comparingtheareasofcirclesispronetomoreerroragain,for
the same reason. It is possible to offset these problems somewhat
by choosing a more sophisticated method for encoding the dataas an area. Instead of letting the data value be the length of theside of a square or the radius of the circle, for example, we could
mapthevaluedirectlytoareaandback-calculatethesidelengthor
radius.Still,theresultwillgenerallynotbeasgoodasalternatives.Theseproblemsarefurthercompoundedfor“three-dimensional”shapeslikeblocks,cylinders,orspheres,whichappeartorepresent
volumes. And as saw with the 3-D bar chart in figure 1.10, the
perspectiveorimpliedviewinganglethataccompaniesthesekindsofchartscreatesotherproblemswhenitcomestoreadingthescaleonay-axis.
Finally, we find it hard to judge changes in slope .T h ee s t i m a -
tion of rates of change in lines or trends is strongly conditionedby the aspect ratio of the graph, as we saw in figure 1.12. Ourrelativelyweakjudgmentofslopesalsointeractsbadlywiththree-
dimensionalrepresentationsofdata.Ourabilitytoscanthe“away”
dimensionofdepth(alongthez-axis)isweakerthanourabilitytoscan the x- and y-axes. For this reason, it can be disproportion-ately difficult to interpret data displays of point clouds or surfaces
displayed with three axes. They can look impressive, but they are
alsohardertograsp.
1.5 Channels for Representing Data
Graphicalelementsrepresentourdatainwaysthatwecansee.Dif-ferentsortsofvariablesattributescanberepresentedmoreorless
well by different kinds of visual marks or representations, such
as points, lines, shapes, and colors. Our task is to come up withm e t h od st h a te n c od eo rm a pv a r i a b l e si nt h er i gh tw a y .A sw ed othis,wefaceseveralconstraints.First,thechannelormappingthat


------------------------


Look at Data •27
wechooseneedstobecapableofrepresentingthekindofdatathat
wehave.Ifwewanttopickoutunorderedcategories,forexample,
choosing a continuous gradient to represent them will not make
much sense. If our variable is continuous, it will not be helpful to
representitasaseriesofshapes.
Area (2D as size)
Depth
(3D as position)
Color Iuminance
or brightness
Color saturation
or intensity
Curvature
Volume
(3D as size)Position on
a common scale
Position on
unaligned
scales
Length
Tilt or Angle05 1 0
05 1 0
05 1 0
Figure 1.24: Channels for mapping ordered data
(continuous or other quantitative measures),
arranged top to bottom from more to less effective,
after Munzer (2014, 102).Second, given that the data canbe comprehensibly repre-
sentedbythevisualelementwechoose,wewillwanttoknowhow
effective that representation is. This was the goal of Cleveland’s
research. Following Tamara Munzer (2014, 101–3), Figures 1.24
and 1.25 present an approximate ranking of the effectiveness of
differentchannelsfororderedandunordereddata,respectively.If
we have ordered data and we want the viewer to efficiently make
c o m p a r i s o n s ,t h e nw es h o u l dt r yt oe n c o d ei ta sap o s i t i o no n
a common scale. Encoding numbers as lengths (absent a scale)
workstoo,butnotaseffectively.Encodingthemasareaswillmake
comparisonslessaccurateagain,andsoon.
Third,theeffectivenessofourgraphicswilldependnotjuston
thechannelthatwechoosebutontheperceptualdetailsofhowwe
implementit.So,ifwehaveameasurewithfourcategoriesordered
from lowest to highest, we might correctly decide to represent it
using a sequence of colors. But if we pick the wrong sequence,
the data will still be hard to interpret, or actively misleading. In
a similar way, if we pick a bad set of hues for an unordered cate-
g o ricalva ria b le ,th er es ul tmigh tn o tj u s tbeun p lea sa n tt oloo ka t
butactivelymisleading.
Finally,bearinmindthatthesedifferentchannelsormappings
fordataarenotinthemselveskindsofgraphs.Theyarejusttheele-
ments or building blocks for graphs. When we choose to encode
av a r i a b l ea sap o s i t i o n ,al e n g t h ,a na r e a ,as h a d eo fg r a y ,o ra
color, we have made an important decision that narrows down
w h a tt h er e s u l t i n gp l o tc a nl o o kl i k e .B u tt h i si sn o tt h es a m ea s
deciding what type of plot it will be, in the sense of choosing
w h e t h e rt om a k ead o t p l o to rab a rc h a r t ,ah i s t o g r a mo raf r e -
quencypolygon,andsoon.
1.6 Problems of Honesty and Good Judgment
Figure1.26showstwowaysofredrawingourlifeexpectancyfigure
(fig. 1.4). Each of these plots is far less noisy than the junk-filled
monstrositywebeganwith.Buttheyalsohavedesignfeaturesthat


------------------------


28 •Chapter 1
couldbearguedoverandmightevenmattersubstantivelydepend-
ingonthecircumstances.Forexample,considerthescalesonthe
x-axisineachcase.Theleft-handpanelinfigure1.26isabarchart,
andthelengthofthebarrepresentsthevalueofthevariable“aver-
agelifeexpectancyin2007”foreachcontinent.Thescalestartsat
zeroandextendstojustbeyondthelevelofthelargestvalue.Mean-
while the right-hand panel is a Cleveland dotplot. Each observa-
tionisrepresentedbyapoint,andthescaleisrestrictedtotherange
ofthedataasshown.
Itistemptingtolaydowninflexiblerulesaboutwhattodoin
termsofproducingyourgraphs, andtodismisspeoplewhodon’t
follow them as producing junk charts or lying with statistics. But
beinghonestwithyourdataisabiggerproblemthancanbesolved
byrulesofthumbaboutmakinggraphs.Inthiscasethereisamod-
eratelevelofagreementthatbarchartsshouldgenerallyincludea
zero baseline (or equivalent) given that bars make lengths salient
to the viewer. But it would be a mistake to think that a dotplot
wasbythesametokendeliberatelymisleading,justbecauseitkept
itselftotherangeofthedatainstead.Position
in space
Color hue
Motion
Shape
Figure 1.25: Channels for mapping unordered
categorical data, arranged top-to-bottom from more
to less effective, after Munzer (2014, 102).
0AfricaAsiaAmericasEuropeOceania
20 40
Life expectancy in years, 200760 80
Life expectancy in years, 2007AfricaAsiaAmericasEuropeOceania
60 80 70
Figure 1.26: Two simpler versions of our junk chart.
The scale on the bar chart version goes to zero,
while the scale on the dotplot version is confined to
the range of values taken by the observations.Whichoneistobepreferred?Itistrickytogiveanunequivocal
answer ,becausethereasonsforpreferringonetypeofscalingover
another depend in part on how often people actively try to mis-
lead others by preferring one sort of representation over another.
On the one hand, there is a lot of be said in favor of showing the
data over the range we observe it, rather than forcing every scale
to encompass its lowest and highest theoretical value. Many oth-
erwise informative visualizations would become useless if it was
mandatory to include a zero point on the x- or y-axis. On the
other hand, it’s also true that people sometimes go out of their
way to restrict the scales they display in a way that makes their
argument look better. Sometimes this is done out of active mal-
ice,othertimesoutofpassivebias,orevenjustahopefuldesireto
see what you want to see in the data. (Remember, often the main
a u d i e n c ef o ry o u rv i s u a l i z a t i o n si sy o u r s e l f . )I nt h o s ec a s e s ,t h e
resultinggraphicwillindeedbemisleading.
Rushed, garish, and deliberately inflammatory or misleading
graphics are a staple of social media sharing and the cable news
cycle.Buttheproblemcomesupineverydaypracticeaswell,and
the two can intersect if your work ends up in front of a public
audience. For example, let’s take a look at some historical data
on law school enrollments. A decline in enrollments led to some


------------------------


Look at Data •29
reportingontrendssincetheearly1970s.Theresultsareshownin
figure1.27.
The first panel shows the trend in the number of students
beginninglawschooleachyearsince1973.They-axisstartsfrom
just below the lowest value in the series. The second panel shows
thesamedatabutwiththey-axisminimumsettozeroinstead.The
columnistandwriterJustinFoxsawthefirstversionandremarked
onhowamazingitwas. Hewasthenquitesurprisedatthestrong
reactions he got from people who insisted the y-axis should have
includedzero.Theoriginalchartwas“possibly... oneoftheworst
represented charts I’ve ever seen,” said one interlocutor. Another
remarked that “graphs that don’t go to zero are a thought crime”
(Fox2014).
Myownviewisthatthechartwithoutthezerobaselineshows
youthat,afteralmostfortyyearsofmostlyrisingenrollments,law
school enrollments dropped suddenly and precipitously around
2011tolevelsnotseensincetheearly1970s.Thelevelsareclearly
labeled,andthedeclinedoeslooksubstantivelysurprisingandsig-
nificant.Inawell-constructedcharttheaxislabelsareanecessary
guide to the reader, and we should expect readers to pay atten-
tion to them. The chart with the zero baseline, meanwhile, does
not add much additional information beyond reminding you, at
thecostofwastingsomespace,that35,000isanumberquitealot
largerthanzero.198040,00045,00050,000First year enrollment
1990 2000 2010
Year
40,000
20,000
0First year enrollment
1980 1990 2000 2010
Year
Figure 1.27: Two views of the rapid decline in law
school enrollments in the mid-2010s.
Thatsaid,Iamsympathetictopeoplewhogotupsetatthefirst
chart.Ataminimum,itshowstheyknowtoreadtheaxislabelson
ag r a p h .T h a ti sl e s sc o m m o nt h a ny o um i g h tt h i n k .I tl i k e l ya l s o
s h o w st h e yk n o wi n t e r f e r i n gw i t ht h ea x e si so n ew a yt om a k ea
chartmisleading,andthatitisnotunusualforthatsortofthingto
bedonedeliberately.
1.7 Think Clearly about Graphs
I am going to assume that your goal is to draw effective graphs
in an honest and reproducible way. Default settings and general
rulesofgoodpracticehavelimitedpowerstostopyoufromdoing
the wrong thing. But one thing they can do is provide not just
tools for making graphs but also a framework or set of concepts
that helps you think more clearly about the good work you want
to produce. When learning a graphing system or toolkit, people


------------------------


30 •Chapter 1
often start thinking about specific ways they want their graph to
look.Theyquicklystartformulatingrequests.Theywanttoknow
howtomakeaparticularkindofchart,orhowtochangethetype-
f a c ef o rt h ew h o l eg r a p h ,o rh o wt oa d j u s tt h es c a l e s ,o rh o wt omove the title, customize the labels, or change the colors of thepoints.
These requests involve different features of the graph. Some
havetodowithbasicfeaturesofthefigure’sstructure,withwhichbits of data are encoded as or mapped to elements such as shape,
line, or color. Some have to do with the details of how those ele-
ments are represented. If a variable is mapped to shape, whichshapes will be chosen, exactly? If another variable is representedbycolor,whichcolorsinparticularwillbeused?Somehavetodo
withtheframingorguidingfeaturesofthegraph.Iftherearetick-
marksonthex-axis, canIdecidewheretheyshouldbedrawn? Ifthecharthasalegend,willitappeartotherightofthegraphorontop? If data points have information encoded in both shape and
color, do we need a separate legend for each encoding, or can we
combine them intoa single unified legend? And some have to dowiththematicfeaturesofthegraphthatmaygreatlyaffecthowthefinalresultlooksbutarenotlogicallyconnectedtothestructureof
thedatabeingrepresented.CanIchangethetitlefontfromTimes
New Roman to Helvetica? Can I have a light blue background inallmygraphs?
A real strength of ggplot is that it implements a grammar
of graphics to organize and make sense of these different ele-
ments (Wilkinson 2005). Instead of a huge, conceptually flat listof options for setting every aspect of a plot’s appearance at once,ggplotbreaksupthetaskofmakingagraphintoaseriesofdistinct
tasks, each bearing a well-defined relationship to the structure of
theplot.Whenyouwriteyourcode,youcarryouteachtaskusingafunctionthatcontrolsthatpartofthejob.Atthebeginning,ggplotwilldomostoftheworkforyou.Onlytwostepsarerequired.First,
you must give some information to the
ggplot() function. This
establishes the core of the plot by saying what data you are usingandwhatvariableswillbelinkedor mappedtofeaturesoftheplot.
Second,youmustchoosea
geom_function.Thisdecideswhatsort
ofplotwillbedrawn,suchasascatterplot,abarchart,oraboxplot.
Asyouprogress,youwillgraduallyuseotherfunctionstogain
more fine-grained control over other features of the plot, such asscales, legends, and thematic elements. This also means that, as


------------------------


Look at Data •31
you learn ggplot, it is very important to grasp the core steps first,
before worrying about adjustments and polishing. And so that is
how we’ll proceed. In the next chapter we will learn how to get
up and running in R and make our first graphs. From there, wewillworkthroughexamplesthatintroduceeachelementofggplot’swayofdoingthings.Wewillbeproducingsophisticatedplotsquite
quickly,andwewillkeepworkingonthemuntilweareinfullcon-
trolofwhatwearedoing.Aswego,wewilllearnaboutsomeideasandassociatedtechniquesandtrickstomakeRdowhatwewant.
1.8 Where to Go Next
For an entertaining and informative overview of various visualeffects and optical “illusions,” take a look at Michael Bach’s web-siteat
michaelbach.de .Ifyouwouldliketolearnmoreaboutthe
relationshipbetweenperceptionanddatavisualization,followup
on some of the references in this chapter. Munzer (2014), Ware
(2008), and Few (2009) are good places to start. William Cleve-land’sbooks(1993,1994)aremodelsofclarityandgoodadvice.Asweshallseebeginninginthenextchapter, theideasdevelopedin
Wilkinson(2005)areattheheartofggplot’sapproachtovisualiza-
tion. Finally,foundationalworkbyBertin(2010)liesbehindalotofthinkingontherelationshipbetweendataandvisualelements.


------------------------


2 Get Started
Inthischapter,wewillbegintolearnhowtocreatepicturesofdata
thatpeople,includingourselves,canlookatandlearnfrom.Randggplot are the tools we will use. The best way to learn them is to
followalongandrepeatedlywritecodeasyougo.Thematerialin
this book is designed to be interactive and hands-on. If you workt h r o u g hi tw i t hm eu s i n gt h ea p p r o a c hd e s c r i b e db e l o w ,y o uw i l l
end up with a book much like this one, with many code samples
alongsideyournotes,andthefiguresorotheroutputproducedbythatcodeshownnearby.
I strongly encourage you to type out your code rather than
copyingandpastingtheexamplesfromthetext.Typingitoutwill
help you learn it. At the beginning it may feel like tedious tran-scription you don’t fully understand. But it slows you down in away that gets you used to what the syntax and structure of R are
likeandisaveryeffectivewaytolearnthelanguage.It’sespecially
useful for ggplot, where the code for our figures will repeatedlyhaveasimilarstructure,builtuppiecebypiece.
2.1 Work in Plain Text, Using RMarkdown
Whentakingnotes,andwhenwritingyourowncode,youshould
writeplaintextinatexteditor.DonotuseMicrosoftWordorsome
other word processor. You may be used to thinking of your finaloutputs(e.g.,aWordfile,aPDFdocument,presentationslides,orthetablesandfiguresyoumake)aswhat’s“real”aboutyourproject.
Instead, it’s better to think of the data and code as what’s real,
togetherwiththetextyouwrite. Theideaisthatallyourfinishedoutput—yourfigures,tables,text,andsoon—canbeprocedurallyandreproduciblygeneratedfromcode,data,andwrittenmaterial
storedinasimple,plain-textformat.
The ability to reproduce your work in this way is important
to the scientific process. But you should also see it as a pragmaticchoice that will make life easier for you in the future. The reality


------------------------


Get Started •33
f o rm o s to fu si st h a tt h ep e r s o nw h ow i l lm o s tw a n tt oe a s i l y
reproduce your work is you, six months or a year from now. This
is especially true for graphics and figures. These often have a
“finished”qualitytothem,asaresultofmuchtweakingandadjust-ments to the details of the figure. That can make them hard toreproducelater.Whileitisnormalforgraphicstoundergoasub-
stantialamountofpolishingontheirwaytopublication,ourgoal
is to do as much of this as possible programmatically ,i nc o d e
we write, rather than in a way that is retrospectively invisible, as,
for example, when we edit an image in an application like Adobe
Illustrator.
Whilelearningggplot,andlaterwhiledoingdataanalysis,you
willfindyourselfconstantlypingingbackandforthbetweenthree
things:
1.Writing code .Youwillwritealotofcodetoproduceplots.You
will also write code to load your data and to look quickly at
tables of that data. Sometimes you will want to summarize,
r e a r r a n g e ,s u b s e t ,o ra u g m e n ty o u rd a t a ,o rr u nas t a t i s t i c a lm o d e lw i t hi t .Y o uw i l lw a n tt ob ea b l et ow r i t et h a tc o d ea seasilyandeffectivelyaspossible.
2.Lookingatoutput .Y ourcodeisasetofinstructionsthat,when
executed, produces the output you want: a table, a model, orafigure.I tisoftenhelpfultobeabletoseetha toutputanditspartialresults.Whilewe ’reworking,it’ salsousefultokeepthe
code and the things produced by the code close together, if
wecan.
3.Taking notes .Youwillalsobewritingaboutwhatwearedoing
andwhatyourresultsmean.Whenlearninghowtodosome-
thing in ggplot, for instance, you will want to make notes to
yourselfaboutwhatyoudid,whyyouwroteitthiswayratherthan that, or what this new concept, function, or instructiondoes.Later,whendoingdataanalysisandmakingfigures,you
willbewritingupreportsordraftingpapers.
Howcanyoudoallthiseffectively? Thesimplestwaytokeep
code and notes together is to write your code and intersperse it
with comments. All programming languages have some way of
demarcatinglinesascomments,usuallybyputtingaspecialchar-acter (like
#) at the start of the line. We could create a plain-text
scriptfilecalled,e.g., notes.r,containingcodeandourcomments
onit.Thisisfineasfarasitgoes.Butexceptforveryshortfiles,it


------------------------


34 •Chapter 2
willbedifficulttodoanythingusefulwiththecommentswewrite.
I fw ewa n tar epo rtfr o ma na n al ysi s,f o rexa m p le ,w ewillh a v et o
write it up separately. While a script file can keep comments and
code together, it loses the connection between code and its out-
put, such as the figure we want to produce. But there is a better
alternative:wecanwriteournotesusingRMarkdown.
Report
We can see this relationship
in a scatterplot.
As you can see, this plot 
looks pretty nice.xynotes.pdf
Figure 2.1: Top: Some elements of RMarkdown
syntax. Bottom : From a plain text RMarkdown file
to PDF output.An RMarkdown file is just a plain text document where text
(suchasnotesordiscussion)isinterspersedwithpieces,or chunks,
ofRcode.WhenyoufeedthedocumenttoR,it knitsthisfileintoa
newdocumentbyrunningtheRcodepiecebypiece,insequence,
and either supplementing or replacing the chunks of code with
theiroutput.Theresultingfileisthenconvertedintoamoreread-
able document formatted in HTML, PDF, or Word. The noncode
segmentsofthedocumentareplaintext,buttheycanhavesimple
formattinginstructionsinthem.ThesearesetusingMarkdown,a
setofconventionsformarkingupplaintextinawaythatindicates
howitshouldbeformatted. ThebasicelementsofMarkdownare
shown in the upper part of figure 2.1. When you create a mark-
down document in R Studio, it contains some sample text to get
youstarted.
RMarkdown documents look like the one shown schemati-
callyinthelowerpartoffigure2.1.Yournotesortext,withMark-
downformattingasneeded,areinterspersedwithcode.Thereisa
setformatforcodechunks.Theylooklikethis:
```{r}
```
Threebackticks(onaU.S.keyboard,that’sthecharacterunderthe
escape key) are followed by a pair of curly braces containing the
nameofthelanguageweareusing.Thebackticks-and-bracespart
signalsthatachunkofcodeisabouttobegin.Youwriteyourcode
asneededandthenendthechunkwithanewlinecontainingjust
threebackticks.
If you keep your notes in this way, you will be able to see the The format is language agnostic and can be used
with, e.g., Python and other languages.codeyouwrote,theoutputitproduces,andyourowncommentary
or clarification on it in a convenient way. Moreover, you can turn
itintoagood-lookingdocumentrightaway.


------------------------


Get Started •35
Figure 2.2: Bare-bones R running from the Terminal.
2.2 Use R with RStudio
The RStudio environment
Ritselfisarelativelysmallapplicationwithnexttonouserinter-
face. Everything works through a command line, or console.A t
its most basic, you launch it from your Terminal application (on
a Mac) or Command Prompt (on Windows) by typing R.O n c e
launched,Rawaitsyourinstructionsatacommandlineofitsown,
denotedbytherightanglebracketsymbol, >(fig. 2.2). Whenyou
type an instruction and hit return, R interprets it and sends any
resultingoutputbacktotheconsole.
Inadditiontointeractingwiththeconsole,youcanalsowrite
y o urcodeinat extfilea ndsendtha tt oRalla to nce .Y o uca nuse
anygoodtexteditortowriteyour .rscripts.Butalthoughaplain
textfileandacommandlinearetheabsoluteminimumyouneed
to work with R, it is a rather spartan arrangement. We can make
lifeeasierforourselvesbyusingRStudio.RStudioisan“integrated
development environment,” or IDE. It is a separate application
fromRproper .Whenlaunched,itstartsupaninstanceofR ’ scon-
soleinsideofitself.Italsoconvenientlypullstogethervariousother
elements to help you get your work done. These include the doc-
u m e n tw h e r ey o ua r ew r i t i n gy o u rc o d e ,t h eo u t p u ti tp r o d u c e s ,
and R’s help system. RStudio also knows about RMarkdown and
understands a lot about the R language and the organization of
yourproject.WhenyoulaunchRStudio,itshouldlookmuchlike
figure2.3.


------------------------


36 •Chapter 2
Figure 2.3: The RStudio IDE.
Create a project
To begin, create a project. From the menu, choose File > New
Project ... from the menu bar, choose the New Directory option,
and create the project. Once it is set up, create an RMarkdown You can create your new project wherever you
like—most commonly it will go somewhere in your
Documents folder.file in the directory, with File > New File > RMarkdown. This
will give you a set of choices including the default “Document.”
The socvizlibrary comes with a small RMarkdown template
t h a tf o l l o w st h es t r u c t u r eo ft h i sb o o k .T ou s ei ti n s t e a do ft h e
default document, after selecting File > New File > RMarkdown,
choose the “From Template” option in the sidebar of the dialog
box that appears. Then choose “Data Visualization Notes” from
the resulting list of options. When the RMarkdown document
appears,saveitrightawayinyourprojectfolder,withFile>Save.
The socviztemplate contains a information about how RMark-
downworks,togetherwithsomeheaderstogetyoustarted.Read
what it has to say. Look at the code chunks and RMarkdown for-
matting. Experiment with knitting the document, and compare


------------------------


Get Started •37
Figure 2.4: An RMarkdown file open in R Studio. The
small icons in the top right-hand corner of each
code chunk can be used to set options (the gear
icon), run all chunks up to the current one (the
downward-facing triangle), and just run the current
chunk (the right-facing triangle).
the output to the content of the plain text document. Figure 2.4
shows you what an RMarkdown file looks like when opened in
RStudio.
RMarkdownisnotrequiredforR.AnalternativeistouseanR
script,whichcontainsRcommandsonly.Rscriptfilesconvention- You can create an r script via File > New File > R
Script.allyhavetheextension .ror.R.(RMarkdownfilesconventionally
end in .Rmd.) A brief project might just need a single .rfile. But
RMarkdown is useful for documents, notes, or reports of any
length,especiallywhenyouneedtotakenotes.Ifyoudousean .r
fileyoucanleavecommentsornotestoyourselfbystartingaline
withthehashcharacter, #.Youcanalsoaddcommentsattheend
oflinesinthisway ,asforanyparticularlineRwillignorewhatever
codeortextthatappearsaftera #.
RStudiohasvariouskeyboardandmenushortcutstohelpyou
edit code and text quickly. For example, you can insert chunks
of code in your RMarkdown document with a keyboard short-
cut. This saves you from writing the backticks and braces every Command+Option+I on MacOS. Ctrl+Alt+I on
Windows.time. Youcanrunthecurrentlineofcodewithashortcut, too. A
Command+Enter on MacOS. Alt+Enter on Windows.thirdshortcutgivesyouapop-overdisplaywithsummaryofmany
otherusefulkeystrokecombinations.RMarkdowndocumentscan Option+Shift+K on MacOS. Alt-Shift-K on
Windows.include all kinds of other options and formatting paraphernalia,


------------------------


38 •Chapter 2
from text formatting to cross-references to bibliographical infor-
mation.Butnevermindaboutthosefornow.
To make sure you are ready to go, load the tidyverse .T h e
ti d yv e r sei sas u i t eo fr e l a t edpa c k a g e sf o rRd ev e l o pedb yH a dl eyWickham and others. The
ggplot2package is one of its com-
ponents. The other pieces make it easier to get data into R and
manipulate it once it is there. Either knit the notes file you cre-
atedfromthesocviztemplateorloadthepackagesmanuallyattheconsole:
library (tidyverse)
library (socviz)
Loadthe socvizpackageafterthetidyverse.Thislibrarycon-
tains datasets that we will use throughout the book, along withsomeothertoolsthatwillmakelifeeasier.Ifyougetanerrormes-sagesayingeitherpackagecan’tbefound,thenrereadthe“Before
Y o uB e g i n ”s e c t i o ni nt h ep r e f a c et ot h i sb o o ka n df o l l o wt h e
instructionsthere.
You need to installa package only once, but you will need to
loadit at the beginning of each R session with
library() if you
want to use the tools it contains. In practice this means that the
v e r yfi r s tl i n e so fy o u rw o r k i n gfi l es h o u l dc o n t a i nac o d ec h u n kthatloadsthepackagesyouwillneedinthefile.Ifyouforgettodothis, then R will be unable to find the functions you want to use
lateron.
2.3 Things to Know about R
A n yn e wp i e c eo fs o ft w a r et a k e sab i to fg e t t i n gu s e dt o .T h i si sespecially true when using an IDE in a language like R. You are
getting oriented to the language itself (what happens at the con-sole)whilelearningtotakenotesinwhatmightseemlikeanoddformat (chunks of code interspersed with plain-text comments),
inanIDEthathasmanyfeaturesdesignedtomakeyourlifeeasier
in the long run but which can be hard to decipher at the begin-n i n g .H e r ea r es o m eg e n e r a lp o i n t st ob e a ri nm i n da b o u th o wR
is designed. They might help you get a feel for how the language
works.


------------------------


Get Started •39
Everything has a name
In R, everything you deal with has a name. You refer to things
by their names as you examine, use, or modify them. Namedentities include variables (like
xory), data that you have loaded
(like my_data),andfunctionsthatyouuse.(Moreaboutfunctions
momentarily.)Youwillspendalotoftimetalkingabout,creating,referringto,andmodifyingthingswithnames.
Somenamesareforbidden.Theseincludereservedwordslike
FALSEand TRUE, core programming words like Inf,for,else,
break,and function ,a n dw o r d sf o rs p e c i a le n t i t i e sl i k e NAand
NaN. (These last two are codes designating missing data and “Not
a Number,” respectively.) You probably won’t use these names by
accident,butit’sgooddoknowthattheyarenotallowed.
Some names you should not use even if they are techni-
c a l l yp e r m i t t e d .T h e s ea r em o s t l yw o r d st h a ta r ea l r e a d yi nu s efor objects or functions that form part of the core of R. These
include the names of basic functions like
q()orc(),c o m m o n
statistical functions like mean(),range(),o rvar(),a n db u i l t - i n
mathematicalconstantslike pi.
Names in R are case sensitive. The object my_datais not the
same as the object My_Data. When choosing names for things,
be concise, consistent, and informative. Follow the style of thetidyverse and name things in lowercase, separating words with
the underscore character,
_, as needed. Do not use spaces when
namingthings,includingvariablesinyourdata.
Everything is an object
S o m eo b j e c t sa r eb u i l ti nt oR ,s o m ea r ea d d e dv i ap a c k a g e s ,a n dsomearecreatedbytheuser.Butalmosteverythingissomekindofobject.Thecodeyouwritewillcreate,manipulate,andusenamedo b j e ct sa sam a t t e ro fc o u r se .W ec a ns t a rti m m e d i a t e l y .Le t ’ sc r e -
ateavectorofnumbers.Thecommand
c()isafunction.It’sshort
for “combine” or “concatenate.” It will take a sequence of comma-separated things inside the parentheses and join them togetherintoavectorwhereeachelementisstillindividuallyaccessible.
c(1,2,3,1,3,5,25)
## [1] 1 2 3 1 3 5 25


------------------------


40 •Chapter 2
Instead of sending the result to the console, we can instead
assignittoanobjectwecreate: You can type the arrow using <and then -.
my_numbers ←c(1,2,3,1,3,5,25)
your_numbers ←c(5,31,71,1,3,21,6)
T os e ew h a ty o um a d e ,t y p et h en a m eo ft h eo b j e c ta n dh i t
return:
my_numbers
## [1] 1 2 3 1 3 5 25
Each of our numbers is still there and can be accessed directly if
we want. They are now just part of a new object, a vector, called
my_numbers .
You create objects by assigning them to names. The assign-
mentoperator is←.Thinkofassignmentastheverb“gets,”reading
l e ftt or i g h t .S ot h eb i to fc o d ea b o v ec a nb er e a da s“ T h eo b j e c t
my_numbers g e t st h er e s u l to fc o n c a t e n a t i n gt h ef o l l o w i n gn u m -
bers:1,2,...”Theoperatoristwoseparatekeysonyourkeyboard: If you learn only one keyboard shortcut in RStudio,
make it this one! Always use Option+minus on
MacOS or Alt+minus on Windows to type the
assignment operator.the<keyandthe -(minus)key.BecauseyoutypethissoofteninR,
thereisashortcutforitinRStudio.Towritetheassignmentoper-
atorinonestep,holddownthe optionkeyandhit -.OnWindows
hold down the altkey and hit -. You will be constantly creating
objectsinthisway ,andtryingtotypethetwocharactersseparatelyis both tedious and prone to error. You will make hard-to-notice
mistakes like typing
<-(with a space in between the characters)
insteadof ←.
When you create objects by assigning things to names, they
come into existence in R’s workspace orenvironment .Y o uc a n
thinkofthismoststraightforwardlyasyourprojectdirectory.Your
workspace is specific to your current project. It is the folder fromwhich you launched R. Unless you have particular needs (suchas extremely large datasets or analytical tastes that take a very
longtime)youwillnotneedtogiveanythoughttowhereobjects
“really”live.Justthinkofyourcodeanddatafilesasthepermanentfeaturesofyourproject. WhenyoustartupanRproject, youwillgenerally begin by loading your data. That is, you will read it in
fromdiskandassignittoanamedobjectlike
my_data.Therestof
yourcodewillbeaseriesofinstructionstoactonandcreatemorenamedobjects.


------------------------


Get Started •41
You do things using functions
Figure 2.5: Upper : What functions look like,
schematically. Lower : an imaginary function that
takes two vectors and plots them with a title. We
supply the function with the particular vectors we
want it to use, and the title. The vectors are object
so are given as is. The title is not an object so we
enclose it in quotes.YoudoalmosteverythinginRusingfunctions.Thinkofafunction
asaspecialkindofobjectthatcanperformactionsforyou.Itpro-
ducesoutputbasedontheinputitreceives.Whenwewantafunc-
tion to do something for us, we callit. It will reliably do what we
tellit.Wegivethefunctionsomeinformation,itactsonthatinfor-
mation, and some results come out the other side. A schematic
example is shown in fig. 2.5. Functions can be recognized by the
parentheses at the end of their names. This distinguishes them
from other objects, such as single numbers, named vectors, and
tablesofdata.
The parentheses are what allow you to send information to
the function. Most functions accept one or more named argu-
ments. A function’s arguments are the things it needs to know
in order to do something. They can be some bit of your data
(data = my_numbers ), or specific instructions ( title = "GDP
per Capita" ), or an option you want to choose ( smoothing =
"splines", show = FALSE ).Forexample,theobject my_numbers
isanumericvector:
my_numbers
## [1] 1 2 3 1 3 5 25
B u tt h et h i n gw eu s e dt oc r e a t ei t , c(),i saf u n c t i o n .I t
concatenatesitemsintoavectorcomposedoftheseriesofcomma-
separated elements you give it. Similarly, mean()is a function
that calculates a simple average for a vector of numbers. What
h a p p e n si fw ej u s tt y p e mean()without any arguments inside the
parentheses?
mean ()
# Error in mean.default() : argument 'x'is
# missing, with no default
The error message is terse but informative. The function
n e e d sa na r g u m e n tt ow o r k ,a n dw eh a v e n ’ tg i v e ni to n e .I nt h i s
c a s e ,‘ x ’ ,t h en a m eo fa n o t h e ro b j e c tt h a t mean()can perform its
calculationon:


------------------------


42 •Chapter 2
mean (x= my_numbers)
## [1] 5.714286
mean (x= your_numbers)
## [1] 19.71429
Whilethefunctionargumentshavenamesthatareusedinter-
nally, (here, x), youdon’tstrictlyneedtospecifythenameforthe
functiontowork:
mean (my_numbers)
## [1] 5.714286
If you omit the name of the argument, R will just assume
y o ua r eg i v i n gt h ef u n c t i o nw h a ti tn e e d s ,a n di nad e f a u l to r d e r .The documentation for a function will tell you what the order ofrequiredargumentsisforanyparticularfunction.Forsimplefunc-
See the appendix for a guide to how to read the
help page for a function.tionsthatrequireonlyoneortwoarguments,omittingtheirnames
isusuallynotconfusing.Formorecomplexfunctions,youwilltyp-ically want to use the names of the arguments rather than try torememberwhattheorderingis.
In general, when providing arguments to a function the syn-
tax is
<argument> = <value> .I f<value>is a named objectthat
alreadyexistsinyourworkspace,likeavectorofnumbersoratableof data, then you provide it unquoted, as in
mean(my_numbers) .
If<value> is not an object, a number, or a logical value like
TRUE,thenyouusuallyputitinquotes,e.g., labels(x = "X Axis
Label").
Functionstakeinputsviatheirarguments,dosomething,and
return outputs. What the output is depends on what the func-
tiondoes.The c()functiontakesasequenceofcomma-separated
elements and returns a vector consisting of those same elements.The
mean()functiontakesavectorofnumbersandreturnsasingle
number, their average. Functions can return far more than single
numbers.Theoutputreturnedbyfunctionscanbeatableofdata,or a complex object such as the results of a linear model, or theinstructionsneededtodrawaplotonthescreen(asweshallsee).


------------------------


Get Started •43
Forexample,the summary() functionperformsaseriesofcalcula-
t i o n so nav e c t o ra n dp r o d u c e sw h a ti si ne ff e c tal i t t l et a b l ew i t h
namedelements.
A function’s argument names are internal to that function.
Say you have created an object in your environment named x,f o r
e x a m p l e .Af u n c t i o nl i k e mean()also has a named argument, x,
butRwillnotgetconfusedbythis.I twillnotuseyour xobjectby
mistake.
As we have already seen with c()andmean(),youcanassign
theresultofafunctiontoanobject:
my_summary ←summary (my_numbers)
Whenyoudothis,there ’ snooutputtotheconsole.Rjustputs
the results into the new object, as you instructed. To look insidetheobjectyoucantypeitsnameandhitreturn:
my_summary
## Min. 1st Qu. Median Mean 3rd Qu. Max.
## 1.00 1.50 3.00 5.71 4.00 25.00
Functions come in packages
Thecodeyouwritewillbemoreorlesscomplexdependingonthe
taskyouwanttoaccomplish.Onceyouhavegottenusedtowork-
ing in R, you will probably end up writing your own functions toproducetheresultsthatyouneed.Butaswithotherprogramminglanguages, you will not have to do everything yourself. Families
ofusefulfunctionsarebundledintopackagesthatyoucaninstall,
load into your R session, and make use of as you work. Packagessaveyoufromreinventingthewheel.Theymakeitsothatyoudonot,forexample,havetofigureouthowtowritecodefromscratch
t od r a was h a peo nsc r e e n ,o rl o a dad a tafi l ei n t om e m o ry .P a c k -
a g e sa r ea l s ow h a ta l l o wy o ut ob u i l do nt h ee ff o r t so fo t h e r si nordertodoyourownwork.Ggplotisalibraryoffunctions.Thereare many other such packages, and we will make use of several
throughoutthisbook,byeitherloadingthemwiththe
library()
function or “reaching in” to them and pulling a useful function
from them directly. Writing code and functions of your own is agoodwaytogetasenseoftheamazingvolumeofeffortputintoR


------------------------


44 •Chapter 2
anditsassociatedtoolkits,workfreelycontributedbymanyhands
overtheyearsandavailableforanyonetouse.
All the visualization we will do involves choosing the right
function or functions and then giving those functions the rightinstructions through a series of named arguments. Most of them i s t a k e sw ew i l lm a k e ,a n dt h ee r r o r sw ew i l lfi x ,w i l li n v o l v eu s
having not picked the right function, or having not fed the func-
tion the right arguments, or having failed to provide informationinaformthefunctioncanunderstand.
Fornow,justrememberthatyoudothingsinRbycreatingand
manipulating named objects. You manipulate objects by feedinginformationaboutthemtofunctions.Thefunctionsdosomethingusefulwiththatinformation(calculateamean, recodeavariable,
fitamodel)andgiveyoutheresultsback.
table (my_numbers)
## my_numbers
# #1235 2 5
# #21211
sd(my_numbers)
## [1] 8.6
my_numbers *5
## [1] 5 10 15 5 15 25 125
my_numbers +1
## [1] 2 3 4 2 4 6 26
my_numbers +my_numbers
## [1] 2 4 6 2 6 10 50
T h efi r s tt w of u n c t i o n sh e r eg a v eu sas i m p l et a b l eo fc o u n t s
and calculated the standard deviation of my_numbers .I t ’ sw o r t h
noticing what R did in the last three cases. First we multiplied
my_numbers byfive. Rinterpretsthatasyouaskingittotakeeach
elementofmy_numbers oneatatimeandmultiplyitbyfive.Itdoes
the same with the instruction my_numbers + 1 . The single value


------------------------


Get Started •45
is“recycled”downthelengthofthevector.Bycontrast,inthelast
case we add my_numbers to itself. Because the two objects being
a d d e da r et h es a m el e n g t h ,Ra d d se a c he l e m e n ti nt h efi r s tv e c -
tor to the corresponding element in the second vector. This is anexampleofa vectorized operation.
If you’re not sure what an object is, ask for its class
Every object has a class. This is the sort of object it is, whether a
vector,acharacterstring,afunction,alist,andsoon.Knowinganobject’sclasstellsyoualotaboutwhatyoucanandcan’tdowithit.
class (my_numbers)
## [1] "numeric"
class (my_summary)
## [1] "summaryDefault" "table"
class (summary)
## [1] "function"
Certain actions you take may change an object’s class. For
instance,consider my_numbers again:
my_new_vector ←c(my_numbers, "Apple" )
my_new_vector
## [1] "1" "2" "3" "1" "3" "5" "25"
## [8] "Apple"
class (my_new_vector)
## [1] "character"
The function added the word “Apple” to our vector of num-
b e r s ,a sw ea s k e d .B u ti nd o i n gs o ,t h er e s u l ti st h a tt h en e wobject also has a new class, switching from “numeric” to “charac-ter . ”Allthen um bersa r eno wenclosedinq uo tes.Theyha v ebeen


------------------------


46 •Chapter 2
turned into character strings. In that form, they can’t be used in
calculations.
Mostoftheworkwe’llbedoingwillnotinvolvedirectlypick-
ingoutthisorthatvaluefromvectorsorotherentities.Insteadwewilltrytoworkataslightlyhigherlevelthatwillbeeasierandsafer.But it’s worth knowing the basics of how elements of vectors can
The appendix has a little more discussion of the
basics of selecting the elements within objects.bereferredtobecausethec()functioninparticularisausefultool.
Wewillspendalotoftimeinthisbookworkingwithaseries
ofdatasets. Thesetypicallystartlifeasfilesstoredlocallyonyour
computerorsomewhereremotelyaccessibletoyou.Oncetheyare
imported into R, then like everything else they exist as objects ofsome kind. R has several classes of objects used to store data. Abasiconeisamatrix,whichconsistsofrowsandcolumnsofnum-
bers.ButthemostcommonkindofdataobjectinRisa dataframe ,
which you can think of as a rectangular table consisting of rows(of observations) and columns (of variables). In a data frame thecolumnscanbeofdifferentclasses.Somemaybecharacterstrings,
somenumeric,andsoon.Forinstance,hereisaverysmalldataset
fromthe
socvizlibrary:
titanic
## fate sex n percent
## 1 perished male 1364 62.0## 2 perished female 126 5.7
## 3 survived male 367 16.7
## 4 survived female 344 15.6
class (titanic)
## [1] "data.frame"
Inthis titanicdata,twoofthecolumnsarenumericandtwo
arenot.Youcanaccesstherowsandcolumnsinvariousways.Forexample,the
$operatorallowsyoutopickoutanamedcolumnof
adataframe:
titanic $percent
## [1] 62.0 5.7 16.7 15.6
Appendix1containsmoreinformationaboutselectingparticular
elementsfromdifferentkindsofobjects.


------------------------


Get Started •47
Wewillalsoregularlyencounteraslightlyaugmentedversion
ofadataframecalleda tibble.Thetidyverselibrariesmakeexten-
siveuseoftibbles.Likedataframes,theyareusedtostorevariables
of different classes all together in a single table of data. They alsod oal i t t l em o r et ol e tu sk n o wa b o u tw h a tt h e yc o n t a i na n da r ealittlemorefriendlywheninteractedwithfromtheconsole.Wecan
convertadataframetoatibbleifwewant:
titanic_tb ←as_tibble (titanic)
titanic_tb
## # A tibble: 4 x 4
## fate sex n percent
## <fct> <fct> <dbl> <dbl>
## 1 perished male 1364. 62.0## 2 perished female 126. 5.70## 3 survived male 367. 16.7
## 4 survived female 344. 15.6
Look carefully at the top and bottom of the output to see what
additional information the tibble class gives you over and above
thedataframeversion.
To see inside an object, ask for its structure
The str()function is sometimes useful. It lets you see what is
insideanobject.
str(my_numbers)
## num [1:7] 1 2 31352 5
str(my_summary)
## Classes 'summaryDefault ','table '
Named num [1:6] 1 1.5 3 5.71 4 ...
## ..- attr(*, "names")= chr [1:6] "Min."
"1st Qu." "Median" "Mean" ...
Fair warning: while some objects are relatively simple (a vec-
tor is just a sequence of numbers), others are more complicated,
so asking about their str()might output a forbidding amount
of information to the console. In general, complex objects are


------------------------


48 •Chapter 2
organized collections of simpler objects, often assembled as a big
list, sometimes with a nested structure. Think, for example, of a RStudio also has the ability to summarize and
look inside objects, via its Environment tab.masterto-dolistforacomplexactivitylikemovinghouse.Itmight
be organized into subtasks of different kinds, several of whichwould themselves have lists of individual items. One list of tasksmight be related to scheduling the moving truck, another might
coverthingstobedonated,andathirdmightberelatedtosetting
uputilitiesatthenewhouse.Inasimilarway,theobjectswecreatetomakeplotswillhavemanypartsandsubparts,astheoveralltask
ofdrawingaplothasmanyindividualto-doitems.Butwewillbe
a b l et ob u i l dth e seo b j e ct su pfr o ms i m p l ef o r m sth r o u ghase r i e sofwell-definedsteps.Andunlikemovinghouse,thecomputerwilltake care of actually carrying out the task for us. We just need to
gettheto-dolistright.
2.4 Be Patient with R, and with Yourself
Likeallprogramminglanguages,Rdoesexactlywhatyoutellitto,
ratherthanexactlywhatyouwantitto.Thiscanmakeitfrustratingt ow o r kw i t h .I ti sa si fo n eh a da ne n d l e s s l ye n e r g e t i c ,p o w e r f u l ,
butalsoextremelyliteral-mindedrobottoorderaround.Remem-
berthatnoonewritesfluent,error-freecodeonthefirstgoallthetime.Fromsimpletypostobigmisunderstandings,mistakesareastandard part of the activity of programming. This is why error
checking, debugging, and testing are also a central part of pro-
gramming.SojusttrytobepatientwithyourselfandwithRwhileyouuseit.Expecttomakeerrors,anddon’tworrywhenthathap-pens.Youwon’tbreakanything.Eachtimeyoufigureoutwhyabit
of code has gone wrong, you will have learned a new thing about
howthelanguageworks.
Herearethreespecificthingstowatchoutfor:
•Make sure parentheses are balanced and that every opening“
(”hasacorrespondingclosing“ )”.
•Make sure you complete your expressions. If you think you
have completed typing your code but instead of seeing the >
command prompt at the console you see the +character, that
maymeanRthinksyouhaven’twrittenacompleteexpressionyet. You can hit
EscorCtrl-Cto force your way back to the
consoleandtrytypingyourcodeagain.


------------------------


Get Started •49
•In ggplot specifically, as you will see, we will build up plots a
piece at a time by adding expressions to one another. When
doing this, make sure your +character goes at the end of the
lineandnotthebeginning.Thatis,writethis:
ggplot (data = mpg, aes(x= displ, y= hwy)) +geom_point ()
andnotthis:
ggplot (data = mpg, aes(x= displ, y= hwy))
+geom_point ()
R Studio will do its best to help you with the task of writing
yourcode.Itwillhighlightyourcodebysyntax;itwilltrytomatchcharacters(likeparentheses)thatneedtobebalanced;itwilltryto
narrowdownthesourceoferrorsincodethatfailstorun;itwilltry
to auto-complete the names of objects you type so that you makef e w e rt y p o s ;i tw i l lm a k eh e l pfi l e sm o r ee a s i l ya c c e s s i b l ea n dt h earguments of functions directly available. Go slowly and see how
thesoftwareistryingtohelpyouout.
2.5 Get Data into R
Be f o r ew ec a np l o ta n y t h i n ga ta l l ,w eh a v et og e to u rd a t ai n t oR
in a format it can use. Cleaning and reading in your data is oneof the least immediately satisfyin g pieces of an analysis, whether
youuseR,Stata,SAS,SPSS,oranyotherstatisticalsoftware.This
These are all commercial software applications for
statistical analysis. Stata, in particular, is in wide useacross the social sciences. isthereasonthatmanyofthedatasetsforthisbookareprovided
i nap r e p r e p a r e df o r mv i at h e socvizl i b r a r yr a t h e rt h a na sd a t a
filesyoumustmanuallyreadin.However ,itissomethingyouwillhave to face sooner rather than later if you want to use the skills
youlearninthisbook.Wemightaswellseehowtodoitnow.Even
whenlearningR,itcanbeusefulandmotivatingtotryoutthecodeonyourowndataratherthanworkingwiththesampledatasets.
Use the
read_csv() function to read in comma-separated
d a t a .T h i sf u n c t i o ni si nt h e readrpackage, one of the pieces of
t h et i d y v e r s e .Ra n dt h et i d y v e r s ea l s oh a v ef u n c t i o n st oi m p o r tvariousStata,SAS,andSPSSformatsdirectly .Thesecanbefoundin the
havenpackage. All we need to do is point read_csv() at a


------------------------


50 •Chapter 2
file. This can be a local file, e.g., in a subdirectory called data/,
or it can be a remote file. If read_csv() i sg i v e naU R Lo rft p
address, it will follow it automatically. In this example, we have
aC S Vfi l ec a l l e d organdonation.csv stored at a trusted remote
location.Whileonline,weassigntheURLforthefiletoanobject,forconvenience,andthentell
read_csv() tofetchitforusandput
itinanobjectnamed organs.
url←"https://cdn.rawgit.com/kjhealy/viz-organdata/master/organdonation.csv"
organs ←read_csv (ﬁle = url)
## Parsed with column speciﬁcation:
## cols(
## .default = col_character(),
## year = col_integer(),## donors = col_double(),## pop = col_integer(),
## pop.dens = col_double(),
## gdp = col_integer(),## gdp.lag = col_integer(),## health = col_double(),
## health.lag = col_double(),
## pubhealth = col_double(),## roads = col_double(),## cerebvas = col_integer(),
## assault = col_integer(),
## external = col_integer(),## txp.pop = col_double()## )
## See spec(...) for full column speciﬁcations.
The resulting message at the console tells us the read_csv()
functionhasassignedaclasstoeachcolumnoftheobjectitcreated
from the CSV file. There are columns with integer values, someare character strings, and so on. (The
doublec l a s si sf o rn u m -
bersotherthanintegers.) Partofthereason read_csv() istelling
you this information is that it is helpful to know what class each
column, or variable, is. A variable’s class determines what sort ofoperations can be performed on it. You also see this informationbecausethetidyverse’s
read_csv() (withanunderscorecharacter


------------------------


Get Started •51
inthemiddleofitsname)ismoreopinionatedthananolder,and
also still widely used, function, read.csv() (with a period in the
middleofitsname).Thenewer read_csv() willnotclassifyvari-
ablesasfactorsunlessyoutellitto.Thisisincontrasttotheolderfunction, which treats any vector of characters as a factor unlesstoldotherwise. FactorshavesomeveryusefulfeaturesinR(espe-
ciallywhenitcomestorepresentingvariouskindsoftreatmentand
control groups in experiments), but they often trip up users whoarenotfullyawareofthem.Thus
read_csv() avoids them unless
youexplicitlysayotherwise.
R can read in data files in many different formats. The haven
packageprovidesfunctionstoreadfilescreatedinavarietyofcom-mercial software packages. If your dataset is a Stata
.dtafile, for R can also talk directly to databases, a topic not
covered here.instance, youcanusethe read_dta() functioninmuchthesame
way as we used read_csv() above. This function can read and
write variables stored as logical values, integers, numbers, char-acters,andfactors.Stataalsohasa labeleddataclassthatthehaven
library partially supports. In general you will end up converting
See haven’s documentation for more details.
labeled variablestooneof R’sbasicclasses. Stataalsosupports an
extensive coding scheme for missing data. This is generally notuseddirectlyinR,wheremissingdataiscodedsimplyas
NA.Again,
youwillneedtotakecarethatanylabeledvariablesimportedinto
Rar ecodedp r operly ,sotha tyoudonotendu pmistakenlyusingmissingdatainyouranalysis.
When preparing your data for use in R, and in particular for
graphingwith
ggplot,bearinmindthatitisbestifitisrepresented
in a “tidy” format. Essentially this means that your data shouldbe inlongrather than wideformat, witheveryobservationarow
andeveryvariableacolumn.Wewilldiscussthisinmoredetailin
c h a p t e r3 ,a n dy o uc a na l s oc o n s u l tt h ed i s c u s s i o no ft i d yd a t ai n
theappendix.
2.6 Make Your First Figure
That’senoughgroundclearingfornow.Writingcodecanbefrus-trating,butitalsoallowsyoutodointerestingthingsquickly.Since
thegoalofthisbookisnottoteachyouallaboutRbutjusthowto
producegoodgraphics,wecanpostponealotofdetailsuntillater(orindeedignorethemindefinitely).Wewillstartaswemeantogoon,byusingafunctiontomakeanamedobject,andplottheresult.


------------------------


52 •Chapter 2
WewillusetheGapminderdataset,whichyoushouldalreadyhave
availableonyourcomputer .W eloadthedatawith library() and
takealook.
library (gapminder)
gapminder
## # A tibble: 1,704 x 6
## country continent year lifeExp pop gdpPercap## <fct> <fct> <int> <dbl> <int> <dbl>
## 1 Afghanistan Asia 1952 28.8 8425333 779.
## 2 Afghanistan Asia 1957 30.3 9240934 821.## 3 Afghanistan Asia 1962 32.0 10267083 853.
## 4 Afghanistan Asia 1967 34.0 11537966 836.
## 5 Afghanistan Asia 1972 36.1 13079460 740.## 6 Afghanistan Asia 1977 38.4 14880372 786.## 7 Afghanistan Asia 1982 39.9 12881816 978.
## 8 Afghanistan Asia 1987 40.8 13867957 852.
## 9 Afghanistan Asia 1992 41.7 16317921 649.## 10 Afghanistan Asia 1997 41.8 22227415 635.## # ... with 1,694 more rows
Thisisatableofdataaboutalargenumberofcountries,each
observed over several years. Let’s make a scatterplot with it. Typethe code below and try to get a sense of what’s happening. Don’tworrytoomuchyetaboutthedetails.
p←ggplot (data = gapminder,
mapping = aes(x= gdpPercap, y= lifeExp))
p+geom_point ()
Not a bad start. Our graph (fig. 2.6) is fairly legible, it has its
axes informatively labeled, and it shows some sort of relationship
between the two variables we have chosen. It could also be made
better.Let’slearnmoreabouthowtoimproveit.
2.7 Where to Go Next
You should go straight to the next chapter. However, you couldalsospend a littlemore timegettingfamiliarwith RandRStudio.


------------------------


Get Started •53
80
60
40
0 30000 60000 90000
gdpPercaplifeExpFigure 2.6: Life expectancy plotted against GDP per
capita for a large number of country-years.
Some information in the appendix to this book might already be
worthglancingat,especiallytheadditionalintroductorymaterial
onR,andthediscussionthereaboutsomecommonproblemsthat
tend to happen when reading in your own data. There are sev- swirlstats.com
eral free or initially free online introductions to the R language tryr.codeschool.com
datacamp.com thatareworthtrying. Youdonotneedtoknowthematerialthey
cover in order to keep going with this book, but you might find
oneormoreofthemuseful.Ifyougetalittleboggeddowninan y
of them or find the examples they choose are not that relevant to
y o u ,d o n ’ tw o r r y .T h e s ei n t r o d u c t i o n st e n dt ow a n tt oi n t r o d u c e
youtoarangeofprogrammingconceptsandtoolsthatwewillnot
needrightaway.
It is also worth familiarizing yourself a little with how RStu-
dio works and with what it can do for you. The RStudio website rstudio.com
has a great deal of introductory material to help you along. You
can also find a number of handy cheat sheets there that summa-
rizedifferentpiecesofRStudio,RMarkdown,andvarioustidyverse
packagesthatwewillusethroughoutthebook.Thesecheatsheets rstudio.com/resources/cheatsheets
arenotmeanttoteachyouthematerial,buttheyarehelpfulpoints
ofreferenceonceyouareupandrunning.


------------------------


3 Make a Plot
This chapter will teach you how to use ggplot’s core functions to
produce a series of scatterplots. From one point of view, we willproceed slowly and carefully, taking our time to understand the
logic behind the commands that you type. The reason for this is
thatthecentralactivityofvisualizingdatawithggplotmoreorlessalwaysinvolvesthesamesequenceofsteps.Soitisworthlearning
whattheyare.
From another point of view, though, we will move fast. Once
you have the basic sequence down and understand how it is thatg g p l o ta s s e m b l e st h ep i e c e so fap l o ti n t oafi n a li m a g e ,t h e n
youwillfindthatanalyticallyandaestheticallysophisticatedplots
come within your reach very quickly. By the end of this chapter,forexample,wewillhavelearnedhowtoproduceasmall-multipleplot of time-series data for a large number of countries, with a
smoothedregressionlineineachpanel.
3.1 How Ggplot Works
As we saw in chapter 1, visualization involves representing your
datausinglinesorshapesorcolorsandsoon.Thereissomestruc-tured relationship, some mapping, between the variables in your
dataandtheirrepresentationintheplotdisplayedonyourscreen
oronthepage. Wealsosawthatnotallmappingsmakesenseforalltypesofvariables,and(independentlyofthis)somerepresenta-tionsarehardertointerpretthanothers.Ggplotprovidesyouwith
asetoftoolstomapdatatovisualelementsonyourplot,tospec-
i f yt h ek i n do fp l o ty o uw a n t ,a n dt h e nt oc o n t r o lt h efi n ed e t a i l sofhowitwillbedisplayed.Figure3.1showsaschematicoutlineofthe process starting from data, at the top, down to a finished plot
at the bottom. Don’t worry about the details for now. We will be
goingintothemonepieceatatimeoverthenextfewchapters.


------------------------


Make a Plot •55
Themostimportantthingtogetusedtowithggplotistheway
you use it to think about the logical structure of your plot. The
code you write specifies the connections between the variables in
yourdata,andthecolors,points,andshapesyouseeonthescreen.Inggplot,theselogicalconnectionsbetweenyourdataandtheplotelementsarecalled aestheticmappings orjustaesthetics.Y oubegin
every plotbytellingthe
ggplot() functionwhatyourdataisand
howthevariablesinthisdatalogicallymapontotheplot’saesthet-ics.Thenyoutaketheresultandsaywhatgeneralsortofplotyou
w a n t ,s u c ha sas c a t t e r p l o t ,ab o x p l o t ,o rab a rc h a r t .I ng g p l o t ,
the overall type of plot is called a geom. Each geom has a func-
tionthatcreatesit.Forexample,
geom_point() makesscatterplots,
geom_bar() makes bar plots, geom_boxplot() makes boxplots,
andsoon.Y oucombinethesetwopieces,the ggplot() objectand
thegeom,byliterallyaddingthemtogetherinanexpression,using
the“ +”symbol.
Atthispoint,ggplotwillhaveenoughinformationtobeableto
dra waplotforyou.Therestisjustdetailsaboutexactlywha tyou
w a n tt os e e .I fy o ud o n ’ ts p e c i f ya n y t h i n gf u r t h e r ,g g p l o tw i l lu s easetofdefaultsthattrytobesensibleaboutwhatgetsdrawn.Butmoreoftenyouwillwanttospecifyexactlywhatyouwant,includ-
ing information about the scales, the labels of legends and axes,
a n do t h e rg u i d e st h a th e l pp e o p l et or e a dt h ep l o t .T h e s ep i e c e sare added to the plot in the same way as the
geom_function was.
Each component has its own function, you provide arguments to
itspecifyingwhattodo,andyouliterallyaddittothesequenceof
instructions. In this way you systematically build your plot piecebypiece.
Inthischapterwewillgothroughthemainstepsofthispro-
cess. We will proceed by example, repeatedly building a series of
plots. As noted earlier, I stronglyencourage you go through this
exercise manually, typing (rather than copying and pasting) thecode yourself. This may seem a bit tedious, but it is by farthe
most effective way to get used to what is happening, and to get
afeelforR ’ ssyntax.Whileyou’llinevitablymakesomeerrors,youwillalsoquicklyfindyourselfbecomingabletodiagnoseyourownmistakes,aswellashavingabettergraspofthehigher-levelstruc-
tureofplots.YoushouldopentheRMarkdownfileforyournotes,
remembertoloadthetidyversepackage,andwritethecodeoutin
library(tidyverse)
chunks,interspersingyourownnotesandcommentsasyougo.


------------------------


56 •Chapter 3
3.2 Tidy Data
Thetidyversetoolswewillbeusingwanttoseeyourdatainapar-
ticularsortofshape,generallyreferredtoas“tidydata”(Wickham
2014). Social scientists will likely be familiar with the distinction
betweenwide-format andlong-format data.Inalong-formattable,
every variable is a column, and every observation is a row. In a
w i d e - f o r m a tt a b l e ,so m ev a r i a b l e sa r es p r e a do u ta c r o s sc o l u m n s .
Forexample,table3.1showspartofatableoflifeexpectancyover
t i m ef o ras e r i e so fc o u n t r i e s .T h i si si nw i d ef o r m a tb e c a u s eo n e
ofthevariables,year,isspreadacrossthecolumnsofthetable.1. Tidy data
2. Mapping
3. Geom
5. Labels &
guides4. Co-ordinates &
scales
y
x
A gapminder plotgdp
340
227
909
12665
51
81
4031
200
80
20Euro
Amer
Euro
Asialifexp pop continentp /_4649 ggplot(data = gapminder, ...
p /_4649 ggplot(data = gapminder,
     mapping = aes(x = gdp,
     y = lifexp, size = pop,
     color = continent))
p + geom_point ()
p + coord_cartesian () +
    scale_x_log10 ()
p + labs(x = “log GDP”,
  y = “Life Expectancy”,
 title = “A Gapminder Plot”)
Asia
Euro
Amer
0–35
36–100
>100
log GDPLife expectancy
Figure 3.1: The main elements of ggplot’s grammar
of graphics. This chapter goes through these steps
in detail.Bycontrast,table3.2showsthebeginningofthesamedatain
long format. The tidy data that ggplot wants is in this long form.
I nar e l a t e db i to ft e r m i n o l o g y ,i nt h i st a b l et h e yearvariable is
sometimescalleda keyandthe lifeExpvariableisthe valuetaken
by that key for any particular row. These terms are useful when
converting tables from wide to long format. I am speaking fairly
looselyhere.Underneaththesetermsthereisaworked-outtheory
of the forms that tabular data can be stored in, but right now we
don’tneedtoknowthoseadditionaldetails.Formoreontheideas
behindtidydata,seethediscussionintheappendix.Youwillalso
findanexampleshowingtheRcodeyouneedtogetfromanuntidy
toatidyshapeforthecommon“wide”casewheresomevariables
arespreadoutacrossthecolumnsofyourtable.
If you compare tables 3.1 and 3.2, it is clear that a tidy table
does not present data in its most compact form. In fact, it is
usually not how you would choose to present your data if you
wanted just to show people the numbers. Neither is untidy data
“messy”orthe“wrong”waytolayoutdatainsomegenericsense.
I t ’ sj u s tt h a t ,e v e ni fi t sl o n g - f o r ms h a p em a k e st a b l e sl a r g e r ,t i d y
d a t ai sm u c hm o r es t r a i g h t f o r w a r dt ow o r kw i t hw h e ni tc o m e s
to specifying the mappings that you need to coherently describe
plots.
3.3 Mappings Link Data to Things You See
It’s useful to think of a recipe or template that we start from each
timewewanttomakeaplot.Thisisshowninfigure3.2.Westart
with just one object of our own, our data, which should be in a


------------------------


Make a Plot •57
Table3.1
LifeExpectancydatainwideformat.
country 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 2002 2007
A f g h a n i s t a n 2 93 03 23 43 63 84 04 14 24 24 24 4
A l b a n i a 5 55 96 56 66 86 97 07 27 27 37 67 6
A l g e r i a 4 34 64 85 15 55 86 16 66 86 97 17 2
Angola 30 32 34 36 38 39 40 40 41 41 41 43
A r g e n t i n a 6 26 46 56 66 76 87 07 17 27 37 47 5
A u s t r a l i a 6 97 07 17 17 27 37 57 67 87 98 08 1
shapethatggplotunderstands.Usuallythiswillbea dataframe or
someaugmentedversionofit,likea tibble.W etellthecore ggplot
functionwhatourdatais.Inthisbook,wewilldothisbycreating
anobjectnamed p,whichwillcontainthecoreinformationforour
plot. (The name pis just a convenience.) Then we choose a plot
type,orgeom,andadditto p.Fromthereweaddmorefeaturesto
th ep l o ta sn eed ed ,s u c ha sa d d i ti o n ale l e m e n t s ,a d j u s t edscal e s ,a
title,orotherlabels.Table3.2
LifeExpectancydatainlongformat.
country year lifeExp
Afghanistan 1952 29
Afghanistan 1957 30
Afghanistan 1962 32
Afghanistan 1967 34
Afghanistan 1972 36
Afghanistan 1977 38
Figure 3.2: A schematic for making a plot.We’ll use the gapminder data to make our first plots. Make
surethelibrarycontainingthedataisloaded.Ifyouarefollowing
throughfromthepreviouschapterinthesameRStudiosessionor
RMarkdowndocument,youwon’thavetoloaditagain.Otherwise,
uselibrary() tomakeitavailable.
library (gapminder)
Wecanremindourselvesagainwhatitlookslikebytypingthe
nameoftheobjectattheconsole:
gapminder
## # A tibble: 1,704 x 6
## country continent year lifeExp pop gdpPercap
## <fct> <fct> <int> <dbl> <int> <dbl>
## 1 Afghanistan Asia 1952 28.8 8425333 779.
## 2 Afghanistan Asia 1957 30.3 9240934 821.
## 3 Afghanistan Asia 1962 32.0 10267083 853.
## 4 Afghanistan Asia 1967 34.0 11537966 836.
## 5 Afghanistan Asia 1972 36.1 13079460 740.


------------------------


58 •Chapter 3
## 6 Afghanistan Asia 1977 38.4 14880372 786.
## 7 Afghanistan Asia 1982 39.9 12881816 978.
## 8 Afghanistan Asia 1987 40.8 13867957 852.
## 9 Afghanistan Asia 1992 41.7 16317921 649.## 10 Afghanistan Asia 1997 41.8 22227415 635.## # ... with 1,694 more rows
Let’ssaywewanttoplotlifeexpectancyagainstpercapitaGDP
forallcountry-yearsinthedata.We’lldothisbycreatinganobject
that has some of the necessary information in it and build it up
fromthere.First,wemusttellthe ggplot() functionwhatdatawe
areusing. Remember, use Option+minus on MacOS or
Alt+minus on Windows to type the assignment
operator.
p←ggplot (data = gapminder)
Atthispointggplotknowsourdatabutnotthe mapping.That
i s ,w en e e dt ot e l li tw h i c hv a r i a b l e si nt h ed a t as h o u l db er e p r e - You do not need to explicitly name the arguments
you pass to functions, as long as you provide themin the expected order, viz, the order listed on thehelp page for the function. This code would stillwork if we omitted
data = andmapping = .I nt h i s
book, I name all the arguments for clarity.sented by which visual elements in the plot. It also doesn’t know
whatsortofplotwewant.Inggplot,mappingsarespecifiedusingthe
aes()function,likethis:
p←ggplot (data = gapminder, mapping = aes(x= gdpPercap, y= lifeExp))
Here we’ve given the ggplot() function two arguments
insteadofone: dataandmapping.The dataargumenttellsggplot
wheretofindthevariablesitisabouttouse.Thissavesusfromhav-
ingtotediouslydigoutthenameof eachvariable infull. Instead,
anymentionsofvariableswillbelookedforherefirst.
Next,themapping.The mappingargumentisnotadataobject,
nor is it a character string. Instead, it’s a function. (Remember,
functionscanbenestedinsideotherfunctions.)Theargumentswe
givetothe aesfunction are a sequence of definitions that ggplot
w i l lu s el a t e r .H e r et h e ys a y ,“ T h ev a r i a b l eo nt h ex - a x i si sg o i n gto be
gdpPercap , and the variable on the y-axis is going to be
lifeExp.” The aes()function does not say where variables with
th o sen a m e sa r et obef o u n d .T h a t ’ sbe c a u se ggplot() is going to
assume that things with that name are in the object given to the
dataargument.
The mapping = aes(...) argument links variables tothings
you will see on the plot. The xandyvalues are the most obvious
ones. Other aesthetic mappings can include, for example, color,shape,size,andlinetype(whetheralineissolid,dashed,orsome


------------------------


Make a Plot •59
other pattern). We’ll see examples in a minute. A mapping does
notdirectlysaywhatparticularcolorsorshapes,forexample,will
be on the plot. Rather it says which variables in the data will be
represented by visual elements like a color, a shape, or a point on
theplotarea.
Whathappensifwejusttype pattheconsoleatthispointand
hitreturn?Theresultisshowninfigure3.3.
p80lifeExp60
40
0 30000 60000 90000
gdpPercap
Figure 3.3: This empty plot has no geoms.
The po b j e c th a sb e e nc r e a t e db yt h e ggplot() function and
alreadyhasinformationinitaboutthemappingswewant,together
with a lot of other information added by default. (If you want to
see just how much information is in the pobject already, try ask-
ingfor str(p).) However, we haven’t given it any instructions yet
aboutwhatsortofplottodraw .W eneedtoadda layertotheplot.
Thismeanspickinga geom_function.Wewilluse geom_point() .
Itknowshowtotake xandyvaluesandplottheminascatterplot.
p+geom_point ()
3.4 Build Your Plots Layer by Layer
Although we got a brief taste of ggplot at the end of chapter 2, we
spentmoretimeinthatchaperpreparingthegroundtomakethis
firstpropergraph. WesetupoursoftwareIDEandmadesurewe
80
60
40
30000 0 60000 90000
gdpPercaplifeExpFigure 3.4: A scatterplot of life expectancy vs GDP.


------------------------


60 •Chapter 3
could reproduce our work. We then learned the basics of how R
works, and the sort of tidy data that ggplot expects. Just now we
wentthroughthelogicofggplot’ smainidea,ofbuildingupplotsa
pieceatatimeinasystematicandpredictablefashion, beginningwith a mapping between a variable and an aesthetic element. Wehavedonealotofworkandproducedoneplot.
The good news is that, from now on, not much will change
c o n c e p t u a l l ya b o u tw h a tw ea r ed o i n g .I tw i l lb em o r eaq u e s -tion of learning in greater detail about how to tell ggplot what
to do. We will learn more about the different geoms (or types
of plot) available and find out about the functions that controlthe coordinate system, scales, guiding elements (like labels andtick-marks), and thematic features of plots. This will allow us to
makemuchmoresophisticatedplotssurprisinglyfast.Conceptu-
ally ,however ,wewillalwaysbedoingthesamething.W ewillstartwith a table of data that has been tidied, and then we will do thefollowing:
1. Tellthe
ggplot() functionwhatourdatais. Thedata = ... step.
2. Tell ggplot() whatrelationships we want to see. For conve- Themapping = aes(...) step.
niencewewillputtheresultsofthefirsttwostepsinanobject
called p.
3. Tell ggplothowwewanttoseetherelationshipsinourdata. Choose a geom.
4. Layerongeomsasneeded,byaddingthemtothe pobjectone
atatime.
5. Use some additional functions to adjust scales, labels, tick- Thescale_, family, labs() andguides() functions.
marks, titles. We’ll learn more about some of these functionsshortly.
To begin with we will let ggplot use its defaults for many of
theseelemen ts.Thecoor dina tesystemusedinplotsismostoften
cartesian, for example. It is a plane defined by an x-axis and ay-axis. This is what ggplot assumes, unless you tell it otherwise.Butwewillquicklystartmakingsomeadjustmen ts.Bearinmind
o n c ea g a i nt h a tt h ep r o c e s so fa d d i n gl a y e r st ot h ep l o tr e a l l yi s
additive.UsuallyinR,functionscannotsimplybeaddedtoobjects.
In effect we create one big object that is a nested
list of instructions for how to draw each piece ofthe plot. Rather,theytakeobjectsasinputsandproduceobjectsasoutputs.
Buttheobjectscreatedbyggplot()arespecial.Thismakesiteasier
toassembleplotsonepieceatatime,andtoinspecthowtheylook
ateverystep.Forexample,let’stryadifferent geom_functionwith
ourplot.


------------------------


Make a Plot •61
p←ggplot (data = gapminder, mapping = aes(x= gdpPercap, y= lifeExp))
p+geom_smooth ()80
70
60
50
40
0 30000 60000 90000
gdpPercaplifeExp
Figure 3.5: Life expectancy vs GDP, using a
smoother.You can see right away in figure 3.5 that some of these
geoms do a lot more than simply put points on a grid. Here
geom_smooth() hascalculateda smoothed linefor us andshaded
in a ribbon showing the standard error for the line. If we want to
see the data points and the line together (fig. 3.6), we simply add
geom_point() backin:
p←ggplot (data = gapminder, mapping = aes(x= gdpPercap, y= lifeExp))
p+geom_point ()+geom_smooth ()
##`geom_smooth() `using method = 'gam'and formula 'y ~ s(x, bs = "cs") '
80
60
40
0 30000 60000 90000
gdpPercaplifeExp
Figure 3.6: Life expectancy vs GDP, showing both
points and a GAM smoother.Theconsole messageRtells youthe geom_smooth() function
is using a methodcalled gam, which in this case means it has fit
a generalized additive model. This suggests that maybe there are
other methods that geom_smooth() understands, and which we
mighttellittouseinstead. Instructionsaregiventofunctionsvia
theirarguments,sowecantryadding method = "lm" (for“linear
model ”)asanargumentto geom_smooth() :
p←ggplot (data = gapminder, mapping = aes(x= gdpPercap, y= lifeExp))
p+geom_point ()+geom_smooth (method = "lm" )
For figures 3.5 to 3.7 we did not have to tell geom_point()
orgeom_smooth() where their data was coming from, or what
mappingstheyshoulduse.They inheritthisinformationfromthe
original pob ject.A swe ’llseela ter ,i t ’ spossibletogivegeo mssep-
arateinstructionsthattheywillfollowinstead.Butintheabsence
of any other information, the geoms will look for the instruc-
tions they need in the ggplot() function, or the object created
byit.150
100lifeExp
50
0 30000 60000 90000
gdpPercap
Figure 3.7: Life expectancy vs GDP, points and an
ill-advised linear fit.I no u rp l o t ,t h ed a t ai sq u i t eb u n c h e du pa g a i n s tt h el e fts i d e .
Gross domestic product per capita is not normally distributed
across our country years. The x-axis scale would probably look
betterifitweretransformedfromalinearscaletoalogscale.For
thiswecanuseafunctioncalled scale_x_log10() .Asyoumight
expect,thisfunctionscalesthex-axisofaplottoalog10basis.T o
useitwejustaddittotheplot:


------------------------


62
•
Chapter 3
p
←
ggplot
(
data =
gapminder,
mapping =
aes
(
x=
gdpPercap,
y=
lifeExp))
p
+
geom_point
()
+
geom_smooth
(
method =
"gam"
)
+
scale_x_log10
()
80
60
40
1e+03
1e+04
1e+05
gdpPercap
lifeExp
Figure 3.8:
Life expectancy vs GDP scatterplot, with
a GAM smoother and a log scale on the x-axis.
The x-axis transformation repositions the points and also
changestheshapethesmoothedline(fig.3.8).(Weswitchedback
to
gam
from
lm
.)While
ggplot()
anditsassociatedfunctionshave
not made any changes to our underlying data frame, the scale
transformation is applied to the data before the smoother is lay-
eredontotheplot.Thereareavarietyofscaletransformationsthat
youcanuseinjustthisway.Eachisnamedforthetransformation
youwanttoapply,andtheaxisyouwanttoapplyitto.Inthiscase
weuse
scale_x_log10()
.
At this point, if our goal was just to show a plot of life expec-
tancy vs GDP using sensible scales and adding a smoother, we
wouldbethinkingaboutpolishinguptheplotwithniceraxislabels
and a title. Perhaps we might also want to replace the scientific
notation on the x-axis with the dollar value it actually represents.
W ec a nd ob o t ho ft h e s et h i n g sq u i t ee a s i l y .L e t ’ st a k ec a r eo ft h e
scalefirst.Thelabelsonthetick-markscanbecontrolledthrough
the
scale_
functions.Whileit’spossibletorollyourownfunction
to label axes (or just supply your labels manually, as we will see
later),there’salsoahandy
scales
packagethatcontainssomeuse-
ful premade formatting functions. We can either load the whole
package with
library(scales)
or, more conveniently, just grab
t h es p e c i fi cf o r m a t t e rw ew a n tf r o mt h a tl i b r a r y .H e r ei t ’ st h e
dollar()
function.Tograbafunctiondirectlyfromapackagewe
havenotloaded,weusethesyntax
thepackage::thefunction
.So
wecandothis:
p
←
ggplot
(
data =
gapminder,
mapping =
aes
(
x=
gdpPercap,
y=
lifeExp))
p
+
geom_point
()
+
geom_smooth
(
method =
"gam"
)
+
scale_x_log10
(
labels =
scales
::
dollar)
80
60
40
$1,000
$10,000
$100,000
gdpPercap
lifeExp
Figure 3.9:
Life expectancy vs GDP scatterplot, with
a GAM smoother and a log scale on the x-axis, with
better labels on the tick-marks.
Wewilllearnmoreaboutscaletransformationslater.Fornow,
justremembertwothingsaboutthem.First,youcandirectlytrans-
formyourx-ory-axisbyaddingsomethinglike
scale_x_log10()
or
scale_y_log10()
to your plot. When you do so, the x- or
y-axis will be transformed, and, by default, the tick-marks on
the axis will be labeled using scientific notation. Second, you can
give these
scale_
functions a
labels
a r g u m e n tt h a tr e f o r m a t s


------------------------


Make a Plot •63
the text printed underneath the tick-marks on the axes. Inside
thescale_x_log10() function try labels=scales::comma ,f o r
example.
3.5 Mapping Aesthetics vs Setting Them
Anaestheticmapping specifiesthatavariablewillbeexpressedby
oneoftheavailablevisualelements,suchassize,orcolor,orshape.
Aswe’veseen,wemapvariablestoaestheticslikethis:
80lifeExp60
40
1e+03 1e+04 1e+05
gdpPercapColour
Purple
Figure 3.10: What has gone wrong here?p←ggplot (data = gapminder, mapping = aes(x= gdpPercap, y= lifeExp,
color = continent))
This code does notgive a direct instruction like “color the
points purple.” Instead it says, “the property ‘color’ will represent
thevariable continent ,”or“colorwillmap continent .” If we want
toturnallthepointsinthefigurepurple,wedo notdoitthrough
themappingfunction.Lookatwhathappenswhenwetry:
p←ggplot (data = gapminder, mapping = aes(x= gdpPercap, y= lifeExp,
color = "purple" ))
p+geom_point ()+geom_smooth (method = "loess" )+scale_x_log10 ()
What has happened in figure 3.10? Why is there a legend
saying “purple”? And why have the points all turned pinkish-red
instead of purple? Remember, an aesthetic is a mapping of vari-
a b l e si ny o u rd a t at op r o p e r t i e sy o uc a ns e eo nt h eg r a p h .T h e
aes()function is where that mapping is specified, and the func-
tion is trying to do its job. It wants to map a variable to the color
a e s t h e t i c ,s oi ta s s u m e sy o ua r eg i v i n gi tav a r i a b l e .W eh a v eo n l y Just as in chapter 1, when we were able to write
‘my_numbers + 1 ’ to add one to each element of the
vector.givenitoneword,though—“purple.”Still, aes()willdoitsbestto
treatthatwordasthoughitwereavariable.Avariableshouldhave
as many observations as there are rows in the data, so aes()falls
back on R’s recycling rules for making vectors of different lengths
matchup.
In effect, this creates a new categorical variable for your data.
Thestring“purple”isrecycledforeveryrowofyourdata.Nowyou
haveanewcolumn. Everyelementinithasthesamevalue, “pur-
ple.” Then ggplot plots the results on the graph as you’ve asked it
to,bymappingittothe coloraesthetic.Itdutifullymakesalegend
forthisnewvariable.Bydefault,ggplotdisplaysthepointsfalling


------------------------


64
•
Chapter 3
into the category “purple” (which is all of them) using its default
first-categoryhue,whichisred.
The
aes()
function is for mappings only. Do not use it to
change properties to a particular value. If we want to
set
ap r o p -
erty,wedoitinthe
geom_
weareusing,and
outside
the
mapping =
aes(...)
step.Trythis:
p
←
ggplot
(
data =
gapminder,
mapping =
aes
(
x=
gdpPercap,
y=
lifeExp))
p
+
geom_point
(
color =
"purple"
)
+
geom_smooth
(
method =
"loess"
)
+
scale_x_log10
()
80
60
40
1e+03 1e+04 1e+05
gdpPercap
lifeExp
Figure 3.11:
Setting the color attribute of the points
directly.
The
geom_point()
function can take a
color
argument
directly,andRknowswhatcolor“purple”is(fig.3.11).Thisisnot
part of the aesthetic mapping that defines the basic structure of
thegraphic.Fromthepointofviewofthegrammarorlogicofthe
graph, the fact that the points are colored purple has no signifi-
cance. Thecolorpurpleisnotrepresentingormappingavariable
orfeatureofthedataintherelevantway.
p
←
ggplot
(
data =
gapminder,
mapping =
aes
(
x=
gdpPercap,
y=
lifeExp))
p
+
geom_point
(
alpha =
0.3
)
+
geom_smooth
(
color =
"orange"
,
se =
FALSE
,
size =
8
,
method =
"lm"
)
+
scale_x_log10
()
80
60
40
1e+03 1e+04 1e+05
gdpPercap
lifeExp
Figure 3.12:
Setting some other arguments.
The various
geom_
functions can take many other arguments
thatwillaffecthowtheplotlooksbutdonotinvolvemappingvari-
ables to aesthetic elements. Thus those arguments will never go
insidethe
aes()
function. Some of the things we will want to set,
likecolororsize,havethesamenameasmappableelements.Oth-
ers,likethe
method
or
se
argumentsin
geom_smooth()
affectother
aspects of the plot. In the code for figure 3.12, the
geom_smooth(
callsetsthelinecolortoorangeandsetsitssize(i.e.,thickness)to
8, an unreasonably large value. We also turn off the
se
option by
switching it from its default value of
TRUE
to
FALSE
.T h er e s u l ti s
thatthestandarderrorribbonisnotshown.
M e a n w h i l ei nt h e
geom_smooth()
call we set the
alpha
argu-
It’s also possible to map a continuous variable
directly to the alpha property, much like one might
map a continuous variable to a single-color gradient.
However, this is generally not an effective way of
precisely conveying variation in quantity.
ment to 0.3. Like color, size, and shape, “alpha” is an aesthetic
property that points (and some other plot elements) have, and to
which variables can be mapped. It controls how transparent the
objectwillappearwhendrawn.It’smeasuredonascaleofzeroto
one.Anobjectwithanalphaofzerowillbecompletelytransparent.
Setting it to zero will make any other mappings the object might


------------------------


Make a Plot •65
have, such as color or size, invisible as well. An object with an
alpha of one will be completely opaque. Choosing an intermedi-
a t ev a l u ec a nb eu s e f u lw h e nt h e r ei sal o to fo v e r l a p p i n gd a t at o
plot (as in fig. 3.13), as it makes it easier to see where the bulk of
theobservationsarelocated.
80
60
40
$1,000 $10,000 $100,000
Source: Gapminder. GDP per CapitaLife expectancy in yearsData points are country-yearsEconomic growth and life expectancy
Figure 3.13: A more polished plot of Life Expectancy
vs GDP.p←ggplot (data = gapminder, mapping = aes(x= gdpPercap, y=lifeExp))
p+geom_point (alpha = 0.3)+
geom_smooth (method = "gam" )+
scale_x_log10 (labels = scales ::dollar) +
labs (x= "GDP Per Capita" ,y= "Life Expectancy in Years" ,
title = "Economic Growth and Life Expectancy" ,
subtitle = "Data points are country-years" ,
caption = "Source: Gapminder." )
W ec a nn o wm a k ear e a s o n a b l yp o l i s h e dp l o t .W es e tt h e
alphaofthepointstoalowvalue,makenicerx-andy-axislabels,
and add a title, subtitle, and caption. As you can see in the code
above, in addition to x,y,a n da n yo t h e ra e s t h e t i cm a p p i n g si n
your plot (such as size,ﬁll,o rcolor), the labs()function can
also set the text for title,subtitle ,a n d caption.I tc o n t r o l s
themain labels of scales. The appearance of things like axis tick-
marksistheresponsibilityofvarious scale_functions,suchasthe
scale_x_log10() function used here. We will learn more about
whatcanbedonewith scale_functionssoon.
1e+03 1e+04 1e+05
gdpPercap80
60
40lifeExpContinent
Africa
AmericasAsia
EuropeOceania
Figure 3.14: Mapping the continent variable to the
color aesthetic.Arethereanyvariablesinourdatathatcansensiblybemapped
to the coloraesthetic? Consider continent . In figure 3.14 the
individual data points have been colored by continent ,a n da
legend with a key to the colors has automatically been added to
the plot. In addition, instead of one smoothing line we now have
five.Thereisoneforeachuniquevalueofthe continent variable.
This is a consequence of the way aesthetic mappings are inher-
ited. Along with xand y,t h e coloraesthetic mapping is set in
thecallto ggplot() thatweusedtocreatethe pobject.Unlesstold
otherwise,allgeomslayeredontopoftheoriginalplotobjectwill
inheritthatobject’smappings. Inthiscasewegetbothourpoints
andsmootherscoloredbycontinent.
p←ggplot (data = gapminder, mapping = aes(x= gdpPercap, y= lifeExp,
color = continent))
p+geom_point ()+geom_smooth (method = "loess" )+scale_x_log10 ()


------------------------


66
•
Chapter 3
Ifitiswhatwewant,thenwemightalsoconsidershadingthe
standard error ribbon of each line to match its dominant color,
as in figure 3.15. The color of the standard error ribbon is con-
trolled by the
ﬁll
aesthetic. Whereas the
color
aesthetic affects
theappearanceoflinesandpoints,
ﬁll
isforthefilledareasofbars,
polygonsand,inthiscase,theinteriorofthesmoother’sstandard
errorribbon.
1e+03 1e+04 1e+05
gdpPercap
80
60
40
lifeExp
Continent
Africa
Americas
Asia
Europe
Oceania
Figure 3.15:
Mapping the continent variable to the
color aesthetic, and correcting the error bars using
the fill aesthetic.
1e+03 1e+04 1e+05
gdpPercap
80
60
40
lifeExp
Continent
Africa
Americas
Asia
Europe
Oceania
Figure 3.16:
Mapping aesthetics on a per geom
basis. Here color is mapped to continent for the
points but not the smoother.
p
←
ggplot
(
data =
gapminder,
mapping =
aes
(
x=
gdpPercap,
y=
lifeExp,
color =
continent,
ﬁll =
continent))
p
+
geom_point
()
+
geom_smooth
(
method =
"loess"
)
+
scale_x_log10
()
Makingsurethatcolorandfillaestheticsmatchupconsistently
inthiswayimprovestheoveralllookoftheplot.Tomakeithappen
wejustneedtospecifythatthemappingsaretothesamevariable
ineachcase.
3.6 Aesthetics Can Be Mapped per Geom
Perhaps five separate smoothers is too many, and we just want
o n el i n e .B u tw es t i l lw o u l dl i k et oh a v et h ep o i n t sc o l o r - c o d e d
by continent. By default, geoms inherit their mappings from the
ggplot()
function. We can change this by specifying different
aesthetics for each
geom
.W eu s et h es a m e
mapping = aes(...)
expression as in the initial call to
ggplot()
but now use it in the
geom_
functionsaswell,specifyingthemappingswewanttoapply
toeachone(fig. 3.16).Mappingsspecifiedintheinitial
ggplot()
function—here,
x
and
y
— w i l lc a r r yt h r o u g ht oa l ls u b s e q u e n t
geoms.
p
←
ggplot
(
data =
gapminder,
mapping =
aes
(
x=
gdpPercap,
y=
lifeExp))
p
+
geom_point
(
mapping =
aes
(
color =
continent))
+
geom_smooth
(
method =
"loess"
)
+
scale_x_log10
()
It’spossibletomapcontinuousvariablestothe
color
aesthetic,
too .F o rexa m ple,w eca nma pthelogo feachco un try-y ea r ’ spo p-
ulation(
pop
)to
color
.(Wecantakethelogofpopulationrightin
the
aes()
statement,usingthe
log()
function.Rwillevaluatethis
for us.) When we do this, ggplot produces a gradient scale. It is


------------------------


Make a Plot •67
continuousbutismarkedatintervalsinthelegend.Dependingon
thecircumstances,mappingquantitieslikepopulationtoacontin-
uous color gradient (fig. 3.17) may be more or less effective than
cuttingthevariableintocategoricalbinsrunning,e.g.,fromlowto
high.Ingeneralitisalwaysworthlookingatthedatainitscontin-
uousformfirstratherthancuttingorbinningitintocategories.
p←ggplot (data = gapminder, mapping = aes(x= gdpPercap, y= lifeExp))
p+geom_point (mapping = aes(color = log(pop))) +scale_x_log10 ()
Finally, it is worth paying a little more attention to the way
that ggplot draws its scales. Because every mapped variable has a
scale, we can learn a lot about how a plot has been constructed,
and what mappings it contains, by seeing what the legends look
like. For example, take a closer look at the legends produced in
figures3.15and3.16.80
60
40
1e+03 1e+04 1e+05
log(pop)
19 17 13 15
gdpPercaplifeExp
Figure 3.17: Mapping a continuous variable to color.
Continent
Africa
Americas
Asia
Europe
OceaniaAfrica
Americas
Asia
Europe
OceaniaContinent
Figure 3.18: Guides and legends faithfully reflect the
mappings they represent.In the legend for the first figure, shown in figure 3.18 on the
left, we see several visual elements. The key for each continent
shows a dot, a line, and a shaded background. The key for the
second figure, shown on the right, has only a dot for each con-
tinent,withnoshadedbackgroundorline.Ifyoulookagainatthe
codeforfigures3.15and3.16,youwillseethatinthefirstcasewe
mapped the continent variable to both colorandﬁll.W et h e n
drewthefigurewith geom_point() andfittedalineforeachcon-
tinent with geom_smooth() .P o i n t sh a v e colorbut the smoother
understandsboth color(forthelineitself)and ﬁll(fortheshaded
standard error ribbon). Each of these elements is represented
in the legend: the point color, the line color, and the ribbon fill.
Inthesecondfigure,wedecidedtosimplifythingsbyhavingonly
t h ep o i n t sb ec o l o r e db y continent . Then we drew just a single
smootherforthewholegraph.Thus,inthelegendforthatfigure,
the colored line and the shaded box are both absent. We see only
alegendforthemappingof colortocontinent ingeom_point() .
Meanwhile on the graph itself the line drawn by geom_smooth()
i ss e tb yd e f a u l tt oab r i g h tb l u e ,d i ff e r e n tf r o ma n y t h i n go nt h e
scale, and its shaded error ribbon is set by default to gray. Small
details like this are not accidents. They are a direct consequence
of ggplot’s grammatical way of thinking about the relationship
between the data behind the plot and the visual elements that
representit.


------------------------


68 •Chapter 3
3.7 Save Your Work
Now that you have started to make your own plots, you may be
wonderinghowtosavethem,andperhapsalsohowtocontroltheirsizeandformat. IfyouareworkinginanRMarkdowndocument,thentheplotsyoumakewillbeembeddedinit,aswehavealready
seen. You can set the default size of plots within your
.Rmddocu-
m e n tb yse t ti n ga no p ti o ni ny o u rfi r s tc od ec h u nk .T h i so n et e ll sRtomake8x5figures:
knitr ::opts_chunk $set(ﬁg.width = 8,ﬁg.height = 5)
Becauseyouwillbemakingplotsofdifferentsizesandshapes,
sometimes you will want to control the size of particular plots,without changing the default. To do this, you can add the sameoptions to any particular chunk inside the curly braces at the
beginning. Remember, each chunk opens with three backticks
and then a pair of braces containing the language name (for usalways
r)andanoptionallabel:
```{r example}
p + geom_point()
```
You can follow the label with a comma and provide a series
of options if needed. They will apply only to that chunk. To
make a figure twelve inches wide and nine inches high we
say, e.g., {r example, ﬁg.width = 12, ﬁg.height = 9} in the
bracessection.
You will often need to save your figures individually, as they
will end up being dropped into slides or published in papers that
are not produced using RMarkdown. Saving a figure to a file canbe done in several different ways. When working with
ggplot,
the easiest way is to use the ggsave() function. To save the most
recently displayed figure, we provide the name we want to save it
under:
ggsave (ﬁlename = "my_ﬁgure.png" )


------------------------


Make a Plot •69
T h i sw i l ls a v et h efi g u r ea saP N Gfi l e ,af o r m a ts u i t a b l ef o r Several other file formats are available as well. See
the function’s help page for details.displaying on web pages. If you want a PDF instead, change the
extensionofthefile:
ggsave (ﬁlename = "my_ﬁgure.pdf" )
Remember that, for convenience, you do not need to write
ﬁlename = aslongasthenameofthefileisthefirstargumentyou
give ggsave() .Y o uc a na l s op a s sp l o to b j e c t st o ggsave() .F o r
example, we can put our recent plot into an object called p_out
andthentell ggsave() thatwewanttosavethatobject.
p_out ←p+geom_point ()+geom_smooth (method = "loess" )+scale_x_log10 ()
ggsave ("my_ﬁgure.pdf" ,plot = p_out)
W h e ns a v i n gy o u rw o r k ,i ti su s e f u lt oh a v eo n eo rm o r e
subfolders where you save only figures. You should also take
care to name your saved figures in a sensible way. ﬁg_1.pdf
ormy_ﬁgure.pdf are not good names. Figure names should be
compact but descriptive, and consistent between figures within aproject.Inaddition,althoughitreallyshouldn’tbethecaseinthis
dayandage,itisalsowisetoplayitsafeandavoidfilenamescon-
tainingcharacterslikelytomakeyourcodechokeinfuture.Theseinclude apostrophes, backticks, spaces, forward and back slashes,andquotes.
The appendix contains a short discussion of how to organize
yourfileswithinyourprojectfolder.Treattheprojectfolderasthehomebaseofyourworkforthepa perorworkyouaredoing,andputyourdataandfiguresinsubfolderswithintheprojectfolder.To
beginwith,usingyourfilemanager,createafoldernamed“figures”
insideyourprojectfolder.Whensavingfigures,youcanuseKirillMüller’s handy
herel i b r a r yt om a k ei te a s i e rt ow o r kw i t hfi l e s
andsubfolderswhilenothavingtotypeinfullfilepaths.Loadthe
libraryinthesetupchunkofyourRMarkdowndocument. When
youdo,ittellsyouwhere“here ”isforthecurrentproject.Y ouwillsee a message saying something like this, with your file path andusernameinsteadofmine:
# here() starts at /Users/kjhealy/projects/socviz


------------------------


70 •Chapter 3
You can then use the here()functiontomakeloadingandsav-
ing your work more straightforward and safer. Assuming a folder
named“figures”existsinyourprojectfolder,youcandothis:
ggsave (here ("ﬁgures" ,"lifexp_vs_gdp_gradient.pdf" ),plot = p_out)
Thissaves p_outasafilecalled lifeexp_vs_gdp_gradient.pdf in
theﬁguresdirectory here,i.e.,inyourcurrentprojectfolder.
Youcansaveyourfigureinavarietyofformats,dependingon
your needs (and also, to a lesser extent, on your particular com-puter system). The most important distinction to bear in mindis between vectorformats and rasterformats. A file with a vector
format, like PDF or SVG, is stored as a set of instructions about
lines,shapes,colors,andtheirrelationships.Theviewingsoftware(such as Adobe Acrobat or Apple’s Preview application for PDFs)then interprets those instructions and displays the figure. Repre-
senting the figure this way allows it to be easily resized without
becoming distorted. The underlying language of the PDF formatis Postscript, which is also the language of modern typesettingandprinting.Thismakesavector-basedformatlikePDFthebest
choiceforsubmissiontojournals.
Araster-basedformat,ontheotherhand,storesimagesessen-
tiallyasagridofpixelsofapredefinedsizewithinformationaboutthe location, color, brightness, and so on of each pixel in the
grid. This makes for more efficient storage, especially when used
in conjunction with compression methods that take advantage ofredundancyinimagesinordertosavespace.FormatslikeJPGarecompressedrasterformats.APNGfileisarasterimageformatthat
supportslosslesscompression.Forgraphscontaininganawfullot
of data, PNG files will tend to be much smaller than the corre-sponding PDF. However, raster formats cannot be easily resized.In particular they cannot be expanded in size without becoming
pixelated or grainy. Formats like JPG and PNG are the standard
way that images are displayed on the web. The more recent SVGformat is vector-based format but also nevertheless supported bymanywebbrowsers.
Ingeneralyoushouldsaveyourworkinseveraldifferentfor-
mats.Whenyousaveindifferentformatsandindifferentsizesyoumay need to experiment with the scaling of the plot and the sizeof the fonts in order to get a good result. The
scaleargument to
ggsave() can help you here (you can try out different values, like


------------------------


Make a Plot •71
scale=1.3 ,scale=5, and so on). You can also use ggsave() to
explicitly set the height and width of your plot in the units that
youchoose.
ggsave (here ("ﬁgures" ,"lifexp_vs_gdp_gradient.pdf" ),plot = p_out,
height = 8,width = 10,units = "in" )
Now that you know how to do that, let’s get back to making
moregraphs.
3.8 Where to Go Next
Startbyplayingaroundwiththe gapminder dataalittlemore.Y ou
can try each of these explorations with geom_point() and then
with geom_smooth() ,orbothtogether .
•W h a th a p p e n sw h e ny o up u tt h e geom_smooth() function
before geom_point() insteadofafterit?Whatdoesthistellyou
a b o u th o wt h ep l o ti sd r a w n ?T h i n ka b o u th o wt h i sm i g h tb e
usefulwhendrawingplots.
•C h a n g et h em a p p i n g si nt h e aes()function so that you plot
lifeexpectancyagainstpopulation( pop)ratherthanpercapita
GDP .Whatdoesthatlooklike?Whatdoesittellyouaboutthe
unitofobservationinthedataset?
•Try some alternative scale mappings. Besides scale_x_log
10(),y o uc a nt r y scale_x_sqrt() and scale_x_reverse() .
Therearecorrespondingfunctionsfory-axistransformations.
Just write yinstead of x. Experiment with them to see what
effecttheyhaveontheplot,andwhethertheymakeanysensetouse.
•Whathappensifyoumap colortoyearinsteadof continent ?
Is the result what you expected? Think about what class ofobject
yearis.Rememberyoucangetaquicklookatthetopof
the data, which includes some shorthand information on the
classofeachvariable,bytyping gapminder .
•Instead of mapping color = year ,w h a th a p p e n si fy o ut r y
color = factor(year) ?
•As you look at these different scatterplots, think aboutfigure3.13alittlemorecritically.Weworkedituptothepoint
whereitwasreasonablypolished,butisitreallythebestwayto


------------------------


72 •Chapter 3
display this country-year data? What are we gaining and los-
ingbyignoringthetemporalandcountry-levelstructureofthe
data?Howcouldwedobetter?Sketchoutwhatanalternative
visualizationmightlooklike.
As you begin to experiment, remember two things. First, it’s
alwaysworthtryingsomething,evenifyou’renotsurewhat’sgoingto happen. Don’t be afraid of the console. The nice thing about
This license does not extend to, for example,
overwriting or deleting your data by mistake. Youshould still manage your project responsibly, at aminimum keeping good backups. But within R andat the level of experimenting with graphs at theconsole, you have a lot of freedom. making your graphics through code is that you won’t break any-
thing you can’t reproduce. If something doesn’t work, you can
figureoutwhathappened, fixthings, andrerunthecodetomakethegraphagain.
Second, remember that the main flow of action in ggplot is
alwaysthesame. Youstartwithatableofdata, youmapthevari-
ablesyouwanttodisplaytoaestheticslikeposition,color,orshape,a n dy o uc h o o s eo n eo rm o r eg e o m st od r a wt h eg r a p h .I ny o u r
code this gets accomplished by making an object with the basic
informationaboutdataandmappings,andthenaddingorlayeringadditionalinformationasneeded.Onceyougetusedtothiswayofthinking about your plots, especially the aesthetic mapping part,
drawing them becomes easier. Instead of having to think about
how to draw particular shapes or colors on the screen, the many
geom_functionstakecareofthatforyou.Inthesameway ,learning
newgeomsiseasieronceyouthinkofthemaswaystodisplayaes-
theticmappingsthatyouspecify. Mostofthelearningcurvewith
ggplotinvolvesgettingusedtothiswayofthinkingaboutyourdataand its representation in a plot. In the next chapter, we will fleshout these ideas a little more, cover some common ways plots go
“wrong” (i.e., when they end up looking strange), and learn how
torecognizeandavoidthoseproblems.


------------------------


4 Show the Right Numbers
This chapter will continue to develop your fluency with ggplot’s
central workflow while also expanding the range of things youcan do with it. One of our goals is to learn how to make new
kinds of graph. This means learning some new geoms, the func-
tions that make particular kinds of plots. But we will also geta better sense of what ggplot is doing when it draws plots, and
learn more about how to write code that prepares our data to be
plotted.
Code almost never works properly the first time you write
it. This is the main reason that, when learning a new language,
i ti si m p o r t a n tt ot y p eo u tt h ee x e r c i s e sa n df o l l o wa l o n gm a n -
ually. It gives you a much better sense of how the syntax of thel a n g u a g ew o r k s ,w h e r ey o u ’ r el i k e l yt om a k ee r r o r s ,a n dw h a tthe computer does when that happens. Running into bugs and
e r r o r si sf r u s t r a t i n g ,b u ti t ’ sa l s oa no p p o r t u n i t yt ol e a r nab i t
more. Errors can be obscure, but they are usually not maliciousorrandom. Ifsomethinghasgonewrong, youcanfindoutwhyithappened.
InRandggplot, errorsincodecanresultinfiguresthatdon’t
look right. We have already seen the result of one of the mostcommon problems, when an aesthetic is mistakenly set to a con-stant value instead of being mapped to a variable. In this chapter
wewilldiscusssomeusefulfeaturesofggplotthatalsocommonly
causetrouble.Theyhavetodowithhowtotellggplotmoreaboutthe internal structure of your data ( grouping), how to break up
your data into pieces for a plot ( faceting), and how to get ggplot
t op e r f o r ms o m ec a l c u l a t i o n so no rs u m m a r i z ey o u rd a t ab e f o r e
producing the plot ( transforming ). Some of these tasks are part
of ggplot proper, so we will learn more about how geoms, withthe help of their associated statfunctions, can act on data before
plotting it. As we shall also see, while it is possible to do a lot of
transformation directly in ggplot, there can be more convenientwaystoapproachthesametask.


------------------------


74 •Chapter 4
4.1 Colorless Green Data Sleeps Furiously
When you write ggplot code in R you are in effect trying to
“say” something visually. It usually takes several iterations to saye x a c t l yw h a ty o um e a n .T h i si sm o r et h a nam e t a p h o rh e r e .T h eg g p l o tl i b r a r yi sa ni m p l e m e n t a t i o no ft h e“ g r a m m a r ”o fg r a p h -
ics, an idea developed by Wilkinson (2005). The grammar is a
set of rules for producing graphics from data, taking pieces ofdata and mapping them to geometric objects (like points andlines)thathaveaestheticattributes(likeposition,color,andsize),
together with further rules for transforming the data if needed
(e.g.,toasmoothedline),adjustingscales(e.g.,toalogscale),and
We will see some alternatives to Cartesian
coordinates later.projecting the results onto a different coordinate system (usually
Cartesian).
Akeypointisthat,likeotherrulesofsyntax,thegrammarlim-
itsthestructureofwhatyoucansay,butitdoesnotautomaticallymake what you say sensible or meaningful. It allows you to pro-duce long “sentences” that begin with mappings of data to visual
elementsandaddclausesaboutwhatsortofplotitis,howtheaxes
are scaled, and so on. But these sentences can easily be garbled.SometimesyourcodewillnotproduceaplotatallbecauseofsomesyntaxerrorinR.Youwillforgeta
+signbetween geom_functions
or lose a parenthesis somewhere so that your function statement
becomes unbalanced. In those cases R will complain (perhaps inan opaque way) that something has gone wrong. At other times,yourcodewillsuccessfullyproduceaplot,butitwillnotlookthe
wayyouexpecteditto.Sometimestheresultswilllookveryweird
i n d e e d .I nt h o s ec a s e s ,t h ec h a n c e sa r ey o uh a v eg i v e ng g p l o taseries of grammatically correct instructions that are either non-sensicalinsomewayorhaveaccidentallytwistedwhatyoumeant
tosay.Theseproblemsoftenarisewhenggplotdoesnothavequite
all the information it needs in order make your graphic say whatyouwantittosay.
4.2 Grouped Data and the “Group” Aesthetic
Let’sbeginagainwithourGapminderdataset.Imaginewewantedto plot the trajectory of life expectancy over time for each coun-try in the data. We map
yeartoxand lifeExptoy.W et a k ea


------------------------


Show the Right Numbers •75
quick look at the documentation and discover that geom_line()
willdrawlinesbyconnectingobservationsinorderofthevariable
onthex-axis,whichseemsright.Wewriteourcode:
p←ggplot (data = gapminder, mapping = aes(x= year, y= gdpPercap))
p+geom_line ()
90000
60000
30000
0
1950 1960 1970 1980 1990 2000yeargdpPercap
Figure 4.1: Trying to plot the data over time by
country.Something has gone wrong in figure 4.1. What happened?
While ggplot will make a pretty good guess as to the structure of
thedata,itdoesnotknowthattheyearlyobservationsinthedata
are grouped by country. We have to tell it. Because we have not,
geom_line() gamelytriestojoinupallthelinesforeachparticular
yearintheordertheyappearinthedataset, aspromised. Itstarts
withanobservationfor1952inthefirstrowofthedata.Itdoesn’t
knowthisbelongstoAfghanistan.InsteadofgoingtoAfghanistan
1953,itfindsthereareaseriesof1952observations,soitjoinsall
those up first, alphabetically by country, all the way down to the
1952observationthatbelongstoZimbabwe.Thenitmovestothe
firstobservationinthenextyear,1957. This would have worked if there were only one
country in the dataset.The result is meaningless when plotted. Bizarre-looking out-
putinggplotiscommonenoughbecauseeveryoneworksouttheir
plotsonebitatatime,andmakingmistakesisjustafeatureofpuz-
zlingouthowyouwanttheplottolook.Whenggplotsuccessfully
makesaplotbuttheresultlooksinsane,thereasonisalmostalways
thatsomething hasgone wrong inthemapping between the data
andaestheticsforthegeombeingused.Thisissocommonthere’s
evenaTwitteraccountdevotedtothe“AccidentalaRt”thatresults.
Sodon’tdespair!
In this case, we can use the groupaesthetic to tell ggplot
explicitlyaboutthiscountry-levelstructure.
p←ggplot (data = gapminder, mapping = aes(x= year, y= gdpPercap))
p+geom_line (aes(group = country))
90000
60000
30000
0
1950 1960 1970 1980 1990 2000yeargdpPercap
Figure 4.2: Plotting the data over time by country,
again.The plot in figure 4.2 is still fairly rough, but it is showing
the data properly, with each line representing the trajectory of a
country over time. The gigantic outlier is Kuwait, in case you are
interested.
The groupaesthetic is usually only needed when the group-
ing information you need to tell ggplot about is not built into the
variables being mapped. For example, when we were plotting the


------------------------


76 •Chapter 4
pointsby continent, mapping colortocontinent was enough to
get the right answer because continent is already a categorical
variable, so the grouping is clear. When mapping xtoyear,h o w -
ever,thereisnoinformationinthe yearvariableitselftoletggplot
know that it is grouped by country for the purposes of drawing
lineswithit.Soweneedtosaythatexplicitly.
4.3 Facet to Make Small Multiples
T h ep l o tw ej u s tm a d eh a sal o to fl i n e so ni t .W h i l et h eo v e r a l l
trend is more or less clear, it looks a little messy. One option is to
facett h ed a t ab ys o m et h i r dv a r i a b l e ,m a k i n ga“ s m a l lm u l t i p l e ”
p lo t.Thisisapo w erfultechniq uetha tallo wsalo to finf o rma tio n
to be presented compactly and in a consistently comparable way.
A separate panel is drawn for each value of the faceting variable.
Facets are not a geom but rather a way of organizing a series of
geoms.Inthiscasewehavethe continent variableavailabletous.
We will use facet_wrap() tosplitourplotby continent .
The facet_wrap() function can take a series of arguments,
but the most important is the first one, which is specified using
R’s “formula” syntax, which uses the tilde character, ~.F a c e t sa r e
usually a one-sided formula. Most of the time you will just want
a single variable on the right side of the formula. But faceting is
powerfulenoughtoaccommodatewhatareineffectthegraphical
equivalentofmultiwaycontingencytables,ifyourdataiscomplex
enough to require that. For our first example, we will just use a
singleterminourformula,whichisthevariablewewantthedata
brokenupby: facet_wrap(~ continent) .
p←ggplot (data = gapminder, mapping = aes(x= year, y= gdpPercap))
p+geom_line (aes(group = country)) +facet_wrap (~continent)90000
60000
30000
0
90000
60000
30000
0
90000
60000
30000
0
90000
60000
30000
0
90000
60000
30000
0Africa
Americas
Europe
Oceania
year1960 1950 1980 1970 2000 1990AsiagdpPercap
Figure 4.3: Faceting by continent.Eachfacetislabeledatthetop.Theoveralllayoutoffigure4.3
minimizestheduplicationofaxislabelsandotherscales.Remem-
ber, too, that we can still include other geoms as before, and they
will be layered within each facet. We can also use the ncolargu-
ment to facet_wrap() tocontrolthenumberofcolumnsusedto
layoutthefacets.Becausewehaveonlyfivecontinents,itmightbe
worthseeingifwecanfitthemonasinglerow(whichmeanswe’ll


------------------------


Show the Right Numbers •77
$100,000
$10,000
$1,000
1950 1960 1970 1980 1990 2000 1950 1960 1970 1980 1990 2000 1950 1960 1970 1980 1990 2000 1950 1960 1970 1980 1990 2000 1950 1960 1970 1980 1990 2000
YearAfricaGDP per capita on ﬁve continentsGDP per capitaAmericas Asia Europe Oceania
Figure 4.4: Faceting by continent, again.
havefivecolumns).Inaddition,wecanaddasmoother,andafew
cosmeticenhancementsthatmakethegraphalittlemoreeffective
(fig.4.4).Inparticularwewillmakethecountrytrendsalightgray
color.Weneedtowritealittlemorecodetomakeallthishappen.
If you are unsure of what each piece of code does, take advantage
ofggplot’sadditivecharacter.Workingbackwardfromthebottom
up, remove each + some_function(...) statement one at a time
toseehowtheplotchanges.
p←ggplot (data = gapminder, mapping = aes(x= year, y= gdpPercap))
p+geom_line (color= "gray70" ,aes(group = country)) +
geom_smooth (size = 1.1,method = "loess" ,se = FALSE )+
scale_y_log10 (labels= scales ::dollar) +
facet_wrap (~continent, ncol = 5)+
labs (x= "Year" ,
y= "GDP per capita" ,
title = "GDP per capita on Five Continents" )
Thisplotbringstogetheranaestheticmappingof xandyvari- We could also have faceted by country, which
would have made the group mapping superfluous.
But that would make almost 150 panels.ables,agroupingaesthetic( country),twogeoms(alineplotanda
smoother), a log-transformed y-axis with appropriate tick labels,
afacetingvariable( continent ),andfinallyaxislabelsandatitle.
The facet_wrap() function is best used when you want a
series of small multiples based on a single categorical variable.
Your panels will be laid out in order and then wrapped into a
grid. If you wish you can specify the number of rows or the


------------------------


78 •Chapter 4
number of columns in the resulting layout. Facets can be more
complex than this. For instance, you might want to cross-classify
somedatabytwocategoricalvariables.Inthatcaseyoushouldtry
facet_grid() instead. This function will lay out your plot in a
true two-dimensional arrangement, instead of a series of panelswrappedintoagrid.
To see the difference, let’s introduce
gss_sm,an e wd a t a s e t
that we will use in the next few sections, as well as later on inthebook. Itisasmallsubsetofthequestionsfromthe2016Gen-
eral Social Survey, or GSS. The GSS is a long-running survey
of American adults that asks about a range of topics of interestto social scientists. The
gapminder data consists mostly of con- To begin with, we will use the GSS data in a slightly
naive way. In particular we will not consider sampleweights when making the figures in this chapter. Inchapter 6 we will learn how to calculate frequenciesand other statistics from data with a complex orweighted survey design. tinuousvariables measured within countries by year. Measures
l i k eG D Pp e rc a p i t ac a nt a k ea n yv a l u ea c r o s sal a r g er a n g ea n d
they vary smoothly. The only categorical grouping variable is
continent . It is an unordered categorical variable. Each country
belongs to one continent, but the continents themselves have no
natural ordering. By contrast, the GSS contains many categorical
measures.
Insocialscientificwork,especiallywhenanalyzingindividual-
level survey data, we often work with categorical data of various
kinds. Sometimes the categories are unordered, as with ethnicity
or sex. But they may also be ordered, as when we measure high-estlevelofeducationattainedonascalerangingfromelementaryschooltopostgraduatedegree.Opinionquestionsmaybeaskedin
yes-or-no terms, or on a five- or seven-point scale with a neutral
valueinthemiddle.Meanwhile,manynumericmeasures,suchasnumberofchildren,maystilltakeonlyintegervalueswithinarela-tivelynarrowrange.Inpracticethesetoomaybetreatedasordered
categorical variables running from zero to some top-coded value
suchas“Sixormore.”Evenproperlycontinuousmeasures,suchasincome, are rarely reported to the dollar and are often obtainableonlyasorderedcategories.TheGSSdatain
gss_smcontainsmany
measures of this sort. You can take a peek at it, as usual, by typ-
i n gi t sn a m ea tth ec o n so l e .Y o uc o ul dal sotry glimpse(gss_sm) ,
w h i c hw i l lg i v eac o m p a c ts u m m a r yo fa l lt h ev a r i a b l e si nthedata.
Wewillmakeasmoothedscatterplot(fig.4.5)oftherelation-
shipbetweentheageoftherespondentandthenumberofchildrentheyhave.In
gss_smthechildsvariableisanumericcountofthe
respondent’s children. (There is also a variable named kidsthat


------------------------


Show the Right Numbers
•
79
8
6
4
2
0
8
6
4
2
0
20 40 60 80 20 40 60 80 20 40 60 80
Age
Childs
White Black Other
Male
Female
Figure 4.5:
Faceting on two categorical variables.
Each panel plots the relationship between age and
number of children, with the facets breaking out the
data by sex (in the rows) and race (in the columns).
i st h es a m em e a s u r e ,b u ti t sc l a s si sa no r d e r e df a c t o rr a t h e rt h a n
an u m be r . )W ew i l lth e nf a c e tth i sr e l a t i o n s h i pb yse xa n dr a c eo f
the respondent. We use R’s formula notation in the
facet_grid
function to facet sex and race. This time, because we are cross-
classifyingourresults, theformulaistwo-sided:
facet_grid(sex
~ race)
.
p
←
ggplot
(
data =
gss_sm,
mapping =
aes
(
x=
age,
y=
childs))
p
+
geom_point
(
alpha =
0.2
)
+
geom_smooth
()
+
facet_grid
(sex
~
race)
Multipanel layouts of this kind are especially effective when
usedtosummarizecontinuousvariation(asinascatterplot)across
two or more categorical variables, with the categories (and hence
t h ep a n e l s )o r d e r e di ns o m es e n s i b l ew a y .W ea r en o tl i m i t e dt o
two-way comparison. Further categorical variables can be added
t ot h ef o r m u l a ,t o o ,( e . g . ,
sex ~ race + degree
) for more com-
plex multiway plots. However, the multiple dimensions of plots
likethiswillquicklybecomeverycomplicatedifthevariableshave
morethanafewcategorieseach.


------------------------


80 •Chapter 4
4.4 Geoms Can Transform Data
Wehavealreadyseenseveralexampleswhere geom_smooth() was
included as a way to add a trend line to the figure. Sometimes
we plotted a LOESS line, sometimes a straight line from an OLS
regression, and sometimes the result of a Generalized Additive
Model. We did not have to have any strong idea of the differ-
ences between these methods. Neither did we have to write any
codetospecifytheunderlyingmodels, beyondtellingthe method
argument in geom_smooth() which one we wanted to use. The
geom_smooth() functiondidtherest.
Thussomegeomsplotourdatadirectlyonthefigure,asisthe
casewith geom_point() ,whichtakesvariablesdesignatedas xand
yand plots the points on a grid. But other geoms clearly do more
workonthedatabeforeitgetsplotted.Every geom_functionhasan Tryp + stat_smooth() , for example.
associated stat_functionthatitusesbydefault.Thereverseisalso
the case: every stat_function has an associated geom_function
that it will plot by default if you ask it to. This is not particularly
im portan ttokno wb yitself,butaswewillseeinthenextsection,
we sometimes want to calculate a different statistic for the geom
fromthedefault.
Sometimesthecalculationsbeingdonebythe stat_functions
that work together with the geom_functions might not be imme-
diately obvious. For example, consider figure 4.6, produced by a
newgeom, geom_bar() .
p←ggplot (data = gss_sm, mapping = aes(x= bigregion))
p+geom_bar ()1000
750
500
250
0
Northeast Midwest South West
bigregioncount
Figure 4.6: A bar chart.Here we specified just one mapping, aes(x = bigregion) .
The bar chart produced gives us a count of the number of (indi-
vidual)observationsinthedatasetbyregionoftheUnitedStates.
Thisseemssensible.Butthereisay-axisvariablehere, count,that
isnotinthedata.Ithasbeencalculatedforus.Behindthescenes,
geom_bar called the default stat_function associated with it,
stat_count() . This function computes two new variables, count
and prop(short for proportion). The countstatistic is the one
geom_bar() usesbydefault.
p←ggplot (data = gss_sm, mapping = aes(x= bigregion))
p+geom_bar (mapping = aes(y= ..prop..))


------------------------


Show the Right Numbers •81
If we want a chart of relative frequencies rather than counts,
we will need to get the propstatistic instead. When ggplot calcu-
lates the count or the proportion, it returns temporary variables
that we can use as mappings in our plots. The relevant statistic is
called ..prop.. rather than prop.T om a k es u r et h e s et e m p o r a ry
variableswon’tbeconfusedwithothersweareworkingwith,their
namesbeginandendwithtwoperiods.(Thisisbecausewemight
alreadyhaveavariablecalled countorpropinourdataset.)Soour
calls to it from the aes()function will generically look like this:
<mapping> = <..statistic..> .Inthiscase,wewant ytousethe
calculatedproportion,sowesay aes(y = ..prop..) .
1.00
0.75
0.50
0.25
0.00
Northeast Midwest South West
bigregionprop
Figure 4.7: A first go at a bar chart with proportions.
0.3prop0.2
0.1
0.0
Northeast Midwest South West
bigregion
Figure 4.8: A bar chart with correct proportions.The resulting plot in figure 4.7 is still not right. We no longer
haveacountonthey-axis,buttheproportionsofthebarsallhave
a value of 1, so all the bars are the same height. We want them
tosumto 1, so that we get the number of observations per con-
tinent as a proportion of the total number of observations, as in
figure4.8.Thisisagroupingissueagain.Inasense,it’sthereverse
of the earlier grouping problem we faced when we needed to tell
ggplot that our yearly data was grouped by country. In this case,
we need to tell ggplot to ignoret h ex - c a t e g o r i e sw h e nc a l c u l a t i n g
denominatoroftheproportionandusethetotalnumberobserva-
tionsinstead.T odosowespecify group = 1 insidethe aes()call.
Thevalueof 1isjustakindof“dummygroup”thattellsggplotto
use the whole dataset when establishing the denominator for its
propcalculations.
p←ggplot (data = gss_sm, mapping = aes(x= bigregion))
p+geom_bar (mapping = aes(y= ..prop.., group = 1))
Let’s look at another question from the survey. The gss_sm
data contains a religion variable derived from a question ask-
ing “What is your religious preference? Is it Protestant, Catholic,
Jewish,someotherreligion,ornoreligion?”
table (gss_sm $religion)
##
## Protestant Catholic Jewish None Other
## 1371 649 51 619 159
To graph this, we want a bar chart with religion on the x Recall that the $character is one way of accessing
individual columns within a data frame or tibble.axis (as a categorical variable), and with the bars in the chart also


------------------------


82 •Chapter 4
colored by religion . If the gray bars look boring and we want to
fillthemwithcolorinstead, wecanmapthe religion variableto
ﬁllinadditiontomappingitto x.Remember, ﬁllisforpainting
theinsidesofshapes.Ifwemapreligionto color,onlytheborder
linesofthebarswillbeassignedcolors,andtheinsideswillremain
gray.1000
500
0Protestant
Catholic
JewishNone
Other
NAReligion
1000
500
0
Protestant Catholic Jewish None Other NA
ReligionCount
Figure 4.9: GSS religious preference mapped to
color ( top) and both color and fill ( bottom ).p←ggplot (data = gss_sm, mapping = aes(x= religion, color = religion))
p+geom_bar ()
p←ggplot (data = gss_sm, mapping = aes(x= religion, ﬁll = religion))
p+geom_bar ()+guides (ﬁll = FALSE )
Bydoingthis,wehavemappedtwoaestheticstothesamevari-
able. Both xand ﬁllare mapped to religion .T h e r ei sn o t h i n g
wrong with this. However, these are still two separate mappings,
andsotheygettwoseparatescales(fig.4.9).Thedefaultistoshow
a legend for the color variable. This legend is redundant because
thecategoriesof religion arealreadyseparatedoutonthex-axis.
In itssimplest use, the guides() functioncontrols whether guid-
inginformationaboutanyparticularmappingappearsornot.Ifwe
setguides(ﬁll = FALSE) ,thelegendisremoved, ineffectsaying
thattheviewerofthefiguredoesnotneedtobeshownanyguid-
ing information about this mapping. Setting the guide for some
mappingto FALSEhasaneffectonlyifthereisalegendtoturnoff
tobeginwith.Trying x = FALSE ory = FALSE willhavenoeffect,
as these mappings have no additional guides or legends separate
from their scales. It is possible to turn the x and y scales off alto-
gether,butthisisdonethroughadifferentfunction,onefromthe
scale_family.
4.5 Frequency Plots the Slightly Awkward Way
Amoreappropriateuseofthe ﬁllaestheticwith geom_bar() isto
cross-classifytwocategoricalvariables.Thisisthegraphicalequiv-
alentofafrequencytableofcountsorproportions.UsingtheGSS
data, for instance, we might want to examine the distribution of
religiouspreferenceswithindifferentregionsoftheUnitedStates.
In the next few paragraphs we will see how to do this just using
ggplot.However,asweshallalsodiscover,itisoftennotthemost


------------------------


Show the Right Numbers •83
transparent way to make frequency tables of this sort. The next
chapterintroducesasimplerandlesserror-proneapproachwhere
wecalculatethetablefirstbeforepassingtheresultsalongtoggplot
to graph. As you work through this section, bear in mind that if
you find things slightly awkward or confusing it is because that’s
exactlywhattheyare.
Let’s say we want to look at religious preference by census
region. That is, we want the religion variablebrokendownpro-
portionally within bigregion . When we cross-classify categories
in bar charts, there are several ways to display the results. With
geom_bar() the output is controlled by the position argument.
Let’sbeginbymapping ﬁlltoreligion .
p←ggplot (data = gss_sm, mapping = aes(x= bigregion, ﬁll = religion))
p+geom_bar ()Northeast Midwest South West
Bigregion1.00
750
250
0500CountReligion
Protestant
Catholic
JewishNone
Other
NA
Figure 4.10: A stacked bar chart of religious
preference by census region.
The default output of geom_bar() is a stacked bar chart
(fig.4.10)withcountsonthey-axis(andhencecountswithinthe
stacked segments of the bars also). Region of the country is on
the x-axis, and counts of religious preference are stacked within
thebars.Aswesawinchapter1,itissomewhatdifficultforreaders
of the chart to compare lengths and areas on an unaligned scale.
So while the relative position of the bottom categories are quite
clear(thankstothemallbeingalignedonthex-axis),therelative
positions of, say, the “Catholic” category is harder to assess. An
alternativechoiceistosetthe position argumentto "ﬁll."(This
isdifferentfromthe ﬁllaesthetic.)
p←ggplot (data = gss_sm, mapping = aes(x= bigregion, ﬁll = religion))
p+geom_bar (position = "ﬁll" )
0.751.00
0.25
Northeast Midwest South West
Bigregion0.000.50CountReligion
Protestant
Catholic
JewishNone
Other
NA
Figure 4.11: Using the fill position adjustment to
show relative proportions across categories.Now (fig. 4.11) the bars are all the same height, which makes
it easier to compare proportions across groups. But we lose the
abilityto see the relative size of each cut with respect to the over-
alltotal.Whatifwewantedtoshowtheproportionorpercentage
of religions within regions of the country, like in figure 4.11, but
instead of stacking the bars we wanted separate bars instead? As
afir sta t tem p t,w eca nuse position = "dodge" tomake thebars
withineachregionofthecountryappearsidebyside.However,if
we do it this way (try it), we will find that ggplot places the bars
side-by-sideasintendedbutchangesthey-axisbacktoa countof


------------------------


84 •Chapter 4
c a s e sw i t h i ne a c hc a t e g o r yr a t h e rt h a ns h o w i n gu sap r o p o r t i o n .
Wesawinfigure4.8thattodisplayaproportionweneededtomap
y = ..prop.. ,sothecorrectstatisticwouldbecalculated.Let’ ssee
ifthatworks.
p←ggplot (data = gss_sm, mapping = aes(x= bigregion, ﬁll = religion))
p+geom_bar (position = "dodge" ,mapping = aes(y= ..prop..))1.00
0.75
0.25
Northeast Midwest South West
Bigregion0.000.50PropReligion
Protestant
Catholic
JewishNone
Other
NA
Figure 4.12: A first go at a dodged bar chart with
proportional bars.The result (fig. 4.12) is certainly colorful but not what we
w a n t e d .J u s ta si nfi g u r e4 . 7 ,t h e r es e e m st ob ea ni s s u ew i t ht h e
grouping. When we just wanted the overall proportions for one
variable,wemapped group = 1 totellggplottocalculatethepro-
portions with respect to the overall N. In this case our grouping
variable is religion , so we might try mapping that to the group
aesthetic.
p←ggplot (data = gss_sm, mapping = aes(x= bigregion, ﬁll = religion))
p+geom_bar (position = "dodge" ,mapping = aes(y= ..prop..,
group = religion))
Thisgivesusabarchartwherethevaluesof religion arebro-
kendownacrossregions,withaproportionshowingonthey-axis.
Ifyouinspectthebarsinfigure4.13,youwillseethattheydonot
sumtoonewithineachregion.Instead,thebarsforanyparticular
religionsumtoone acrossregions.0.6
0.4
Northeast Midwest South West
Bigregion0.00.2PropReligion
Protestant
Catholic
JewishNone
Other
NA
Figure 4.13: A second attempt at a dodged bar
chart with proportional bars.T h i sl e t su ss e et h a tn e a r l yh a l fo ft h o s ew h os a i dt h e yw e r e
Protestant live in the South, for example. Meanwhile, just over
10percentofthosesayingtheywereProtestantliveintheNorth-
east. Similarly, it shows that over half of those saying they were
JewishliveintheNortheast,comparedtoaboutaquarterwholive
intheSouth.
Proportions for smaller subpopulations tend to
bounce around from year to year in the GSS.W ea r es t i l ln o tq u i t ew h e r ew eo r i g i n a l l yw a n t e dt ob e .O u r
goal was to take the stacked bar chart in Figure 4.10 but have the
proportionsshownside-by-sideinsteadofontopofoneanother.
p←ggplot (data = gss_sm, mapping = aes(x= religion))
p+geom_bar (position = "dodge" ,mapping = aes(y= ..prop..,
group = bigregion)) +facet_wrap (~bigregion, ncol = 1)
Itturnsoutthattheeasiestthingtodoistostoptryingtoforce
geom_bar() todoalltheworkinasinglestep.Instead,wecanask


------------------------


Show the Right Numbers •85
0.6
0.4
0.2
0.0
0.6
Religion0.4
0.2
0.0
Protestant Catholic Jewish None Other NA Protestant Catholic Jewish None Other NAPropNortheast Midwest
South WestFigure 4.14: Faceting proportions within region.
ggplot to give us a proportional bar chart of religious affiliation,
and then facet that by region. The proportions in figure 4.14 are
calculatedwithineachpanel,whichisthebreakdownwewanted.
This has the added advantage of not producing too many bars
withineachcategory.
Wecouldpolishthisplotfurther, butforthemomentwewill
stop here. When constructing frequency plots directly in ggplot,
it is easy to get stuck in a cycle of not quite getting the marginal
comparison that you want, and more or less randomly poking at
themappingstotrytostumbleontherightbreakdown.Inthenext
chapter, we will learn how to use the tidyverse’s dplyrlibrary to
p r o d u c et h et a b l e sw ew a n t beforewe try to plot them. This is a
more reliable approach, and easier to check for errors. It will also
giveustoolsthatcanbeusedformanymoretasksthanproducing
summaries.
4.6 Histograms and Density Plots
Different geoms transform data in different ways, but ggplot’s
vocabulary for them is consistent. We can see similar transfor-
mations at work when summarizing a continuous variable using
a histogram, for example. A histogram is a way of summarizing a
continuousvariablebychoppingitupintosegmentsor“bins”and
counting how many observations are found within each bin. In a
bar chart, the categories are given to us going in (e.g., regions of


------------------------


86 •Chapter 4
thecountry,orreligiousaffiliation).Withahistogram,wehaveto
decidehowfinelytobinthedata.
Forexample,ggplotcomeswithadataset, midwest,containing
informationoncountiesinseveralmidwesternstatesoftheUnited
States. Counties vary in size, so we can make a histogram show-
ing the distribution of their geographical areas. Area is measured
in square miles. Because we are summarizing a continuous vari-
ableusingaseriesofbars,weneedtodividetheobservationsinto
groups, or bins, and count how many are in each one. By default,
thegeom_histogram() functionwillchooseabinsizeforusbased
onaruleofthumb.
p←ggplot (data = midwest, mapping = aes(x= area))
p+geom_histogram ()
##`stat_bin() `using `bins = 30 `. Pick better value with
##`binwidth `.
p←ggplot (data = midwest, mapping = aes(x= area))
p+geom_histogram (bins = 10)
As with the bar charts, a newly calculated variable, count,
appears on the x-axis in figure 4.15. The notification from R tells
us that behind the scenes the stat_bin() function picked thirty
bins,butwemightwanttotrysomethingelse.Whendrawinghis-
tograms it is worth experimenting with binsa n da l s oo p t i o n a l l y
theoriginof the x-axis. Each, especially bins, will make a big
differenceinhowtheresultingfigurelooks.
Whilehistogramssummarizesinglevariables,it’salsopossible
to use several at once to compare distributions. We can facet his-
tograms by some variable of interest, or as here, we can compare
theminthesameplotusingthe ﬁllmapping(fig.4.16).
Figure 4.15: Histograms of the same variable, using
different numbers of bins.75
50
25
0
0.00 0.03 0.06 0.09
AreaCount
050100150
0.00 0.03 0.06 0.09
AreaCount


------------------------


Show the Right Numbers •87
oh_wi ←c("OH" ,"WI" )
p←ggplot (data = subset (midwest, subset = state %in% oh_wi),
mapping = aes(x= percollege, ﬁll = state))
p+geom_histogram (alpha = 0.4,bins = 20)20
10
10 20 30 40
Percollege0CountWIState
OH
Figure 4.16: Comparing two histograms.Wesubsetthedataheretopickoutjusttwostates. Todothis
we create a character vector with just two elements, “OH” and
“WI.”Thenweusethe subset() functiontotakeourdataandfil-
teritsothatweselectonlyrowswhose statenameisinthisvector.
The %in%operator is a convenient way to filter on more than one
terminavariablewhenusing subset() .
When working with a continuous variable, an alternative to
binning the data and making a histogram is to calculate a ker-
nel density estimate of the underlying distribution. The geom_
density() functionwilldothisforus(fig.4.17).
p←ggplot (data = midwest, mapping = aes(x= area))
p+geom_density ()40
30
20
10
0
0.00 0.03 0.06 0.09
AreaDensity
Figure 4.17: Kernel density estimate of county areas.We can use color(for the lines) and ﬁll(for the body of the
density curve) here, too. These figures often look quite nice. But
when there are several filled areas on the plot, as in this case, the
overlapcanbecomehardtoread.(Figures4.18and4.19areexam-
ples.) If you want to make the base lines of the density curves go
away, you can use geom_line(stat = "density") instead. This
alsoremovesthepossibilityofusingthe ﬁllaesthetic.Butthismay
beanimprovementinsomecases.Tryitwiththeplotofstateareas
andseehowtheycompare.
p←ggplot (data = midwest, mapping = aes(x= area, ﬁll = state,
color = state))
p+geom_density (alpha = 0.3)
Just like geom_bar() , the count-based defaults computed
by the stat_functions used by geom_histogram() and geom_
density() will return proportional measures if we ask them.
Forgeom_density() ,the stat_density() functioncanreturnits
default ..density.. statistic, or ..scaled.. ,w h i c hw i l lg i v ea
proportional density estimate. It can also return a statistic called


------------------------


88 •Chapter 4
..count.. ,whichisthedensitytimesthenumberofpoints.This
canbeusedinstackeddensityplots.
120
90
60
30
0
0.00 0.03 0.06 0.09
AreaDensityState
IL IN MI OH WI
Figure 4.18: Comparing distributions.p←ggplot (data = subset (midwest, subset = state %in% oh_wi),
mapping = aes(x= area, ﬁll = state, color = state))
p+geom_density (alpha = 0.3,mapping = (aes(y= ..scaled..)))
1.00
0.75
0.50
0.25
0.025 0.050 0.075State
OH WI
Area0.00Scaled
Figure 4.19: Scaled densities.4.7 Avoid Transformations When Necessary
As we have seen from the beginning, ggplot normally makes its
charts starting from a full dataset. When we call geom_bar() it
d o e si t sc a l c u l a t i o n so nt h efl yu s i n g stat_count() behind the
scenestoproducethecountsorproportionsitdisplays.Inthepre-
v i o u sse c t i o n ,w el oo k e da tac a sew h e r ew ew a n t e dt og r o u pa n d
aggregate our data ourselves before handing it off to ggplot. But
oftenourdatais,ineffect, alreadyasummarytable.Thiscanhap-
pen when we have computed a table of marginal frequencies or
percentages from the original data. Plotting results from statisti-
c a lm o d e l sa l s op u t su si nt h i sp o s i t i o n ,a sw ew i l ls e el a t e r .O ri t
maybethatwejusthaveafinishedtableofdata(fromthecensus,
say, or an official report) that we want to make into a graph. For
example,perhapswedonothavetheindividual-leveldataonwho
survivedthe Titanicdisaster,butwedohaveasmalltableofcounts
ofsurvivorsbysex:
60Sex
Female Male
40
20
0
Perished Survived
FatePercent
Figure 4.20: Survival on the Titanic ,b ys e x .titanic
## fate sex n percent
## 1 perished male 1364 62.0
## 2 perished female 126 5.7
## 3 survived male 367 16.7
## 4 survived female 344 15.6
Because we are working directly with percentage values in a
summarytable,wenolongerhaveanyneedforggplottocountup
valuesforusorperformanyothercalculations.Thatis,wedonot
need the services of any stat_functions that geom_bar() would
normally call. We can tell geom_bar() not to do any work on the
variable before plotting it. To do this we say stat = ‘identity’
inthe geom_bar() call.We’llalsomovethelegendtothetopofthe
chart(fig.4.20).


------------------------


Show the Right Numbers •89
p←ggplot (data = titanic, mapping = aes(x= fate, y= percent,
ﬁll = sex))
p+geom_bar (position = "dodge" ,stat = "identity" )+theme (legend.position = "top" )
F o rc o n v e n i e n c eg g p l o ta l s op r o v i d e sar e l a t e dg e o m ,
geom_col() , which has exactly the same effect but assumes that
stat = "identity." W ewillusethisforminthefuturewhenwe
don’tneedanycalculationsdoneontheplot.
The position argument in geom_bar() andgeom_col() can
also take the value of "identity." Just as stat = "identity"
means “don’t do any summary calculations,” position =
"identity" m e a n s“ j u s tp l o tt h ev a l u e sa sg i v e n . ”T h i sa l l o w su s
to do things like plotting a flow of positive and negative values
i nab a rc h a r t .T h i ss o r to fg r a p hi sa na l t e r n a t i v et oal i n e p l o ta n di so ft e ns e e ni np u b l i cp o l i c ys e t t i n g sw h e r ec h a n g e sr e l a t i v eto some threshold level or baseline are of interest. For example,
the
oecd_sum table in socvizcontains information on average
life expectancy at birth within the United States and across otherOECDcountries.
oecd_sum
## # A tibble: 57 x 5
## # Groups: year [57]
## year other usa diff hi_lo## <int> <dbl> <dbl> <dbl> <chr>## 1 1960 68.6 69.9 1.30 Below
## 2 1961 69.2 70.4 1.20 Below
## 3 1962 68.9 70.2 1.30 Below## 4 1963 69.1 70.0 0.900 Below## 5 1964 69.5 70.3 0.800 Below
## 6 1965 69.6 70.3 0.700 Below
## 7 1966 69.9 70.3 0.400 Below## 8 1967 70.1 70.7 0.600 Below## 9 1968 70.1 70.4 0.300 Below
## 10 1969 70.1 70.6 0.500 Below
## # ... with 47 more rows
Theothercolumnistheaveragelifeexpectancyinagivenyear
forOECDcountries,excludingtheUnitedStates.The usacolumn
i st h eU . S .l i f ee x p e c t a n cy , diffis the difference between the two


------------------------


90 •Chapter 4
1
0Diﬀerence in years–1
1960 1980 2000
Data: OECD. After a chart by Christopher Ingraham,
Washington Post, December 27th 2017.Difference between US and  OECD average life expectancies, 1960–2015The US life expectancy gap
Figure 4.21: Using geom_col() to plot negative and positive values in a bar chart.
values,and hi_loindicateswhethertheU.S.valueforthatyearwas
aboveorbelowtheOECDaverage.W ewillplotthedifferenceover
timeandusethe hi_lovariabletocolorthecolumnsinthechart
(fig.4.21).
p←ggplot (data = oecd_sum,
mapping = aes(x= year, y= diff, ﬁll = hi_lo))
p+geom_col ()+guides (ﬁll = FALSE )+
labs (x= NULL ,y= "Difference in Years" ,
title = "The US Life Expectancy Gap" ,
subtitle = "Difference between US and OECD
average life expectancies, 1960-2015" ,
caption = "Data: OECD. After a chart by Christopher Ingraham,
Washington Post, December 27th 2017." )
Aswiththe titanicplot, the default action of geom_col() is
tosetboth statandposition to“identity .” To get the same effect
with geom_bar() we would need to say geom_bar(position =
"identity") .Asbefore,the guides(ﬁll = FALSE) instructionat
theendtellsggplottodroptheunnecessarylegendthatwouldoth-
erwisebeautomaticallygeneratedtoaccompanythe ﬁllmapping.
Atthispoint,wehaveaprettygoodsenseofthecorestepswe
must take to visualize our data. In fact, thanks to ggplot’s default
settings,wenowhavetheabilitytomakegood-lookingandinfor-
mative plots. Starting with a tidy dataset, we know how to map
variablestoaesthetics, choosefromavarietyofgeoms, andmake
some adjustments to the scales of the plot. We also know more


------------------------


Show the Right Numbers •91
about selecting the right sort of computed statistic to show on
thegraph,ifthat’swhat’sneeded,andhowtofacetourcoreplotby
one or more variables. We know how to set descriptive labels for
axesandwriteatitle,subtitle,andcaption.Nowwe’reinapositiontoputtheseskillstoworkinamorefluentway.
4.8 Where to Go Next
•Revisit the gapminder plots at the beginning of the chapter
andexperimentwithdifferentwaystofacetthedata.Tryplot-tingpopulationandpercapitaGDPwhilefacetingonyear,oreven on country. In the latter case you will get a lot of panels,
andplottingthemstraighttothescreenmaytakealongtime.
Instead,assigntheplottoanobjectandsaveitasaPDFfiletoyour
ﬁgures/folder.Experimentwiththeheightandwidthof
thefigure.
•Investigatethedifferencebetweenaformulawrittenas facet_
grid(sex ~ race) and one written as facet_grid(~ sex +
race).
•Experimenttoseewhathappenswhenyouuse facet_wrap()
withmorecomplexformulaslike facet_wrap(~ sex + race)
instead of facet_grid .L i k e facet_grid() ,t h e facet_
wrap()function can facet on two or more variables at once.
B u ti tw i l ld oi tb yl a y i n gt h er e s u l t so u ti naw r a p p e do n e -
dimensionaltableinsteadofafullycross-classifiedgrid.
•Frequency polygons are closely related to histograms. Instead
ofdisplayingthecountofobservationsusingbars,theydisplayitwithaseriesofconnectedlines.Y oucantrythevarious
geom_
histogram() calls in this chapter using geom_freqpoly()
instead.
•A histogram bins observations for one variable and shows a
barwiththecountineachbin.W ecandothisfortwovariables
atonce,too .The geom_bin2d() functiontakestwomappings,
xand y. It divides your plot into a grid and colors the bins
by the count of observations in them. Try using it on the
gapminder datatoplotlifeexpectancyversuspercapitaGDP.
Likeahistogram,youcanvarythenumberorwidthofthebins
forboth xory.Insteadofsaying bins = 30 orbinwidth = 1 ,
provide a number for both xandywith, for example, bins =
c(20, 50) .I fy o us p e c i f y binwidth instead, you will need to


------------------------


92 •Chapter 4
pick values that are on the same scale as the variable you are
mapping.
•Density estimates can also be drawn in two dimensions. The
geom_density_2d() function draws contour lines estimat-
ing the joint distribution of two variables. Try it with the
midwestdata,forexample,plottingpercentbelowthepoverty
line ( percbelowpoverty ) against percent college-educated
(percollege ).T ryitwithandwithouta geom_point() layer.


------------------------


5 Graph Tables, Add Labels,
Make Notes
Thischapterbuildsonthefoundationwehavelaiddown. Things
will get a little more sophisticated in three ways. First, we will
learn about how to transform data beforewe send it to ggplot to
beturnedintoafigure.Aswesawinchapter4,ggplot’ sgeomswilloften summarize data for us. While convenient, this can some-
t i m e sb ea w k w a r do re v e nal i t t l eo p a q u e .O ft e ni t ’ sb e t t e rt og e t
thingsintotherightshapebeforewesendanythingtoggplot.Thisi saj o bf o ra n o t h e rt i d y v e r s ec o m p o n e n t ,t h e
dplyrlibrary. We
w i l ll e a r nh o wt ou s es o m eo fi t s“ a c t i o nv e r b s ”t os e l e c t ,g r o u p ,
summarize,andtransformourdata.
Second, we will expand the number of geoms we know about
andlearnmoreabouthowtochoosebetweenthem.Themorewe
learn about ggplot’s geoms, the easier it will be to pick the right
o n eg i v e nt h ed a t aw eh a v ea n dt h ev i s u a l i z a t i o nw ew a n t .A sw el e a r na b o u tn e wg e o m s ,w ew i l la l s og e tm o r ea d v e n t u r o u sa n ddepart from some of ggplot’s default arguments and settings. We
willlearnhowtoreorderthevariablesdisplayedinourfigures,and
howtosubsetthedataweusebeforewedisplayit.
Third, this process of gradual customization will give us the
opportunitytolearnmoreaboutthescale,guide,andthemefunc-
tions that we have mostly taken for granted until now. These will
give us even more control over the content and appearance ofour graphs. Together, these functions can be used to make plotsmuch more legible to readers. They allow us to present our data
in a more structured and easily comprehensible way, and to pick
outtheelementsofitthatareofparticularinterest.Wewillbegint ou s et h e s em e t h o d st ol a y e rg e o m so nt o po fo n ea n o t h e r ,at e c h n i q u et h a tw i l la l l o wu st op r o d u c es o p h i s t i c a t e dg r a p h si na
systematic,comprehensibleway.
Our basic approach will not change. No matter how complex
our plots get, or how many individual steps we take to layer andtweaktheirfeatures,underneathwewillalwaysbedoingthesame
thing. We want a table of tidy data, a mapping of variables to


------------------------


94 •Chapter 5
aestheticelements,andaparticulartypeofgraph.Ifyoucankeep
sightof this, it will make it easier to confidently approach the job
ofgettinganyparticulargraphtolookjustright.
5.1 Use Pipes to Summarize Data
Inchapter4webeganmakingplotsofthedistributionsandrelative
frequenciesofvariables.Cross-classifyingonemeasurebyanother
is one of the basic descriptive tasks in data analysis. Tables 5.1
and 5.2 show two common ways of summarizing our GSS dataon the distribution of religious affiliation and region. Table 5.1shows the column marginals, where the numbers sum to a hun-
dred by column and show, e.g., the distribution of Protestants
acrossregions.Meanwhileintable5.2thenumberssumtoahun-dred across the rows, showing, for example, the distribution ofreligiousaffiliationswithinanyparticularregion.
Wesawinchapter4that
geom_bar() canplotbothcountsand
relativefrequenciesdependingonwhatweaskedofit.Inpractice,though,lettingthegeoms(andtheir
stat_functions)dothework
can sometimes get a little confusing. It is too easy to lose track
of whether one has calculated row margins, column margins, or
Table5.1
Columnmarginals.(Numbersincolumnssumto100.)
Protestant Catholic Jewish None Other NA
Northeast 12 25 53 18 18 6
Midwest 24 27 6 25 21 28South 47 25 22 27 31 61
West 17 24 20 29 30 6
Table5.2
Rowmarginals.(Numbersinrowssumto100.)
Protestant Catholic Jewish None Other NA
Northeast 32 33 6 23 6 0
Midwest 47 25 0 23 5 1South 62 15 1 16 5 1West 38 25 2 28 8 0


------------------------


Graph Tables, Add Labels, Make Notes •95
overallrelativefrequencies.Thecodetodothecalculationsonthe
flyendsupstuffedintothemappingfunctionandcanbecomehard
to read. A better strategy is to calculate the frequency table you
wantfirstandthenplotthattable.Thishasthebenefitofallowing
you do to some quick sanity checks on your tables, to make sure
youhaven’tmadeanyerrors.
Let’ ssaywewantaplotoftherowmarginalsforreligionwithin
region.Wewilltaketheopportunitytodoalittlebitofdatamung-
ing in order to get from our underlying table of GSS data to the
summary tabulation that we want to plot. To do this we will use
thetoolsprovidedby dplyr,acomponentofthetidyversethatpro-
vides functions for manipulating and reshaping tables of data on
thefly.Westartfromourindividual-level gss_smdataframewith
itsbigregion andreligion variables.Ourgoalisasummarytable
withpercentagesofreligiouspreferencesgroupedwithinregion.
As shown schematically in figure 5.1, we will start with our
individual-level table of about 2,500 GSS respondents. Then we
want to summarize them into a new table that shows a count of
eachreligiouspreference, groupedbyregion. Finallywewillturn
these within-region counts into percentages, where the denomi-
nator is the total number of respondents within each region. The
dplyrlibrary provides a few tools to make this easy and clear to
read.Wewilluseaspecialoperator, %>%,todoourwork.Thisisthe
pipeoperator.Itplaystheroleoftheyellowtriangleinfigure5.1,in
that it helps us perform the actions that get us from one table to
thenext.
1. Individual-level
GSS data on region
and religion2. Summary count of
religious preferences
by census region3. Percent religious
preferences by
census region
 id bigregion religion
 1014 Midwest Protestant
 1544 South Protestant
 665 Northeast None
 1618 South None
 2115 West Catholic
 417 South Protestant
 2045 West Protestant
 1863 Northeast Other
 1884 Midwest Christian
 1628 South Protestant bigregion religion N
 Northeast Protestant 123
 Northeast Catholic 149
 Northeast Jewish 15
 Northeast None 97
 Northeast Christian 14
 Northeast Other 31 bigregion religion N pct
 Northeast Protestant 123 28.3
 Northeast Catholic 149 34.3
 Northeast Jewish 15 3.4
 Northeast None 97 22.3
 Northeast Christian 14 3.2
 Northeast Other 31 7.1
Figure 5.1: How we want to transform the individual-level data.


------------------------


96 •Chapter 5
We have been building our plots in an additivefashion, start-
ingwitha ggplotobjectandlayeringonnewelements.Byanalogy,
think of the %>%operator as allowing us to start with a data
frame and perform a sequence orpipelineof operations to turn
it into another, usually smaller and more aggregated, table. Datagoes in one side of the pipe, actions are performed via functions,
a n dr e s u l t sc o m eo u tt h eo t h e r .Ap i p e l i n ei st y p i c a l l yas e r i e so f
operationsthatdooneormoreoffourthings:
•Groupthedataintothenestedstructurewewantforoursum- group_by()
mary,suchas“ReligionbyRegion”or“AuthorsbyPublications
byYear.”
•Filterorselectpiecesofthedatabyrow,column,orboth.This ﬁlter() rows; select() columns
getsusthepieceofthetablewewanttoworkon.
•Mutatethe data by creating new variables at the currentlevel mutate()
of grouping. This adds new columns to the table without
aggregatingit.
•Summarize or aggregate the grouped data. This creates new summarize()
variables at a higherlevel of grouping. For example we might
calculatemeanswith mean()orcountswith n().Thisresultsin
asmaller,summarytable,whichwemightfurthersummarize
ormutateifwewant.
We use the dplyrfunctions group_by() ,ﬁlter(),select() ,
mutate() ,a n d summarize() to carry out these tasks within our
pipeline. They are written in a way that allows them to be eas-ily piped. That is, they understand how to take inputs from the
left side of a pipe operator and pass results along through the
right side of one. The dplyr documentation has some usefulvignettes that introduce these grouping, filtering, selection, andtransformationfunctions.Thereisalsoamoredetaileddiscussion
of these tools, along with many more examples, in Wickham &
Grolemund(2016).
We will create a new table called
rel_by_region .H e r e ’ st h e
code:
rel_by_region ←gss_sm %>%
group_by (bigregion, religion) %>%
summarize (N= n()) %>%
mutate (freq = N/sum(N),
pct = round ((freq *100),0))


------------------------


Graph Tables, Add Labels, Make Notes •97
W ha tar etheselinesdo ing?First,wear ecr ea tinganobjectas
usual, with the familiar assignment operator, <-. Next comes the
pipeline. Read the objects and functions from left to right, with
t h ep i p eo p e r a t o r“ %>%” connecting them together meaning “and
then.... ”Objectsontheleftside“passthrough”thepipe,andwhat-ever is specified on the right of the pipe gets done to that object.
Theresultingobjectthenpassesthroughtotherightagain,andso
ondowntotheendofthepipeline.
Readingfromtheleft,thecodesaysthis:
•Createanewobject, rel_by_region .Itwillgettheresultofthe rel_by_region ←gss_sm %>%
followingsequenceofactions:Startwiththe gss_smdata,and
then
•Grouptherowsby bigregion and,withinthat,by religion . group_by(bigregion, religion) %>%
•Summarizethistabletocreateanew,muchsmallertable,with summarize(N = n()) %>%
three columns: bigregion ,religion , and a new summary
variable, N,thatisacountofthenumberofobservationswithin
eachreligiousgroupforeachregion.
•With this new table, use the Nvariable to calculate two new mutate(freq = N / sum(N), pct =
round((freq*100), 0))columns: the relative proportion ( freq)a n dpe r c e n t a g e( pct)
foreachreligiouscategory,stillgroupedbyregion.Roundthe
resultstothenearestpercentagepoint.
In this way of doing things, objects passed along the pipeline
and the functions acting on them carry some assumptions abouttheircontext.Foronething,youdon’thavetokeepspecifyingthename of the underlying data frame object you are working from.
Everything is implicitly carried forward from
gss_sm.W i t h i nt h e
pipeline, the transient or implicit objects created from your sum-mariesandothertransformationsarecarriedthrough,too.
Second,the
group_by() functionsetsuphowthegroupedor
nested data will be processed within the summarize() step. Any
function used to create a new variable within summarize() , such
asmean()orsd()orn(),w i l lbea p p l i e dt ot h e innermost group-
inglevelfirst. Groupinglevelsarenamedfromlefttorightwithin
group_by() from outermost to innermost. So the function call
summarize(N = n()) counts up the number of observations for
eachvalueof religion within bigregion andputstheminanew
variable named N. As dplyr’s functions see things, summarizing
a c t i o n sp e e lo ffo n eg r o u p i n gl e v e la tat i m e ,s ot h a tt h er e s u l t i n g
s u m m a r i e sa r ea tt h en e x tl e v e lu p .I nt h i sc a s e ,w es t a r tw i t h


------------------------


98 •Chapter 5
individual-level observations and group them by religion within
region. The summarize() operation aggregates the individual
observationstocountsofthenumberofpeopleaffiliatedwitheach
religion,foreachregion.
Third,the mutate() steptakesthe Nvariableandusesittocre-
atefreq, the relative frequency for each subgroup within region,
andfinally pct, therelativefrequencyturnedintoaroundedper-
centage.These mutate() operationsaddorremovecolumnsfrom
tablesbutdonotchangethegroupinglevel.
Insideboth mutate() andsummarize() , we are able to create
newvariablesinawaythatwehavenotseenbefore.Usually,whenwe see something like
name = value inside a function, the name
isageneral,namedargumentandthefunctionisexpectinginfor-
mation from us about the specific value it should take. Normally As in the case of aes(x = gdpPercap, y =
lifeExp) , for example.if we give a function a named argument it doesn’t know about
(aes(chuckles = year) ), it will ignore it, complain, or break.
With summarize() andmutate() ,h o w ev e r ,w eca ni n v e n tn a m ed
arguments. We are still assigning specific values to N,freq,a n d
pct,butwepickthenames,too.Theyarethenamesthatthenewly
createdvariablesinthesummarytablewillhave.The summarize()
andmutate() functionsdonotneedtoknowwhattheywillbein
advance.
Finally,whenweuse mutate() tocreatethe freqvariable,not
o n l yc a nw em a k eu pt h a tn a m ew i t h i nt h ef u n c t i o n , mutate() is
also clever enoughto let us usethatnamerightaway, onthenext
lineofthesamefunctioncall,whenwecreatethe pctvariable.This
meanswedonothavetorepeatedlywriteseparate mutate() calls
foreverynewvariablewewanttocreate.
Our pipeline takes the gss_smdata frame, which has 2,867
rows and 32 columns, and transforms it into rel_by_region ,a
summary table with 24 rows and 5 columns that looks like this,inpart:
rel_by_region
## # A tibble: 24 x 5
## # Groups: bigregion [4]
## bigregion religion N freq pct
## <fct> <fct> <int> <dbl> <dbl>## 1 Northeast Protestant 158 0.324 32.## 2 Northeast Catholic 162 0.332 33.


------------------------


Graph Tables, Add Labels, Make Notes •99
## 3 Northeast Jewish 27 0.0553 6.
## 4 Northeast None 112 0.230 23.
## 5 Northeast Other 28 0.0574 6.
## 6 Northeast <NA> 1 0.00205 0.## 7 Midwest Protestant 325 0.468 47.## 8 Midwest Catholic 172 0.247 25.
## 9 Midwest Jewish 3 0.00432 0.
## 10 Midwest None 157 0.226 23.## # ... with 14 more rows
The variables specified in group_by() are retained in the
new summary table; the variables created with summarize() and
mutate() are added, and all the other variables in the original
datasetaredropped.
We said before that, when trying to grasp what each additive
stepina ggplot() sequencedoes, itcanbehelpfultoworkback-
war d,r emo vingo nep iecea tatimetoseewha ttheplo tlookslike
when that step is not included. In the same way, when looking atpipelined code it can be helpful to start from the end of the lineandthenremoveone“
%>%”stepatatimetoseewhattheresulting
intermediateobjectlookslike.Forinstance,whatifweremovethe
mutate() s t e pf r o mt h ec o d ea b o v e ?W h a td o e s rel_by_region
looklikethen?Whatifweremovethe summarize() step?Howbig
is the table returned at each step? What level of grouping is it at?
Whatvariableshavebeenaddedorremoved?
Plotsthatdonotrequiresequentialaggregationandtransfor-
mation of the data before they are displayed are usually easy towritedirectlyinggplot,asthedetailsofthelayoutarehandledby
acombinationofmappingvariablesandlayeringgeoms.One-step
filtering or aggregation of the data (such as calculating a propor-tion, or a specific subset of observations) is also straightforward.But when the result we want to display is several steps removed
fromthedata,andinparticularwhenwewanttogrouporaggre-
gate a table and do some more calculations on the result beforedrawing anything, then it can make sense to use dplyr’s tools toproduce these summary tables first. This is true even if it would
be possible to do it within a
ggplot() call. In addition to mak-
ingourcodeeasiertoread,pipesletusmoreeasilyperformsanitychecks on our results, so that we are sure we have grouped andsummarized things in the right order. For instance, if we have


------------------------


100 •Chapter 5
done things properly with rel_by_region ,t h e pctvalues associ-
atedwith religion shouldsumto100withineachregion,perhaps
withabitofroundingerror.W ecanquicklycheckthisusingavery
shortpipeline:
rel_by_region %>% group_by (bigregion) %>% summarize (total = sum(pct))
## # A tibble: 4 x 2
## bigregion total## <fct> <dbl>
## 1 Northeast 100.
## 2 Midwest 101.## 3 South 100.## 4 West 101.
This looks good. As before, now that we are working directly
withpercentagevaluesinasummarytable,wecanuse geom_col()
insteadof geom_bar() .
p←ggplot (rel_by_region, aes(x= bigregion, y= pct, ﬁll = religion))
p+geom_col (position = "dodge2" )+
labs (x= "Region" ,y= "Percent" ,ﬁll = "Religion" )+
theme (legend.position = "top" )
We use a different position argument here, dodge2instead Try going back to the code for figure 4.13, in chapter
4, and using this “dodge2” argument instead of the“dodge” argument there. ofdodge. This puts the bars side by side. When dealing with pre-
computedvaluesin geom_col() ,thedefault position istomakea
proportionallystackedcolumnchart.Ifyouuse dodgetheywillbe
stackedwithincolumns,buttheresultwillreadincorrectly.Using
dodge2puts the subcategories (religious affiliations) side-by-side
withingroups(regions).
The values in the bar chart in figure 5.2 are the percentage
equivalents to the stacked counts in figure 4.10. Religious affilia-
tions sum to 100 percent within region. The trouble is, although
wenowknowhowtocleanlyproducefrequencytables,thisisstillabadfigure!Itistoocrowded,withtoomanybarssidebyside.Wecandobetter.
As a rule, dodged charts can be more cleanly expressed as
faceted plots. Faceting removes the need for a legend and thusmakesthechartsimplertoread.Wealsointroduceanewfunction.Ifwemapreligiontothex-axis,thelabelswilloverlapandbecome


------------------------


Graph Tables, Add Labels, Make Notes •101
60
40
20
0
Northeast Midwest South West
RegionPercentReligionProtestant
CatholicJewish
NoneOther
NA
Figure 5.2: Religious preferences by region.
illegible.It’spossibletomanuallyadjustthetick-marklabelssothat
theyareprintedatanangle,butthatisn’tsoeasytoread,either.It
makesmoresensetoputthereligionsonthey-axisandthepercent
scores on the x-axis. Because of the way geom_bar() works inter-
nally, simply swapping the xand ymapping will not work. (Try
it andsee what happens.) What we do insteadis to transform the
coordinatesystem thattheresultsareplottedin,sothatthexandy
axesareflipped.Wedothiswith coord_ﬂip() .
p←ggplot (rel_by_region, aes(x= religion, y= pct, ﬁll = religion))
p+geom_col (position = "dodge2" )+
labs (x= NULL ,y= "Percent" ,ﬁll = "Religion" )+
guides (ﬁll = FALSE )+
coord_ﬂip ()+
facet_grid (~bigregion)
F o rm o s tp l o t st h ec o o r d i n a t es y s t e mi sC a r t e s i a n ,s h o w -
ing plots on a plane defined by an x-axis and a y-axis. The
coord_cartesian() function manages this, but we don’t need to
call it. The coord_ﬂip() function switches the x and y axes after
the plot is made. It does not remap variables to aesthetics. In this
case, religion isstillmappedto xandpcttoy.Beca u seth er e l i -
gionnamesdonotneedanaxislabeltobeunderstood,weset x=
NULLinthe labs()call.(Seefig.5.3.)
We willseemore of whatdplyr’s grouping andfiltering oper-
ations can do later. It is a flexible and powerful framework. For
now, think of it as a way to quickly summarize tables of data


------------------------


102 •Chapter 5
NA
Other
None
Jewish
Catholic
Protestant
0 20 40 60 0 20 40 60 0 20 40 60 0 20 40 60
PercentNortheast Midwest South West
Figure 5.3: Religious preferences by region, faceted version.
withouthavingtowritecodeinthebodyofour ggplot() orgeom_
functions.
5.2 Continuous Variables by Group or Category
Let’smovetoanewdataset,the organdata table.Like gapminder ,
it has a country-year structure. It contains a little more than a
decade’sworthofinformationonthedonationoforgansfortrans-
plants in seventeen OECD countries. The organ procurement
rate is a measure of the number of human organs obtained from
cadaverorgandonorsforuseintransplantoperations.Alongwith
this donation data, the dataset has a variety of numerical demo-
graphic measures, and several categorical measures of health and
welfare policy and law. Unlike the gapminder data, some obser-
vations are missing. These are designated with a value of NA,R ’ s
standard code for missing data. The organdata table is included
inthe socvizlibrary. Loadit up andtakea quicklook. Insteadof
using head(),forvarietythistimewewillmakeashortpipelineto
selectthefirstsixcolumnsofthedatasetandthenpickfiverowsat
random using a function called sample_n() .T h i sf u n c t i o nt a k e s
two main arguments. First we provide the table of data we want
to sample from. Because we are using a pipeline, this is implicitly
passed down from thebeginningof thepipe. Then we supply the
numberofdrawswewanttomake. Using numbers this way in select() chooses the
numbered columns of the data frame. You can also
select variable names directly.


------------------------


Graph Tables, Add Labels, Make Notes •103
organdata %>% select (1:6)%>% sample_n (size = 10)
## # A tibble: 10 x 6
## country year donors pop pop_dens gdp
## <chr> <date> <dbl> <int> <dbl> <int>
## 1 Switzerland NA NA NA NA NA
## 2 Switzerland 1997-01-01 14.3 7089 17.2 27675
## 3 United Kingdom 1997-01-01 13.4 58283 24.0 22442
## 4 Sweden NA NA 8559 1.90 18660
## 5 Ireland 2002-01-01 21.0 3932 5.60 32571
## 6 Germany 1998-01-01 13.4 82047 23.0 23283
## 7 Italy NA NA 56719 18.8 17430
## 8 Italy 2001-01-01 17.1 57894 19.2 25359
## 9 France 1998-01-01 16.5 58398 10.6 24044
## 10 Spain 1995-01-01 27.0 39223 7.75 15720
Lets’s start by naively graphing some of the data. We can take
alookatascatterplotofdonorsvsyear(fig.5.4).
p←ggplot (data = organdata, mapping = aes(x= year, y= donors))
p+geom_point ()
## Warning: Removed 34 rows containing missing values
## (geom_point).
A message from ggplot warns you about the missing values.
We’ll suppress this warning from now on so that it doesn’t clut-
ter the output, but in general it’s wise to read and understand the
warningstha tRgives,evenwhencodea ppearstorunproperly .If
there are a large number of warnings, R will collect them all and
inviteyoutoviewthemwiththe warnings() function.30
20
10
1992 1994 1996 1998 2000 2002
YearDonors
Figure 5.4: Not very informative.
We could use geom_line() toploteachcountry’stimeseries,
like we did with the gapminder data. To do that, remember, we
needtotellggplotwhatthegroupingvariableis.Thistimewecan
also facet the figure by country (fig. 5.5), as we do not have too
manyofthem.
p←ggplot (data = organdata, mapping = aes(x= year, y= donors))
p+geom_line (aes(group = country)) +facet_wrap (~country)
Bydefaultthefacetsareorderedalphabeticallybycountry.We
willseehowtochangethismomentarily.


------------------------


104 •Chapter 5
30
20
10
30
20
10
30
20
10
30
20
10
1992 1994 1996 1998 2000 2002 1992 1994 1996 1998 2000 20021992 1994 1996 1998 2000 2002 1992 1994 1996 1998 2000 2002 1992 1994 1996 1998 2000 2002
YearAustralia Austria Belgium Canada Denmark
Finland France Germany Ireland Italy
Netherlands Norway
United Kingdom United StatesSpain Sweden SwitzerlandDonors
Figure 5.5: A faceted lineplot.
Let’s focus on the country-level variation but without pay-
i n ga t t e n t i o nt ot h et i m et r e n d .W ec a nu s e geom_boxplot()
to get a picture of variation by year across countries. Just as
geom_bar() by default calculates a count of observations by the
category you map to x,t h e stat_boxplot() function that works
with geom_boxplot() will calculate a number of statistics that
allowtheboxandwhiskerstobedrawn.Wetell geom_boxplot()
t h ev a r i a b l ew ew a n tt oc a t e g o r i z eb y( h e r e , country)a n dt h e
continuousvariablewewantsummarized(here, donors).
p←ggplot (data = organdata, mapping = aes(x= country, y= donors))
p+geom_boxplot ()
The boxplots in figure 5.6. look interesting, but two issues
could be addressed. First, as we saw in the previous chapter, it


------------------------


Graph Tables, Add Labels, Make Notes •105
AustraliaAustria Belgium CanadaDenmarkFinland FranceGermanyIrelandItaly
NetherlandsNorway
United KingdomUnited StatesSpainSweden
Switzerland30
20
10
CountryDonorsFigure 5.6: A first attempt at boxplots by country.
is awkward to have the country names on the x-axis because the
labelswilloverlap.Forfigure5.7use coord_ﬂip() againtoswitch
theaxes(butnotthemappings).
p←ggplot (data = organdata, mapping = aes(x= country, y= donors))
p+geom_boxplot ()+coord_ﬂip ()
That’s more legible but still not ideal. We generally want our
plots to present data in some meaningful order. An obvious way
is to have the countries listed from high to low average donation
rate. We accomplish this by reordering the countryvariable by
the mean of donors.The reorder() function will do this for us.
It takes two required arguments. The first is the categorical vari-
able or factorthat we want toreorder. In this case, that’s country.
The second is the variable we want to reorder it by. Here that is
the donation rate, donors. The third and optional argument to
reorder() isthefunctionyouwanttouseasasummarystatistic.
Ifyougive reorder() onlythefirsttworequiredarguments,then
bydefaultitwillreorderthecategoriesofyourfirstvariablebythe
mean value of the second. You can use any sensible function you
liketoreorderthecategoricalvariable(e.g., median,o rsd).There


------------------------


106 •Chapter 5
Figure 5.7: Moving the countries to the y-axis.United StatesCountryUnited Kingdom
Switzerland
Sweden
Spain
Norway
Netherlands
Germany
Canada
Belgium
Austria
Australia
10 20 30DenmarkFinlandFranceIrelandItaly
Donors
is one additional wrinkle. In R, the default meanfunctionwill fail
withanerroriftherearemissingvaluesinthevariableyouaretry-
ingtotaketheaverageof.YoumustsaythatitisOKtoremovethe
missing values when calculating the mean. This is done by sup-
plying the na.rm=TRUE argument to reorder() ,w h i c hi n t e r n a l l y
passesthatargumentonto mean().Wearereorderingthevariable
we are mapping to the xaesthetic, so we use reorder() at that
pointinourcode:
p←ggplot (data = organdata, mapping = aes(x= reorder (country,
donors, na.rm = TRUE ),y= donors))
p+geom_boxplot ()+labs (x= NULL )+coord_ﬂip ()
Becauseit’sobviouswhatthecountrynamesare,inthe labs()
callwesettheiraxislabeltoemptywith labs(x = NULL) .Ggplot
offers some variants on the basic boxplot, including the violin
plot. Try redoing figure 5.8 with geom_violin() .T h e r ea r ea l s o
numerousargumentsthatcontrolthefinerdetailsoftheboxesand
whiskers,includingtheirwidth.Boxplotscanalsotake colorand
ﬁllaestheticmappingslikeothergeoms,asinfigure5.9.
p←ggplot (data = organdata,
mapping = aes(x= reorder (country, donors, na.rm= TRUE ),
y= donors, ﬁll = world))
p+geom_boxplot ()+labs (x=NULL )+
coord_ﬂip ()+theme (legend.position = "top" )


------------------------


Graph Tables, Add Labels, Make Notes •107
United States
United KingdomSwitzerland
SwedenSpain
Norway
Netherlands
GermanyCanadaBelgiumAustria
Australia
10 20 30
DonorsDenmarkFinland
FranceIreland
ItalyFigure 5.8: Boxplots reordered by mean donation
rate.
World Corporatist Liberal SocDem NA
Spain
Austria
Belgium
United States
Ireland
Finland
France
Norway
Switzerland
Canada
Netherlands
United Kingdom
Sweden
Denmark
Germany
Italy
Australia
10 20
Donors30Figure 5.9: A boxplot with the fill aesthetic mapped.
Putting categorical variables on the y-axis to compare their
distributionsisausefultrick.Itsmakesiteasytoeffectivelypresent
summarydataonmorecategories.Theplotscanbequitecompact
and fit a relatively large number of cases in by row. The approach
alsohastheadvantageofputtingthevariablebeingcomparedonto
the x-axis, which sometimes makes it easier to compare across
categories. If the number of observations within each category
is relatively small, we can skip (or supplement) the boxplots and
show the individual observations, too. In figure 5.10 we map the
worldvariableto colorinsteadof ﬁllasthedefault geom_point()
plotshapehasacolorattributebutnotafill.


------------------------


108 •Chapter 5
Figure 5.10: Using points instead of a boxplot.SpainWorld Corporatist Liberal SocDem NA
Austria
Belgium
United States
Ireland
Finland
France
Norway
Switzerland
Canada
Netherlands
United Kingdom
Sweden
Denmark
Germany
Italy
Australia
Donors10 20 30
Figure 5.11: Jittering the points.SpainWorld Corporatist Liberal SocDem NA
Austria
Belgium
United States
Ireland
Finland
France
Norway
Switzerland
Canada
Netherlands
United Kingdom
Sweden
Denmark
Germany
Italy
Australia
10 20
Donors30
p←ggplot (data = organdata,
mapping = aes(x= reorder (country, donors, na.rm= TRUE ),
y= donors, color = world))
p+geom_point ()+labs (x=NULL )+
coord_ﬂip ()+theme (legend.position = "top" )
When we use geom_point() likethis, thereissomeoverplot-
ting of observations. In these cases, it can be useful to perturb
t h ed a t aab i ti no r d e rt og e tab e t t e rs e n s eo fh o wm a n yo b s e r -
vations there are at different values. We use geom_jitter() to
do this (fig. 5.11). This geom works much like geom_point() but
randomlynudgeseachobservationbyasmallamount.


------------------------


Graph Tables, Add Labels, Make Notes •109
SpainWorld Corporatist Liberal SocDem NA
Austria
Belgium
United States
Ireland
Finland
France
Norway
Switzerland
Canada
Netherlands
United Kingdom
Sweden
Denmark
Germany
Italy
Australia
10 20
Donors30Figure 5.12: A jittered plot.
p←ggplot (data = organdata,
mapping = aes(x= reorder (country, donors, na.rm= TRUE ),
y= donors, color = world))
p+geom_jitter ()+labs (x=NULL )+
coord_ﬂip ()+theme (legend.position = "top" )
The default amount of jitter is a little too much for our pur-
poses. We can control it using heightand widtharguments to
aposition_jitter() function within the geom. Because we’re
making a one-dimensional summary here, we just need width.
Figure 5.12 shows the data with a more appropriate amount of
jitter. Can you see why we did not use height? If not, try it
and see what happens.
p←ggplot (data = organdata,
mapping = aes(x= reorder (country, donors, na.rm= TRUE ),
y= donors, color = world))
p+geom_jitter (position = position_jitter (width= 0.15 ))+
labs (x=NULL )+coord_ﬂip ()+theme (legend.position = "top" )
When we want to summarize a categorical variable that just
has one point per category, we should use this approach as well.
T h er e s u l tw i l lb eaC l e v e l a n dd o t p l o t ,as i m p l ea n de x t r e m e l y
effective method of presenting data that is usually better than
eitherabarchartoratable.Forexample,wecanmakeaCleveland
dotplotoftheaveragedonationrate.
This also gives us another opportunity to do a little bit of
data munging with a dplyr pipeline. We will use one to aggregate


------------------------


110 •Chapter 5
o urla r g erco un try-y ea rda tafra metoasmallerta b leo fsumma ry
statisticsbycountry.Thereismorethanonewaytouseapipeline
forthistask.Wecouldchoosethevariableswewanttosummarize
and then repeatedly use the mean()andsd()functions to calcu-
latethemeansandstandarddeviationsofthevariableswewant.
by_country ←organdata %>% group_by (consent_law, country) %>%
summarize (donors_mean= mean (donors, na.rm = TRUE ),
donors_sd = sd(donors, na.rm = TRUE ),
gdp_mean = mean (gdp, na.rm = TRUE ),
health_mean = mean (health, na.rm = TRUE ),
roads_mean = mean (roads, na.rm = TRUE ),
cerebvas_mean = mean (cerebvas, na.rm = TRUE ))
The pipeline consists of two steps. First we group the data
byconsent_law and country,a n dt h e nw eu s e summarize() to
create six new variables, each one of which is the mean or stan-
darddeviationofeachcountry’sscoreonacorrespondingvariableintheoriginal
organdata dataframe. For an alternative view, change country toyear in
the grouping statement and see what happens.Asusual,the summarize() stepwillinheritinformationabout
the original data and the grouping and then do its calculations at
the innermost grouping level. In this case it takes all the obser-vations for each country and calculates the mean or standarddeviationasrequested.Hereiswhattheresultingobjectlookslike:
by_country
## # A tibble: 17 x 8
## # Groups: consent_law [?]
## consent_law country donors_mean donors_sd gdp_mean health_mean roads_mean cerebvas_mean
## <chr> <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>## 1 Informed Australia 10.6 1.14 22179. 1958. 105. 558.## 2 Informed Canada 14.0 0.751 23711. 2272. 109. 422.
## 3 Informed Denmark 13.1 1.47 23722. 2054. 102. 641.
## 4 Informed Germany 13.0 0.611 22163. 2349. 113. 707.## 5 Informed Ireland 19.8 2.48 20824. 1480. 118. 705.## 6 Informed Netherlands 13.7 1.55 23013. 1993. 76.1 585.
## 7 Informed United Kingdom 13.5 0.775 21359. 1561. 67.9 708.
## 8 Informed United States 20.0 1.33 29212. 3988. 155. 444.## 9 Presumed Austria 23.5 2.42 23876. 1875. 150. 769.## 10 Presumed Belgium 21.9 1.94 22500. 1958. 155. 594.


------------------------


Graph Tables, Add Labels, Make Notes •111
## 11 Presumed Finland 18.4 1.53 21019. 1615. 93.6 771.
## 12 Presumed France 16.8 1.60 22603. 2160. 156. 433.
## 13 Presumed Italy 11.1 4.28 21554. 1757. 122. 712.
## 14 Presumed Norway 15.4 1.11 26448. 2217. 70.0 662.## 15 Presumed Spain 28.1 4.96 16933. 1289. 161. 655.## 16 Presumed Sweden 13.1 1.75 22415. 1951. 72.3 595.
## 17 Presumed Switzerland 14.2 1.71 27233. 2776. 96.4 424.
As before, the variables specified in group_by() are retained
in the new data frame, the variables created with summarize()
are added, and all the other variables in the original data aredropped.Thecountriesarealsosummarizedalphabeticallywithin
consent_law , which was the outermost grouping variable in the
group_by() statementatthestartofthepipeline.
Usingourpipelinethiswayisreasonable,butthecodeisworth
lookingatagain.Foronething,wehavetorepeatedlytypeoutthe
namesofthe mean()andsd()functionsandgiveeachofthemthe
nameofthevariablewewantsummarized andthena.rm = TRUE
argument each time to make sure the functions don’t complain
aboutmissingvalues.Wealsorepeatedlynameournewsummary
variables in the same way, by adding _meanor_sdto the end of
theoriginalvariablename.Ifwewantedtocalculatethemeanandstandard deviation for all the numerical variables in
organdata ,
our code would get even longer. Plus, in this version we lose the
other,time-invariantcategoricalvariablesthatwehaven’tgrouped
by, such as world. When we see repeated actions like this in our
code,wecanaskwhetherthere’sabetterwaytoproceed.
There is. What we would like to do is apply the mean()and
sd()functions to every numerical variable in organdata ,b u t
onlythe numerical ones. Then we want to name the results in a
consistentwayandreturnasummarytableincludingallthecate-gorical variables like
world. We can create a better version of the
by_country objectusingalittlebitofR’sfunctionalprogramming
abilities.Hereisthecode:
by_country ←organdata %>% group_by (consent_law, country) %>%
summarize_if (is.numeric, funs (mean, sd), na.rm = TRUE )%>%
ungroup ()
T h ep i p e l i n es t a r t so ffj u s ta sb e f o r e ,t a k i n g organdata and
then grouping it by consent_law and country.I nt h en e x t
step, though, instead of manually taking the mean and standard


------------------------


112 •Chapter 5
deviation of a subset of variables, we use the summarize_if()
function instead. As its name suggests, it examines each column
in our data and applies a test to it. It only summarizes if the test
is passed, that is, if it returns a value of TRUE.H e r et h et e s ti st h e We do not have to use parentheses when naming
the functions inside summarize_if() .function is.numeric() ,whichlookstoseeifavectorisanumeric
value.Ifitis,then summarize_if() willapplythesummaryfunc-
tion or functions we want to organdata .B e c a u s ew ea r et a k i n g
both the mean and the standard deviation, we use funs()to list
thefunctionswewant.Andwefinishwiththe na.rm = TRUE argu-
ment,whichwillbepassedontoeachuseofboth mean()andsd().
I nt h el a s ts t e pi nt h ep i pe l i n ew e ungroup() the data, so that the Sometimes graphing functions can get confused by
grouped tibbles where we don’t explicitly use thegroups in the plot. resultisaplaintibble.
Hereiswhatthepipelinereturns:
by_country
## # A tibble: 17 x 28
## consent_law country donors_mean pop_mean pop_dens_mean gdp_mean gdp_lag_mean health_mean## <chr> <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>
## 1 Informed Australia 10.6 18318. 0.237 22179. 21779. 1958.
## 2 Informed Canada 14.0 29608. 0.297 23711. 23353. 2272.## 3 Informed Denmark 13.1 5257. 12.2 23722. 23275. 2054.## 4 Informed Germany 13.0 80255. 22.5 22163. 21938. 2349.
## 5 Informed Ireland 19.8 3674. 5.23 20824. 20154. 1480.
## 6 Informed Netherlands 13.7 15548. 37.4 23013. 22554. 1993.## 7 Informed United Kingdom 13.5 58187. 24.0 21359. 20962. 1561.## 8 Informed United States 20.0 269330. 2.80 29212. 28699. 3988.
## 9 Presumed Austria 23.5 7927. 9.45 23876. 23415. 1875.
## 10 Presumed Belgium 21.9 10153. 30.7 22500. 22096. 1958.## 11 Presumed Finland 18.4 5112. 1.51 21019. 20763. 1615.## 12 Presumed France 16.8 58056. 10.5 22603. 22211. 2160.
## 13 Presumed Italy 11.1 57360. 19.0 21554. 21195. 1757.
## 14 Presumed Norway 15.4 4386. 1.35 26448. 25769. 2217.## 15 Presumed Spain 28.1 39666. 7.84 16933. 16584. 1289.## 16 Presumed Sweden 13.1 8789. 1.95 22415. 22094. 1951.
## 17 Presumed Switzerland 14.2 7037. 17.0 27233. 26931. 2776.
## # ... with 20 more variables: health_lag_mean <dbl>, pubhealth_mean <dbl>, roads_mean <dbl>,## # cerebvas_mean <dbl>, assault_mean <dbl>, external_mean <dbl>, txp_pop_mean <dbl>,## # donors_sd <dbl>, pop_sd <dbl>, pop_dens_sd <dbl>, gdp_sd <dbl>, gdp_lag_sd <dbl>,
## # health_sd <dbl>, health_lag_sd <dbl>, pubhealth_sd <dbl>, roads_sd <dbl>, cerebvas_sd <dbl>,
## # assault_sd <dbl>, external_sd <dbl>, txp_pop_sd <dbl>


------------------------


Graph Tables, Add Labels, Make Notes •113
SpainConsent law Informed Presumed
Austria
Belgium
United States
Ireland
Finland
France
Norway
Switzerland
Canada
Netherlands
United Kingdom
Sweden
Denmark
Germany
Italy
Australia
10 15 20
Donor procurement rate25Figure 5.13: A Cleveland dotplot, with colored
points.
All the numeric variables have been summarized. They are
named using the original variable, with the function’s name
appended: donors_mean anddonors_sd ,andsoon.Thisisacom-
pact way to rapidly transform our data in various ways. There is
af a m i l yo f summarize_ functions for various tasks, and a com-
plementary group of mutate_functions for when we want to add
columnstothedataratherthanaggregateit.
Withourdatasummarizedbycountry,forfigure5.13wecan
draw a dotplot with geom_point() . Let’s also color the results by
theconsentlawforeachcountry.
p←ggplot (data = by_country,
mapping = aes(x= donors_mean, y= reorder (country, donors_mean),
color = consent_law))
p+geom_point (size= 3)+
labs (x= "Donor Procurement Rate" ,
y= "",color = "Consent Law" )+
theme (legend.position= "top" )


------------------------


114 •Chapter 5
Alternatively,ifweliked,wecoulduseafacetinsteadofcolor-
ingthepoints.Using facet_wrap() ,wecansplitthe consent_law
variable into two panels and then rank the countries by donation
rate within each panel. Because we have a categorical variable on
our y-axis, there are two wrinkles worth noting. First, if we leave
facet_wrap() toitsdefaults,thepanelswillbeplottedsidebyside.
Thiswillmakeitdifficulttocomparethetwogroupsonthesame
scale. Instead the plot will be read left to right, which is not use-
ful. To avoid this, we will have the panels appear one on top of
theotherbysayingwewanttohaveonlyonecolumn. Thisisthe
ncol=1argument.Second,andagainbecausewehaveacategorical
variableonthey-axis,thedefaultfacetplotwillhavethenamesof
everycountryappearonthey-axisof bothpanels.(Werethey-axis
acontinuousvariable,thiswouldbewhatwewouldwant.)Inthat
case, only half the rows in each panel of our plot will have points
inthem.
Informed
United States
Ireland
Canada
Netherlands
United Kingdom
Denmark
Germany
Australia
SpainPresumed
Austria
Belgium
Finland
France
Norway
Switzerland
Sweden
Italy
10 15 20
Donor procurement rate25
Figure 5.14: A faceted dotplot with free scales on
the y-axis.T oa v o i dt h i sw ea l l o wt h ey - a x e ss c a l et ob ef r e e .T h i si s
thescales = "free_y" argument.Again,forfacetedplotswhere
bothvariablesarecontinuous,wegenerallydonotwantthescales
tobefree,becauseitallowsthex-ory-axisforeachpaneltovary
with the range of the data inside that panel only, instead of the
r a n g ea c r o s st h ew h o l ed a t a s e t .O r d i n a r i l y ,t h ep o i n to fs m a l l -
multiple facets is to be able to compare across the panels. This
means free scales are usually not a good idea, because each panel
gets its own x- or y-axis range, which breaks comparability. But
where one axis is categorical, as in figure 5.14, we can free the
categorical axis and leave the continuous one fixed. The result is
that each panel shares the same x-axis, and it is easy to compare
them.
p←ggplot (data = by_country,
mapping = aes(x= donors_mean,
y= reorder (country, donors_mean)))
p+geom_point (size= 3)+
facet_wrap (~consent_law, scales = "free_y" ,ncol = 1)+
labs (x="Donor Procurement Rate" ,
y="")
Cleveland dotplots are generally preferred to bar or column
charts. When making them, put the categories on the y-axis and


------------------------


Graph Tables, Add Labels, Make Notes •115
order them in the way that is most relevant to the numerical
summary you are providing. This sort of plot is also an excellent
waytosummarizemodelresultsoranydatawithwitherrorranges.
We use geom_point() todrawourdotplots.Thereisageomcalled
geom_dotplot() , but it is designed to produce a different sort of
figure.I tisakindofhistogram,withindividualobserva tionsrep-
r e s e n t e db yd o t st h a ta r et h e ns t a c k e do nt o po fo n ea n o t h e rt o
showhowmanyofthemthereare.
TheCleveland-styledotplotcanbeextendedtocaseswherewe
want to include some information about variance or error in the
plot. Using geom_pointrange() , we can tell ggplot to show us a
pointestimateandarangearoundit.Herewewillusethestandarddeviationofthedonationratethatwecalculatedabove.Butthisis
also the natural way to present, for example, estimates of model
coefficients with confidence intervals. With
geom_pointrange()
wemapour xandyvariablesasusual,butthefunctionneedsalit-
tlemoreinformationthan geom_point .Itneedstoknowtherange
ofthelinetodrawoneithersideofthepoint,definedbytheargu-
ments ymaxandymin.T h i si sgi v e nb yth eyv al u e( donors_mean )
plus or minus its standard deviation ( donors_sd ). If a function
argument expects a number, it is OK to give it a mathematical
expression that resolves to the number you want. R will calculate
theresultforyou.
p←ggplot (data = by_country, mapping = aes(x= reorder (country,
donors_mean), y= donors_mean))
p+geom_pointrange (mapping = aes(ymin = donors_mean -donors_sd,
ymax = donors_mean +donors_sd)) +
labs (x="",y="Donor Procurement Rate" )+coord_ﬂip ()
Because geom_pointrange() expects y,ymin,a n d ymaxas
arguments,infigure5.15wemap donors_mean toyandthe ccode
variableto x,thenfliptheaxesattheendwith coord_ﬂip() .
5.3 Plot Text Directly
Itcansometimesbeusefultoplotthelabelsalongwiththepoints
inascatterplot, orjustplotinformativelabelsdirectly. Wecando
thiswith geom_text() .


------------------------


116 •Chapter 5
Figure 5.15: A dot-and-whisker plot, with the range
defined by the standard deviation of the measured
variable. United States
United KingdomSwitzerland
SwedenSpain
Norway
Netherlands
GermanyCanadaBelgiumAustria
AustraliaDenmarkFinland
FranceIreland
Italy
10 15 20 25 30
Donor procurement rate
p←ggplot (data = by_country, mapping = aes(x= roads_mean,
y= donors_mean))
p+geom_point ()+geom_text (mapping = aes(label = country))
The text in figure 5.16 is plotted right on top of the points
becausebotharepositionedusingthesamexandymapping.One
wayofdealingwiththis,oftenthemosteffectiveifwearenottoo
worried about excessive precision in the graph, is to remove the
pointsbydropping geom_point() fromtheplot.Asecondoption
istoadjustthepositionofthetext.Wecanleft-orright-justifythe
labelsusingthe hjustargumentto geom_text() .Setting hjust =
0willleft-justifythelabel,and hjust=1willright-justifyit.
p←ggplot (data = by_country,
mapping = aes(x= roads_mean, y= donors_mean))
p+geom_point ()+geom_text (mapping = aes(label = country), hjust = 0)
Youmightbetemptedtotrydifferentvaluesto hjusttofine-
tune the labels, in figure 5.17, but this is not a robust approach.
I tw i l lo ft e nf a i lb e c a u s et h es p a c ei sa d d e di np r o p o r t i o nt ot h e
length of the label. The result is that longer labels move further


------------------------


25
20
10
80 100 120 140 160
Roads_meanDonors_mean
15Norway
United KingdomSwedenNetherlandsSwitzerlandFinland
Canada
Denmark
AustraliaItalyFranceIreland United StatesBelgiumAustriaSpain
GermanyFigure 5.16: Plotting labels and text.
25
20
10
80 100 120 140 160
Roads_meanDonors_mean
15Norway
United KingdomSwedenNetherlandsSwitzerlandFinland
Canada
Denmark
AustraliaItalyFranceIreland United StatesBelgiumAustriaSpain
GermanyFigure 5.17: Plot points and text labels, with a
horizontal position adjustment.


------------------------


118 •Chapter 5
awayfromtheirpointsthanyouwant.Therearewaysaroundthis,
buttheyintroduceotherproblems.
Insteadofwrestlinganyfurtherwith geom_text() ,wewilluse
ggrepel. This useful package adds new geoms to ggplot. Just as
ggplotextends the plotting capabilities of R, there are many
small packages that extend the capabilities of ggplot,o ft e nb y
providing some new type of geom.T h e ggrepel package pro-
vides geom_text_repel() and geom_label_repel() ,t w og e o m s
t h a tc a np i c ko u tl a b e l sm u c hm o r efl e x i b l yt h a nt h ed e f a u l t
geom_text() .F i r s t ,m a k es u r et h el i b r a r yi si n s t a l l e d ,t h e nl o a d
itintheusualway:
library (ggrepel)
We will use geom_text_repel() instead of geom_text() .T o
demonstrate some of what geom_text_repel() can do, we will
switch datasets and work with some historical U.S. presidentialelectiondataprovidedinthe
socvizlibrary.
elections_historic %>% select (2:7)
## # A tibble: 49 x 6
## year winner win_party ec_pct popular_pct popular_margin## <int> <chr> <chr> <dbl> <dbl> <dbl>
## 1 1824 John Quincy Adams D.-R. 0.322 0.309 -0.104
## 2 1828 Andrew Jackson Dem. 0.682 0.559 0.122## 3 1832 Andrew Jackson Dem. 0.766 0.547 0.178## 4 1836 Martin Van Buren Dem. 0.578 0.508 0.142
## 5 1840 William Henry Harrison Whig 0.796 0.529 0.0605
## 6 1844 James Polk Dem. 0.618 0.495 0.0145## 7 1848 Zachary Taylor Whig 0.562 0.473 0.0479## 8 1852 Franklin Pierce Dem. 0.858 0.508 0.0695
## 9 1856 James Buchanan Dem. 0.588 0.453 0.122
## 10 1860 Abraham Lincoln Rep. 0.594 0.396 0.101## # ... with 39 more rows
p_title ←"Presidential Elections: Popular & Electoral College Margins"
p_subtitle ←"1824-2016"
p_caption ←"Data for 2016 are provisional."


------------------------


Graph Tables, Add Labels, Make Notes •119
x_label ←"Winner 's share of Popular Vote"
y_label ←"Winner 's share of Electoral College Votes"
p←ggplot (elections_historic, aes(x= popular_pct, y= ec_pct,
label = winner_label))
p+geom_hline (yintercept = 0.5,size = 1.4,color = "gray80" )+
geom_vline (xintercept = 0.5,size = 1.4,color = "gray80" )+
geom_point ()+
geom_text_repel ()+
scale_x_continuous (labels = scales ::percent) +
scale_y_continuous (labels = scales ::percent) +
labs (x= x_label, y= y_label, title = p_title, subtitle = p_subtitle,
caption = p_caption)
Figure 5.18 takes each U.S. presidential election since 1824
(the first year that the size of the popular vote was recorded) andplots the winner’s share of the popular vote against the winner’s
share of the electoral college vo te. The shares are stored in the
data as proportions (from 0 to 1) rather than percentages, so weneedtoadjustthelabelsofthescalesusing
scale_x_continuous()
and scale_y_continuous() . Seeing as we are interested in par-
ticularpresidencies, wealsowanttolabelthepoints. Butbecause Normally it is not a good idea to label every point on
a plot in the way we do here. A better approachmight be to select a few points of particular interest. manyofthedatapointsareplottedquiteclosetogether,weneedto
m ak es ur eth ela be l sdon o to v e r la p ,o ro bscur eo th e rpo in ts.Th e
geom_text_repel() functionhandlestheproblemverywell.This
plot has relatively long titles. We could put them directly in the
code, but to keep things tidier we assign the text to some namedobjectsinstead.Thenweusethoseintheplotformula.
In this plot, what is of interest about any particular point is
the quadrant of the x-y plane each point is in, and how far away
it is from the 50 percent threshold on both the x-axis (with thepopularvoteshare)andthey-axis(withtheElectoralCollegevote
share).Tounderscorethispointwedrawtworeferencelinesatthe
50 percent line in each direction. They are drawn at the begin-ning of the plotting process so that the points and labels can belayered on top of them. We use two new geoms,
geom_hline()
andgeom_vline() ,t om a k et h el i n e s .T h e yt a k e yintercept and
xintercept arguments,respectively,andthelinescanalsobesized
and colored as you please. There is also a geom_abline() geom


------------------------


120 •Chapter 5
100%
Wilson 1912
Wilson 1916Clinton 1992Clinton 1996
Lincoln 1860Cleveland 1892
Buchanan 1856
Trump 2016
Nixon 1968
Taylor1848
Bush 2000Bush 2004Carter 1976Buren 1836Bush 1988
Coolidge 1924Grant 1868Grant 1872Eisenhower 1952Eisenhower 1956
Hoover 1928
Jackson 1832Johnson 1964Nixon 1972
Harding 1920
Truman 1948 Harrison 1888Harrison 1840
Garﬁeld 1880Polk 1844
McKinley 1896McKinley 1900Jackson 1828Roosevelt 1940
Roosevelt 1944Roosevelt 1936
Roosevelt 1932Reagan 1984
Reagan 1980
Pierce 1852Lincoln 1864
Roosevelt 1904
Obama 2012Obama 2008
Taft 1908
Cleveland 1884Kennedy 1960
Hayes 1876
Adams 18241824–2016
80%
60%
40%
30% 40% 50% 60%
Data for 2016 are provisional.Winner’s share of popular voteWinner’s share of electoral college votesPresidential elections: Popular & electoral college margins
Figure 5.18: Text labels with ggrepel.
that draws straight lines based on a supplied slope and intercept.
This is useful for plotting, for example, 45 degree reference lines
inscatterplots.
The ggrepel package has several other useful geoms and
options to aid with effectively plotting labels along with points.
The performance of its labeling algorithm is consistently very
good. For most purposes it will be a better first choice than
geom_text() .


------------------------


Graph Tables, Add Labels, Make Notes •121
5.4 Label Outliers
Sometimeswewanttopickoutsomepointsofinterestinthedata
without labeling every single item. We can still use geom_text()
orgeom_text_repel() .W ejustneedtoselectthepoin tswewan t
to label. We do this by telling geom_text_repel() to use a dif-
ferentdatasetfromtheone geom_point() isusing.The subset()
functiondoesthework.
p←ggplot (data = by_country,
mapping = aes(x= gdp_mean, y= health_mean))
p+geom_point ()+
geom_text_repel (data = subset (by_country, gdp_mean >25000 ),
mapping = aes(label = country))
p←ggplot (data = by_country,
mapping = aes(x= gdp_mean, y= health_mean))
p+geom_point ()+
geom_text_repel (data = subset (by_country,
gdp_mean >25000 |health_mean <1500 |
country %in% "Belgium" ),
mapping = aes(label = country))
Inthetoppartoffigure5.19,wespecifyanew dataargument
tothetextgeomanduse subset() tocreateasmalldatasetonthe
fly.The subset() functiontakesthe by_country objectandselects
onlythecaseswhere gdp_mean isover25,000, withtheresultthat
onlythosepointsarelabeledintheplot.Thecriteriaweusecanbewha tev erw elik e,aslo n gasw eca nwri tealogicalexp r essio ntha tdefinesit.Forexample,inthelowerpartofthefigurewepickout
caseswhere
gdp_mean isgreaterthan25,000, orhealth_mean isless
than1,500, orthecountryisBelgium.Inalltheseplots,becausewe
are using geom_text_repel() ,w en ol o n g e rh a v et ow o r rya bo u t
our earlier problem where the country labels were clipped at the
edgeoftheplot.
Alternatively, we can pick out specific points by creating a
dummyvariableinthedatasetjustforthispurpose.Forfigure5.20we add a column to
organdata called ind. An observation gets
coded as TRUEifccodeis “Ita” or “Spa,” andif the yearis greater


------------------------


Figure 5.19: Top: Labeling text according to a single
criterion. Bottom : Labeling according to several
criteria.4000
3000
Switzerland
NorwayUnited States
2000
20000 25000
gdp_meanHealth_mean
4000
3000
Switzerland
Ireland SpainBelgiumNorwayUnited States
2000
20000 25000
gdp_meanHealth_mean


------------------------


Graph Tables, Add Labels, Make Notes •123
Spa Spa
SpaSpa
Spa
Spa
Spa
Spa
Spa
Spa
Spa
Spa
Ita
Ita
Ita
Ita
Ita Ita
Ita
Ita
ItaIta
Ita
Ita30
20
10
50 100 150 200
RoadsDonorsFigure 5.20: Labeling using a dummy variable.
than 1998. We use this new indv a r i a b l ei nt w ow a y si nt h ep l o t -
tingcode.First,wemapittothe coloraestheticintheusualway.
Second, we use it to subset the data that the text geom will label.
Thenwesuppressthelegendthatwouldotherwiseappearforthe
labelandcoloraestheticsbyusingthe guides() function.
organdata $ind←organdata $ccode %in% c("Ita" ,"Spa" )&
organdata $year >1998
p←ggplot (data = organdata,
mapping = aes(x= roads,
y= donors, color = ind))
p+geom_point ()+
geom_text_repel (data = subset (organdata, ind),
mapping = aes(label = ccode)) +
guides (label = FALSE ,color = FALSE )


------------------------


124 •Chapter 5
5.5 Write and Draw in the Plot Area
Sometimeswewanttoannotatethefiguredirectly.Maybeweneed
to point out something important that is not mapped to a vari-able.Weuse
annotate() fo rthispurpose.I tisn ’ tqui teageo m,as
it doesn’t accept any variable mappings from our data. Instead, it
canusegeoms, temporarily taking advantage of their features in
order to place something on the plot. The most obvious use-caseisputtingarbitrarytextontheplot(fig.5.21).
Wewilltell
annotate() to use a text geom. It hands the plot-
ting duties to geom_text() , which means that we can use all of
thatgeom’sargumentsinthe annotate() call.Thisincludesthe x,
y,a nd labelarguments,asonewouldexpect,butalsothingslike
size,color,a n dt h e hjustandvjustsettings that allow text to
b ej u s t i fi e d .T h i si sp a r t i c u l a r l yu s e f u lw h e no u rl a b e lh a ss e v e r a l
lines in it. We include extra lines by using the special “newline”code,
\n, which we use instead of a space to force a line-break as
needed.
p←ggplot (data = organdata, mapping = aes(x= roads, y= donors))
p+geom_point ()+annotate (geom = "text" ,x= 91,y= 33,
label = "A surprisingly high \n recovery rate." ,
hjust = 0)
Theannotate() functioncanworkwithothergeoms,too.Use
ittodrawrectangles,linesegments,andarrows.Justremembertopassalongtherightargumentstothegeomyouuse.Wecanaddarectangletothisplot,(fig5.22),forinstance,withasecondcallto
thefunction.
p←ggplot (data = organdata,
mapping = aes(x= roads, y= donors))
p+geom_point ()+
annotate (geom = "rect" ,xmin = 125,xmax = 155,
ymin = 30,ymax = 35,ﬁll = "red" ,alpha = 0.2)+
annotate (geom = "text" ,x= 157,y= 33,
label = "A surprisingly high \n recovery rate." ,hjust = 0)


------------------------


Graph Tables, Add Labels, Make Notes •125
A surprisingly high
recovery rateDonors
50 100 150 200
Roads102030Figure 5.21: Arbitrary text with annotate() .
5.6 Understanding Scales, Guides, and Themes
Thischapterhasgraduallyextendedourggplotvocabularyintwo
ways.First,weintroducedsomenew geom_functionsthatallowed
ustodrawnewkindsofplots. Second, wemadeuseofnewfunc-
tions controlling some aspects of the appearance of our graph.
We used scale_x_log10() ,scale_x_continuous() ,a n do t h e r
scale_functionstoadjustaxislabels.Weusedthe guides() func-
tion to remove the legends for a colormapping and a label
m a p p i n g .A n dw ea l s ou s e dt h e theme()function to move the
positionofalegendfromthesidetothetopofafigure.
Learningaboutnewgeomsextendedwhatwehaveseenalready.
Each geom makes a different type of plot. Different plots require
d i ff e r e n tm a p p i n g si no r d e rt ow o r k ,a n ds oe a c h geom_function
takesmappingstailoredtothekindofgraphitdraws.Y oucan ’tuse
geom_point() tomakeascatterplotwithoutsupplyingan xanda y
mapping,forexample.Using geom_histogram() onlyrequiresyou
to supply an xmapping. Similarly, geom_pointrange() requires
yminand ymaxmappings in order to know where to draw the
line ranges it makes. A geom_function may take optional argu-
ments, too. When using geom_boxplot() you can specify what
the outliers look like using arguments like outlier.shape and
outlier.color .


------------------------


126 •Chapter 5
Figure 5.22: Using two different geoms with
annotate() .A surprisingly high
recovery rate
30Donors20
10
50 100 150 200
Roads
The second kind of extension introduced some new func-
tions,andwiththemsomenewconcepts.Whatarethedifferences
between the scale_functions, the guides() function, and the
theme()function?Whendoyouknowtouseoneratherthanthe
other?Whyaretheresomany scale_functionslistedintheonline
help,anyway?Howcanyoutellwhichoneyouneed?
H ereisaroughstartingpoint:
•Every aesthetic mapping has a scale. If you want to adjust
howthatscaleismarkedorgraduated,thenyouusea scale_
function.
•Manyscalescomewithalegendorkeytohelpthereaderinter-
pret the graph. These are called guides.Y o uc a nm a k ea d j u s t -
ments to them with the guides() function. Perhapsthemost
common use case is to make the legend disappear, as some-
timesitissuperfluous.Anotheristoadjustthearrangementof
thekeyinlegendsandcolorbars.
•Graphs have other features not strictly connected to the logi-
calstructureofthedatabeingdisplayed.Theseincludethings
liketheirbackgroundcolor,thetypefaceusedforlabels,orthe
placementofthelegendonthegraph.Toadjustthese,usethe
theme()function.
Consistentwithggplot’soverallapproach,adjustingsomevisi-
blefeatureofthegraphmeansfirstthinkingabouttherelationship
thefeaturehaswiththeunderlyingdata.Roughlyspeaking,ifthe
changeyouwanttomakewillaffectthesubstantiveinterpretation


------------------------


Graph Tables, Add Labels, Make Notes •127
ofanyparticulargeom,thenmostlikelyyouwilleitherbemapping
an aesthetic to a variable using that geom’s aes()function or be
specifying a change via some scale_function. If the change you
wanttomakedoesnotaffecttheinterpretationofagivengeom_,t h e nm o s tl i k e l yy o uw i l le i t h e rb es e t t i n gav a r i a b l ei n s i d et h e
geom_function, or making a cosmetic change via the theme()
function.
Scales and guides are closely connected, which can make
thingsconfusing.Theguideprovidesinformationaboutthescale,
suchasinalegendorcolorbar.Thusitispossibletomakeadjust-
m e n t st og u i d e sf r o mi n s i d et h ev a r i o u s scale_functions. More
oftenitiseasiertousethe guides() functiondirectly.
p←ggplot (data = organdata,
mapping = aes(x= roads,
y= donors,
color = world))
p+geom_point ()
Figure 5.23 shows a plot with three aesthetic mappings. The
variable roadsismappedto x;donorsismappedto y;and worldis
mappedto color.The xandyscalesareboth continuous ,running
smoothly from just under the lowest value of the variable to justoverthehighestvalue.Variouslabeledtick-marksorientthereader
tothevaluesoneachaxis.The
colormappingalsohasascale.The
worldm ea s ur ei sa nun o r der edca t eg o ricalva ria b le ,soi tsscalei s
discrete.Ittakesoneoffourvalues,eachrepresentedbyadifferent
color.
Along with color,m a p p i n g sl i k e ﬁll,shape,a n d sizewill
have scales that we might want to customize or adjust. We couldhave mapped
worldtoshapeinstead of color.I nt h a tc a s eo u r
four-category variable would have a scale consisting of four dif-
ferent shapes. Scales for these mappings may have labels, axis
tick-marks at particular positions, or specific colors or shapes. Ifwewanttoadjustthem,weuseoneofthe
scale_functions.
Many different kinds of variable can be mapped. More often
than not, xand yare continuous measures. But they might also
easily be discrete, as when we mapped country names to the y-
axis in our boxplots and dotplots. An xorymapping can also be
d e fi n e da sat r a n s f o r m a t i o no n t oal o gs c a l e ,o ra sas p e c i a ls o r t
of number value like a date. Similarly, a coloror a ﬁllmapping


------------------------


128 •Chapter 5
Figure 5.23: Every mapped variable has a scale.
50102030
100 150 200World
Corporatist
Liberal
SocDem
NA
RoadsDonors
ca nbed i scr e t ea n d unordered ,a sw i t ho u r worldvariable, or dis-
crete and ordered,a sw i t hl e t t e rg r a d e si na ne x a m .A coloror
ﬁllmapping can also be a continuous quantity, represented as a
gradient running smoothly from a low to a high value. Finally,
bothcontinuousgradientsandordereddiscretevaluesmighthave
some defined neutral midpoint with extremes diverging in both
directions.
Figure 5.24: A schema for naming the scale
functions.B e c a u s ew eh a v es e v e r a lp o t e n t i a lm a p p i n g s ,a n de a c hm a p -
pingmightbetooneofseveraldifferentscales,weendupwithalot
of individual scale_functions. Eachdeals withonecombination
of mapping and scale. They are named according to a consistent
logic, shown in figure 5.24. First comes the scale_name, then
themapping it applies to, and finally the kindof value the scale
will display. Thus the scale_x_continuous() function controls
xscales for continuous variables; scale_y_discrete() adjusts y
scales for discrete variables; and scale_x_log10() transforms an
xmapping to a log scale. Most of the time, ggplot will guess cor-
rectly what sort of scale is needed for your mapping. Then it will
work out some default features of the scale (such as its labels and
wherethetick-marksgo).Inmanycasesyouwillnotneedtomake
anyscaleadjustments.If xismappedtoacontinuousvariable,then
adding + scale_x_continuous() to your plot statement with no
furtherargumentswillhavenoeffect.Itisalreadythereimplicitly.
Adding + scale_x_log10() , on the other hand, will transform


------------------------


Graph Tables, Add Labels, Make Notes •129
Twenty fiveDonors
Fifteen
Five
100World
Corporatist
Liberal
SocDem
NA
RoadsFigure 5.25: Making some scale adjustments.
your scale, as now you have replaced the default treatment of a
continuousxvariable.
If you want to adjust the labels or tick-marks on a scale, you
willneedtoknowwhichmappingitisforandwhatsortofscaleit
is. Then you supply the arguments to the appropriate scale func-
tion. For example, we can change the x-axis of the previous plot
to a log scale and then also change the position and labels of the
tick-marksonthey-axis(fig.5.25).
p←ggplot (data = organdata, mapping = aes(x= roads, y= donors,
color = world))
p+geom_point ()+scale_x_log10 ()+scale_y_continuous (breaks = c(5,
15,25),labels = c("Five" ,"Fifteen" ,"Twenty Five" ))
The same applies to mappings like colorand ﬁll(see
fig. 5.26). Here the available scale_functions include ones that
deal with continuous, diverging, and discrete variables, as well as
othersthatwewillencounterlaterwhenwediscusstheuseofcolor
andcolorpalettesinmoredetail.Whenworkingwithascalethat
produces a legend, we can also use its scale_function to specify
thelabelsinthekey.Tochangethe titleofthelegend,however,we
usethe labs()function,whichletsuslabelallthemappings.
p←ggplot (data = organdata, mapping = aes(x= roads, y= donors,
color = world))


------------------------


130 •Chapter 5
Figure 5.26: Relabeling via a scale function. 30
20
10
50 100 200Welfare state
Corporatist
Liberal
Social Democratic
Unclassified
Road deaths150Donor procurement
p+geom_point ()+scale_color_discrete (labels = c("Corporatist" ,
"Liberal" ,"Social Democratic" ,"Unclassiﬁed" ))+labs (x= "Road Deaths" ,
y= "Donor Procurement" ,color = "Welfare State" )
If we want to move the legend somewhere else on the
plot, we are making a purely cosmetic decision and that is the
j o bo ft h e theme()f u n c t i o n .A sw eh a v ea l r e a d ys e e n ,a d d i n g
+ theme(legend.position = "top") will move the legend as
instructed. Finally, to make the legend disappear altogether
(fig.5.27),wetellggplotthatwedonotwantaguideforthatscale.
Thisisgenerallynotgoodpractice,buttherecanbereasonstodo
it.Wealreadysawanexampleinfigure4.9.
p←ggplot (data = organdata, mapping = aes(x= roads, y= donors,
color = world))
p+geom_point ()+labs (x= "Road Deaths" ,y= "Donor Procurement" )+
guides (color = FALSE )
We will look more closely at scale_andtheme()functionsin
c h a p t e r8 ,w h e nw ed i s c u s sh o wt op o l i s hp l o t st h a tw ea r er e a d y
t od i s p l a yo rp u b l i s h .U n t i lt h e n ,w ew i l lu s e scale_functions
f a i r l yr e g u l a r l yt om a k es m a l la d j u s t m e n t st ot h el a b e l sa n da x e s
ofourgraphs.Andwewilloccasionallyusethe theme()function


------------------------


Graph Tables, Add Labels, Make Notes •131
30
20
10
50 100 200
Road deaths150Donor procurementFigure 5.27: Removing the guide to a scale.
to make some cosmetic adjustments. So you do not need to
worry about additional details of how they work until later on.
B u ta tt h i sp o i n ti t isworth knowing what scale_functions are
f o r ,a n dt h el o g i cb e h i n dt h e i r naming scheme. Understanding
thescale_<mapping>_<kind>() rule makes it easier to see what
is going on when one of these functions is called to make an
adjustmenttoaplot.
5.7 Where to Go Next
Wecoveredseveralnewfunctionsanddataaggregationtechniques
inthischapter.Youshouldpracticeworkingwiththem.
•The subset() function is very useful when used in conjunc-
tion with a series of layered geoms. Go back to your code for
the presidential elections plot (fig. 5.18) and redo it so that it
shows all the data points but only labels elections since 1992.
Youmightneedtolookagainatthe elections_historic data
toseewhatvariablesareavailabletoyou.Youcanalsoexperi-
mentwithsubsettingbypoliticalparty,orchangingthecolors
ofthepointstoreflectthewinningparty.
•Usegeom_point() andreorder() tomakeaClevelanddotplot
of all presidential elections, ordered by share of the popular
vote.


------------------------


132 •Chapter 5
•Tryusing annotate() toaddarectanglethatlightlycolorsthe
entireupperleftquadrantoffigure5.18.
•T h em a i na c t i o nv e r b si nt h e dplyrlibrary are group_by() ,
ﬁlter(),select() ,summarize() ,a n d mutate() .P r a c t i c e
with them by revisiting the gapminder data to see if you can
reproduceapairofgraphsfromchapter1,shownhereagainin
figure5.28.Youwillneedtofiltersomerows,groupthedataby
continent,andcalculatethemeanlifeexpectancybycontinent
beforebeginningtheplottingprocess.Oceania
Europe
Americas
Asia
Africa
Oceania
Europe
Americas
Asia
Africa0
60 70
Life expectancy in years, 2007Life expectancy in years, 2007
8020 40 60 80
Figure 5.28: Two figures from chapter 1.•Get comfortable with grouping, mutating, and summarizing
datainpipelines.Thiswillbecomearoutinetaskasyouwork
withyourdata.Therearemanywaysthattablescanbeaggre-
gated and transformed. Remember, group_by() groups your
datafromlefttoright,withtherightmostorinnermostgroup
being the level calculations will be done at; mutate() adds
a column at the current level of grouping; and summarize()
aggregates to the next level up. Try creating some grouped
objects from the GSS data, calculating frequencies as you
l e a r n e di nt h i sc h a p t e r ,a n dt h e nc h e c kt os e ei ft h et o t a l sa r e
what you expect. For example, start by grouping degreeby
race,likethis:
gss_sm %>% group_by (race, degree) %>% summarize (N= n()) %>%
mutate (pct = round (N/sum(N) *100,0))
## # A tibble: 18 x 4
## # Groups: race [3]
## race degree N pct
## <fct> <fct> <int> <dbl>
## 1 White Lt High School 197 9.
## 2 White High School 1057 50.
## 3 White Junior College 166 8.
## 4 White Bachelor 426 20.
## 5 White Graduate 250 12.
## 6 White <NA> 4 0.
## 7 Black Lt High School 60 12.
## 8 Black High School 292 60.
## 9 Black Junior College 33 7.
## 10 Black Bachelor 71 14.
## 11 Black Graduate 31 6.


------------------------


Graph Tables, Add Labels, Make Notes •133
## 12 Black <NA> 3 1.
## 13 Other Lt High School 71 26.
## 14 Other High School 112 40.
## 15 Other Junior College 17 6.## 16 Other Bachelor 39 14.## 17 Other Graduate 37 13.
## 18 Other <NA> 1 0.
•This code is similar to what you saw earlier but more com-
pact. (We calculate the pctvalues directly.) Check that the
results are as you expect by grouping by raceand summing
thepercentages. Trydoingthesameexercisegroupingby sex
orregion.
•Trysummarycalculationswithfunctionsotherthan sum.Can
you calculate the mean and median number of children by
degree?(Hint:the childsvariablein gss_smhaschildrenasa
numericvalue.)
•dplyrhas a large number of helper functions that let you
summarizedatainmanydifferentways. Thevignetteon win-
dow functions included with the dplyrdocumentation is a
good place to begin learning about these. You should also
look at chapter 3 of Wickham & Grolemund (2016) for moreinformationontransformingdatawith
dplyr.
•Experiment with the gapminder data to practice some of the
newgeomswehavelearned.Tryexaminingpopulationorlife
expectancyovertimeusingaseriesofboxplots.(Hint:youmayneedtousethe
groupaestheticinthe aes()call.)Canyoufacet
thisboxplotbycontinent?Isanythingdifferentifyoucreatea
tibblefrom gapminder thatexplicitlygroups thedataby year
andcontinent first,andthencreateyourplotswiththat?
•Readthehelppagefor geom_boxplot() andtakealookatthe
notchand varwidth options. Try them out to see how they
changethelookoftheplot.
•Asanalternativeto geom_boxplot() ,try geom_violin() fora
similarplotbutwithamirroreddensitydistributioninsteadofaboxandwhiskers.
•geom_pointrange() is one of a family of related geoms that
produce different kinds of error bars and ranges, depend-ing on your specific needs. They include
geom_linerange() ,
geom_crossbar() ,and geom_errorbar() .Trythemoutusing
gapminder ororgandata toseehowtheydiffer.


------------------------


6 Work with Models
Data visualizationis aboutmore thangenerating figures thatdis-
play the raw numbers from a table of data. Right from the begin-ning, it involves summarizing or transforming parts of the data
andthenplottingtheresults.Statisticalmodelsareacentralpartof
thatprocess.Inthischapter,wewillbeginbylookingbrieflyathowggplotcanusevariousmodelingtechniquesdirectlywithingeoms.
T h e nw ew i l ls e eh o wt ou s et h e
broomand marginslibraries to
tidilyextractandplotestimatesfrommodelsthatwefitourselves.
p←ggplot (data = gapminder,
mapping = aes(x= log(gdpPercap), y= lifeExp))
p+geom_point (alpha= 0.1)+
geom_smooth (color = "tomato" ,ﬁll= "tomato" ,method = MASS ::rlm) +
geom_smooth (color = "steelblue" ,ﬁll= "steelblue" ,method = "lm" )
p+geom_point (alpha= 0.1)+
geom_smooth (color = "tomato" ,method = "lm" ,size = 1.2,
formula = y~splines ::bs(x, 3),se = FALSE )
p+geom_point (alpha= 0.1)+
geom_quantile (color = "tomato" ,size = 1.2,method = "rqss" ,
lambda = 1,quantiles = c(0.20 ,0.5,0.85 ))
Histograms,densityplots,boxplots,andothergeomscompute
eithersinglenumbersornewvariablesbeforeplottingthem.Aswe
sawinsection4.4,thesecalculationsaredoneby stat_functions,
each of which works hand in hand with its default geom_func-
tion,andviceversa.Moreover,fromthesmoothinglineswedrew
i na l m o s tt h ev e r yfi r s tp l o t sw em a d e ,w eh a v es e e nt h a t stat_
functionscandoafairamountofcalculationandevenmodelesti-
mation directly. The geom_smooth() functioncantake arangeof
methodargumentstofitLOESS,OLS,androbustregressionlines,
amongothers.


------------------------


Work with Models
•
135
Boththe
geom_smooth()
and
geom_quantile()
functionscan
alsobeinstructedtousedifferentformulastoproducetheirfits.In
thetoppaneloffigure6.1,weaccessthe
MASS
library’s
rlm
function
tofitarobustregressionline.Inthesecondpanel,the
bs
function
is invoked directly from the
splines
library in the same way, to
fi tap o l y n o m i n a lc u rv et ot h ed a t a .T h i si st h es a m ea p p r o a c ht o
directly accessing functions without loading a whole library that
wehavealreadyusedseveraltimeswhenusingfunctionsfromthe
scales
package. The
geom_quantile()
f u n c t i o n ,m e a n w h i l e ,i s
like a specialized version of
geom_smooth()
that can fit quantile
regression lines using a variety of methods. The
quantiles
argu-
menttakesavectorspecifyingthequantilesatwhichtofitthelines.
80
60
40
68 1 0
Log (gdp Percap)
Life Exp
80
60
40
68 1 0
Log (gdp Percap)
Life Exp
80
60
40
68 1 0
Log (gdp Percap)
Life Exp
Figure 6.1:
From top to bottom: an OLS vs robust
regression comparison; a polynomial fit; and
quantile regression.
6.1 Show Several Fits at Once, with a Legend
As we just saw in the first panel of figure 6.1, where we plotted
both an OLS and a robust regression line, we can look at several
fits at once on the same plot by layering on new smoothers with
geom_smooth()
.A slongaswesetthe
color
and
ﬁll
aestheticsto
different values for each fit, we can easily distinguish them visu-
ally. However, ggplot will not draw a legend that guides us about
whichfitiswhich.Thisisbeca usethesmoothersar enotlogically
connectedtooneanother.Theyexistasseparatelayers.Whatifwe
are comparing several different fits and want a legend describing
them?
As it turns out,
geom_smooth()
can do this via the slightly
unusual route of mapping the
color
and
ﬁll
aesthetics to
a string describing the model we are fitting and then using
scale_color_manual()
and
scale_ﬁll_manual()
to create the
legend (fig.6.2). First we use
brewer.pal()
from the RColor-
Brewer library to extract three qualitatively different colors from
alargerpalette.Thecolorsarerepresentedashexvalues.Asbefore
use the
::
convention to use the function without loading the
wholepackage:
model_colors
←
RColorBrewer
::
brewer.pal
(
3
,
"Set1"
)
model_colors
## [1] "#E41A1C" "#377EB8" "#4DAF4A"


------------------------


136
•
Chapter 6
Then we create a plot with three different smoothers, map-
pingthecolorandfill
withinthe
aes()
function
asthenameofthe
smoother:
80
60
40
68 1 0
Log (gdp Percap)
Life Exp
Models Cubic spline LOESS OLS
Figure 6.2:
Fitting smoothers with a legend.
p0
←
ggplot
(
data =
gapminder,
mapping =
aes
(
x=
log
(gdpPercap),
y=
lifeExp))
p1
←
p0
+
geom_point
(
alpha =
0.2
)
+
geom_smooth
(
method =
"lm"
,
aes
(
color =
"OLS"
,
ﬁll =
"OLS"
))
+
geom_smooth
(
method =
"lm"
,
formula =
y
~
splines
::
bs
(x,
df =
3
),
aes
(
color =
"Cubic Spline"
,
ﬁll =
"Cubic Spline"
))
+
geom_smooth
(
method =
"loess"
,
aes
(
color =
"LOESS"
,
ﬁll =
"LOESS"
))
p1
+
scale_color_manual
(
name =
"Models"
,
values =
model_colors)
+
scale_ﬁll_manual
(
name =
"Models"
,
values =
model_colors)
+
theme
(
legend.position =
"top"
)
In a way we have cheated a little here to make the plot work.
Untilnow,wehavealwaysmappedaestheticstothenamesofvari-
ables, not to strings like “OLS” or “Cubic Splines.” In chapter 3,
whenwediscussedmappingversussettingaesthetics,wesawwhat
happenedwhenwetriedtochangethecolorofthepointsinascat-
terplotbysettingthemto“purple”insidethe
aes()
function.The
result was that the points turned red instead, as ggplot in effect
created a new variable and labeled it with the word “purple.” We
learned there that the
aes()
function was for mapping variables
toaesthetics.
Herewetakeadvantageofthatbehavior,creatinganewsingle-
valuevariableforthenameofeachofourmodels.Ggplotwillprop-
erlyconstructtherelevantguideifwecall
scale_color_manual()
and
scale_ﬁll_manual()
. The result is a single plot containing
Remember that we have to call two scale functions
because we have two mappings, color and fill.
n o tj u s to u rt h r e es m o o t h e r sb u ta l s oa na p p r o p r i a t el e g e n dt o
guidethereader.
These model-fitting features make ggplot very useful for
exploratory work and make it straightforward to generate and
compare model-based trends and other summaries as part of
t h ep r o c e s so fd e s c r i p t i v ed a t av i s u a l i z a t i o n .T h ev a r i o u s
stat_
f u n c t i o n sa r eafl e x i b l ew a yt oa d ds u m m a rye s t i m a t e so fv a r i o u s


------------------------


Work with Models •137
kinds to plots. But we will also want more than this, including
presentingresultsfrommodelswefitourselves.
6.2 Look Inside Model Objects
Covering the details of fitting statistical models in R is beyondthe scope of this book. For a comprehensive, modern introduc-tion to that topic you should work your way through Gelman &
Hill(2018).Harrell(2016)isalsogoodonthemanypracticalcon-
nectionsbetweenmodelingandgraphingdata.Similarly,Gelman(2004) provides a detailed discussion of the use of graphics as atoolinmodelcheckingandvalidation.Herewewilldiscusssome
ways to take the models that you fit and extract information that
is easy to work with in ggplot. Our goal, as always, is to get fromhowevertheobjectisstoredtoatidytableofnumbersthatwecanplot. Most classes of statistical model in R will contain the infor-
mationweneedorwillhaveaspecialsetoffunctions,ormethods,
designedtoextractit.
We can start by learning a little more about how the output
of models is stored in R. Remember, we are always working with
objects,andobjectshaveaninternalstructureconsistingofnamed
pieces. Sometimes these are single numbers, sometimes vectors,andsometimeslistsofthingslikevectors,matrices,orformulas.
We have been working extensively with tibbles and data
frames. These store tables of data with named columns, perhaps
consistingofdifferentclassesofv ariable,suchasintegers,charac-
t e r s ,d a t e s ,o rf a c t o r s .M o d e lo b j e c t sa r eal i t t l em o r ec o m p l i c a t e dagain.
gapminder
## # A tibble: 1,704 x 6
## country continent year lifeExp pop gdpPercap
## <fct> <fct> <int> <dbl> <int> <dbl>## 1 Afghanistan Asia 1952 28.8 8425333 779.## 2 Afghanistan Asia 1957 30.3 9240934 821.
## 3 Afghanistan Asia 1962 32.0 10267083 853.
## 4 Afghanistan Asia 1967 34.0 11537966 836.## 5 Afghanistan Asia 1972 36.1 13079460 740.## 6 Afghanistan Asia 1977 38.4 14880372 786.


------------------------


138 •Chapter 6
## 7 Afghanistan Asia 1982 39.9 12881816 978.
## 8 Afghanistan Asia 1987 40.8 13867957 852.
## 9 Afghanistan Asia 1992 41.7 16317921 649.
## 10 Afghanistan Asia 1997 41.8 22227415 635.## # ... with 1,694 more rows
Remember,wecanusethe str()functiontolearnmoreabout
theinternalstructureofanyobject.Forexample,wecangetsomeinformation on what class (or classes) of object
gapminder is,
how large it is, and what components it has. The output from
str(gapminder) issomewhatdense:
## Classes 'tbl_df ','tbl'and'data.frame ': 1704 obs. of 6 variables:
## $ country : Factor w/ 142 levels "Afghanistan",..: 1 1 ...
## $ continent: Factor w/ 5 levels "Africa","Americas",..: 3 3## ...## $ year : int 1952 1957 ...
## $ lifeExp : num 28.8 ...
## $ pop : int 8425333 9240934 ...## $ gdpPercap: num 779 ...
There is a lot of information here about the object as a whole
and each variable in it. In the same way, statistical models in Rhaveaninternalstructure. Butbecausemodels aremorecomplexentities than data tables, their structure is correspondingly more
complicated. There are more pieces of information, and more
kinds of information, that we might want to use. All this infor-mationisgenerallystoredinorcomputablefrompartsofamodelobject.
Wecancreatealinearmodel,astandardOLSregression,using
the
gapminder data.Thisdatasethasacountry-yearstructurethat
makes an OLS specification like this the wrong one to use. Butnever mind that for now. We use the
lm()function to run the
modelandstoreitinanobjectcalled out:
out←lm(formula = lifeExp ~gdpPercap +pop +continent, data = gapminder)
Thefirstargumentistheformulaforthemodel. lifeExpisthe
dependentvariableandthetildeoperatorisusedtodesignatetheleft and right sides of a model (including in cases, as we saw with
facet_wrap() wherethemodeljusthasarightside).


------------------------


Work with Models •139
Let’slookattheresultsbyaskingRtoprintasummaryofthe
model.
summary (out)
##
## Call:
## lm(formula = lifeExp ~ gdpPercap + pop + continent, data = gapminder)
#### Residuals:## Min 1Q Median 3Q Max
## -49.16 -4.49 0.30 5.11 25.17
#### Coefﬁcients:## Estimate Std. Error t value Pr(>|t|)
## (Intercept) 4.78e+01 3.40e-01 140.82 <2e-16 ***
## gdpPercap 4.50e-04 2.35e-05 19.16 <2e-16 ***## pop 6.57e-09 1.98e-09 3.33 9e-04 ***## continentAmericas 1.35e+01 6.00e-01 22.46 <2e-16 ***
## continentAsia 8.19e+00 5.71e-01 14.34 <2e-16 ***
## continentEurope 1.75e+01 6.25e-01 27.97 <2e-16 ***## continentOceania 1.81e+01 1.78e+00 10.15 <2e-16 ***## ---
## Signif. codes: 0 '***'0.001 '**'0.01 '*'0.05 '.'0.1'' 1
#### Residual standard error: 8.37 on 1697 degrees of freedom## Multiple R-squared: 0.582, Adjusted R-squared: 0.581
## F-statistic: 394 on 6 and 1697 DF, p-value: <2e-16
When we use the summary() function on out,w ea r en o t
getting a simple feed of what’s in the model object. Instead,like any function,
summary() takes its input, performs some
actions, and produces output. In this case, what is printed
to the console is partly information that is stored inside the
modelobject,andpartlyinformationthatthe summary() function
has calculated and formatted for display on the screen. Behindthe scenes,
summary() gets help from other functions. Objects
of different classes have default methodsassociated with them,
so that when the generic summary() function is applied to a
linear model object, the function knows to pass the work on toa more specialized function that does a bunch of calculations


------------------------


140 •Chapter 6
and formatting appropriate to a linear model object. We use the
same generic summary() function on data frames, as in summary
(gapminder) , but in that case a different default method is
applied.
Figure 6.3: Schematic view of a linear model object.Theoutputfrom summary() givesaprécisofthemodel,butwe
can’t really do any further analysis with it directly. For example,
what if we want to plot something from the model? The infor-
mation necessary to make plots is inside the object, but it is not
obvioushowtouseit.
If we take a look at the structure of the model object with
str(out) we will find that there is a lotof information in there.
LikemostcomplexobjectsinR, outisorganizedasalistofcom-
ponentsorelements.Severaloftheseelementsarethemselveslists.
Figure 6.3 gives you a schematic view of the contents of a lin-
e a rm o d e lo b j e c t .I nt h i sl i s to fi t e m s ,s o m ee l e m e n t sa r es i n g l e
values,somearedataframes,andsomeareadditionallistsofsim-
pleritems.Again,rememberourearlierdiscussionwherewesaid
objects could be thought of as being organized like a filing sys-
tem: cabinets contain drawers, and a drawer may contain pages
ofinformation, wholedocuments, orgroupsoffolderswithmore
documentsinside.Asanalternativeanalogy,andstickingwiththe
image of a list, you can think of a master to-do list for a project,
where the top-level headings lead to additional lists of tasks of
differentkinds.
The outobjectcreatedby lmcontainsseveraldifferentnamed
elements.Some,liketheresidualdegreesoffreedominthemodel,
are just a single number. Others are much larger entities, such as Tryout$df.residual at the console.
thedataframeusedtofitthemodel,whichisretainedbydefault. Tryout$model , but be prepared for a lot of stuff to
be printed at the console.O t h e re l e m e n t sh a v eb e e nc o m p u t e db yRa n dt h e ns t o r e d ,s u c h
as the coefficients of the model and other quantities. You can try
out$coefﬁcients ,out$residuals ,a n d out$ﬁtted.values ,f o r
instance. Others are lists themselves (like qr). So you can see
thatthe summary() functionisselectingandprintingonlyasmall
amountofcoreinformation,incomparisontowhatisstoredinthe
modelobject.
Just like the tables of data we saw in section 6.1, the output
ofsummary() ispresentedinawaythatis compactandefficientin
terms of getting information across but also untidywhen consid-
ered from the point of view of further manipulation. There is a
table of coefficients, but the variable names are in the rows. The
column names are awkward, and some information (e.g., at the


------------------------


Work with Models •141
bottom of the output) has been calculated and printed out but is
notstoredinthemodelobject.
6.3 Get Model-Based Graphics Right
Figures based on statistical models face all the ordinary chal-lengesofeffectivedatavisualizationandthensome.Thisisbecausemodel results usually carry a considerable extra burden of inter-
pretation and necessary background knowledge. The more com-
plexthemodel,thetrickieritbecomestoconveythisinformationeffectively,andtheeasieritbecomestoleadone’saudienceorone-selfintoerror.Withinthesocialsciences,ourabilitytoclearlyand
honestlypresentmodel-basedgraphicshasgreatlyimprovedover
th epa s tt e no rfi ft ee ny ea r s .Ov e rth esa m epe ri od ,i th a sbec o m eclearer that some kinds of models are quite tricky to under-stand,evenonesthathadpreviouslybeenseenasstraightforward
elements of the modeling toolkit (Ai & Norton 2003; Brambor,
Clark,&Golder2006).
Plottingmodelestimatesiscloselyconnectedtoproperlyesti-
matingmodelsinthefirstplace.Thismeansthereisnosubstitute
for learning the statistics. You should not use graphical methods
asasubstituteforunderstandingthemodelusedtoproducethem.While this book cannot teach you that material, we can make afew general points about what good model-based graphics look
like, and work through some examples of how ggplot and some
additionallibrariescanmakeiteasiertogetgoodresults.
Present your findings in substantive terms
Useful model-based plots show results in ways that are substan-
tively meaningful and directly interpretable with respect to the
questions the analysis is trying to answer. This means showingresults in a context where other variables in the analysis are held
at sensible values, such as their means or medians. With contin-
uous variables, it can often be useful to generate predicted valuesthat cover some substantively meaningful move across the distri-bution, such as from the 25th to the 75th percentile, rather than
a single-unit increment in the variable of interest. For unordered
categorical variables, predicted values might be presented with


------------------------


142 •Chapter 6
respecttothemodalcategoryinthedata,orforaparticularcate-
goryoftheoreticalinterest. Presentingsubstantivelyinterpretable
findings often also means using (and sometimes converting to)
a scale that readers can easily understand. If your model reportsresults in log-odds, for example, converting the estimates to pre-dictedprobabilitieswillmakeiteasiertointerpret.Allthisadvice
isquitegeneral.Eachofthesepointsappliesequallywelltothepre-
sentationofsummaryresultsinatableratherthanagraph.Thereis nothing distinctively graphical about putting the focus on the
substantivemeaningofyourfindings.
Show your degree of confidence
Muchthesameappliestopresentingthedegreeofuncertaintyor
confidence you have in your results. Model estimates come with
various measures of precision, confidence, credence, or signifi-
cance. Presenting and interpreting these measures is notoriouslyprone to misinterpretation, or overinterpretation, as researchersand audiences both demand more from things like confidence
intervals and p-values than these statistics can deliver. At a min-
imum, having decided on an appropriate measure of model fit orthe right assessment of confidence, you should show their rangewhenyoupresentyourresults.Afamilyofggplotgeomsallowsyou
to show a range or interval defined by position on the x-axis and
then a
yminand ymaxrange on the y-axis. These geoms include
geom_pointrange() andgeom_errorbar() ,w h i c hw ew i l ls e ei n
actionshortly.Arelatedgeom, geom_ribbon() usesthesameargu-
mentstodrawfilledareasandisusefulforplottingrangesofy-axis
valuesalongsomecontinuouslyvaryingx-axis.
Show your data when you can
Plotting the results from a multivariate model generally meansone of two things. First, we can show what is in effect a tableof coefficients with associated measures of confidence, perhapsorganizing the coefficients into meaningful groups, or by the size
of the predicted association, or both. Second, we can show the
predictedvaluesofsomevariables(ratherthanjustamodel’ scoef-ficients)across some range of interest. The latterapproach lets us


------------------------


Work with Models •143
show the original data points if we wish. The way ggplot builds
graphicslayerbylayerallowsustoeasilycombinemodelestimates
(e.g., a regression line and an associated range) and the underly-
ing data. In effect these are manually constructed versions of theautomatically generated plots that we have been producing with
geom_smooth() sincethebeginningofthisbook.
6.4 Generate Predictions to Graph
Having fitted a model, then, we might want to get a picture oft h ee s t i m a t e si tp r o d u c e so v e rt h er a n g eo fs o m ep a r t i c u l a rv a r i -able, holding other covariates constant at some sensible values.
The
predict() functionisagenericwayofusingmodelobjectsto
producethiskindofprediction.InR,“generic”functionstaketheirinputsandpassthemalongtomorespecificfunctionsbehindthescenes,onesthataresuitedtoworkingwiththeparticularkindof
modelobjectwehave.Thedetailsofgettingpredictedvaluesfrom
an OLS model, for instance, will be somewhat different from get-tingpredictionsoutofalogisticregression.Butineachcasewecanuse the same
predict() function, taking care to check the docu-
mentationtoseewhatformtheresultsarereturnedinforthekind
ofmodelweareworkingwith. Manyofthemostcommonlyusedfunctions in R are generic in this way. The
summary() function,
for example, works on objects of many different classes, from
vectorstodataframesandstatisticalmodels,producingappropri-
ate output in each case by way of a class-specific function in thebackground.
For
predict() tocalculatethenewvaluesforus,itneedssome
new data to fit the model to. We will generate a new data frame
whosecolumnshavethesamenamesasthevariablesinthemodel’ soriginal data, but where the rows have new values. A very usefulfunctioncalled
expand.grid() willhelpusdothis.W ewillgiveit
alistofvariables,specifyingtherangeofvalueswewanteachvari-
abletotake.Then expand.grid() willgeneratethenwillmultiply
out the full range of values for all combinations of the values we The function calculates the Cartesian product of the
variables given to it.giveit,thuscreatinganewdataframewiththenewdataweneed.
In the following bit of code, we use min()and max()to
get the minimum and maximum values for per capita GDP andthen create a vector with one hundred evenly spaced elementsbetween the minimum and the maximum. We hold population


------------------------


144 •Chapter 6
constantatitsmedian,andweletcontinenttakeallitsfiveavailable
values.
min_gdp ←min(gapminder $gdpPercap)
max_gdp ←max(gapminder $gdpPercap)
med_pop ←median (gapminder $pop)
pred_df ←expand.grid (gdpPercap = (seq(from = min_gdp, to = max_gdp,
length.out = 100)), pop = med_pop, continent = c("Africa" ,
"Americas" ,"Asia" ,"Europe" ,"Oceania" ))
dim(pred_df)
## [1] 500 3
head (pred_df)
## gdpPercap pop continent
## 1 241.166 7023596 Africa
## 2 1385.428 7023596 Africa## 3 2529.690 7023596 Africa## 4 3673.953 7023596 Africa
## 5 4818.215 7023596 Africa
## 6 5962.477 7023596 Africa
Now we can use predict() .I fw eg i v et h ef u n c t i o no u rn e w
data and model, without any further argument it will calculatet h efi t t e dv a l u e sf o re v e r yr o wi nt h ed a t af r a m e .I fw es p e c -ify
interval = “predict” as an argument, it will calculate 95
percentpredictionintervalsinadditiontothepointestimate.
pred_out ←predict (object = out, newdata = pred_df, interval = "predict" )
head (pred_out)
## ﬁt lwr upr
## 1 47.9686 31.5477 64.3895## 2 48.4830 32.0623 64.9037
## 3 48.9973 32.5767 65.4180
## 4 49.5117 33.0909 65.9325## 5 50.0260 33.6050 66.4471## 6 50.5404 34.1189 66.9619


------------------------


Work with Models
•
145
Because we know that, by construction, the cases in
pred_df
and
pred_out
correspond row for row, we can bind the two data
frames together by column. This method of joining or merging
tables is
definitely not
recommended when you are dealing with
data.
pred_df
←
cbind
(pred_df, pred_out)
head
(pred_df)
## gdpPercap pop continent ﬁt lwr upr
## 1 241 7023596 Africa 48.0 31.5 64.4
## 2 1385 7023596 Africa 48.5 32.1 64.9
## 3 2530 7023596 Africa 49.0 32.6 65.4
## 4 3674 7023596 Africa 49.5 33.1 65.9
## 5 4818 7023596 Africa 50.0 33.6 66.4
## 6 5962 7023596 Africa 50.5 34.1 67.0
The end result is a tidy data frame, containing the predicted
v a l u e sf r o mt h em o d e lf o rt h er a n g eo fv a l u e sw es p e c i fi e d .N o w
we can plot the results. Because we produced a full range of pre-
dicted values, we can decide whether to use all of them. Here we
further subset the predictions to just those for Europe and Africa
(fig.6.4).
100
50
$1,000 $10,000 $100,000
Continent Africa
Europe
gdp Percap
Fit
Figure 6.4:
OLS predictions.
p
←
ggplot
(
data =
subset
(pred_df, continent
%in%
c
(
"Europe"
,
"Africa"
)),
aes
(
x=
gdpPercap,
y=
ﬁt,
ymin =
lwr,
ymax =
upr,
color =
continent,
ﬁll =
continent,
group =
continent))
p
+
geom_point
(
data =
subset
(gapminder,
continent
%in%
c
(
"Europe"
,
"Africa"
)),
aes
(
x=
gdpPercap,
y=
lifeExp,
color =
continent),
alpha =
0.5
,
inherit.aes =
FALSE
)
+
geom_line
()
+
geom_ribbon
(
alpha =
0.2
,
color =
FALSE
)
+
scale_x_log10
(
labels =
scales
::
dollar)


------------------------


146 •Chapter 6
Weuseanewgeomheretodrawtheareacoveredbythepre-
diction intervals: geom_ribbon() .I tt a k e sa n xargument like a
line but a yminand ymaxargument as specified in the ggplot()
aesthetic mapping. This defines the lower and upper limits of the
predictioninterval.
Inpractice,youmaynotuse predict() directlyallthatoften.
Instead, you might write code using additional packages that
encapsulate the process of producing predictions and plots frommodels. These are especially useful when your model is a little
morecomplexandtheinterpretationofcoefficientsbecomestrick-
ier. This happens, for instance, when you have a binary outcomevariableandneedtoconverttheresultsofalogisticregressionintopredictedprobabilities,orwhenyouhaveinteractiontermsamong
yourpredictions.Wewilldiscusssomeofthesehelperpackagesin
thenextfewsections.However,bearinmindthat
predict() and
itsabilitytoworksafelywithdifferentclassesofmodelunderpinsmost of these helpers. So it’s useful to see it in action firsthand in
ordertounderstandwhatitisdoing.
6.5 Tidy Model Objects with Broom
The predictmethod is very useful, but there are a lot of other
things we might want to do with our model output. We will useDavid Robinson’s
broomp a c k a g et oh e l pu so u t .I ti sal i b r a r yo f
functionsthathelpusgetfromthemodelresultsthatRgenerates
to numbers that we can plot. It will take model objects and turnpiecesofthemintodataframesthatyoucanuseeasilywithggplot.
library (broom)
Broom takes ggplot’s approach to tidy data and extends it
to the model objects that R produces. Its methods can tidily
extract three kinds of information. First, we can see component-
levelinformation about aspects of the model itself, such as coef-
ficients and t-statistics. Second, we can obtain observation-level
informationaboutthemodel’sconnectiontotheunderlyingdata.
This includes the fitted values and residuals for each observationin the data. And finally we can get model-level information that
summarizes the fit as a whole, such as an F-statistic, the model


------------------------


Work with Models •147
d e v i a n c e ,o rt h er - s q u a r e d .T h e r ei sa broomfunction for each of
thesetasks.
Get component-level statistics with tidy()
Thetidy()functiontakesamodelobjectandreturnsadataframe
of component-level information. We can work with this to make
plots in a familiar way, and much more easily than fishing inside
themodelobjecttoextractthevariousterms.Hereisanexample,
using the default results as just returned. For a more convenient
displayoftheresults,wewillpipetheobjectwecreatewith tidy()
through a function that rounds the numeric columns of the data
frame to two decimal places. This doesn’t change anything about
theobjectitself,ofcourse.
out_comp ←tidy (out)
out_comp %>% round_df ()
## term estimate std.error statistic p.value
## 1 (Intercept) 47.81 0.34 140.82 0
## 2 gdpPercap 0.00 0.00 19.16 0
## 3 pop 0.00 0.00 3.33 0
## 4 continentAmericas 13.48 0.60 22.46 0
## 5 continentAsia 8.19 0.57 14.34 0
## 6 continentEurope 17.47 0.62 27.97 0
## 7 continentOceania 18.08 1.78 10.15 0
W ea r en o wa b let otr ea tthisda tafra m ej u s tlik eallth eo th er
datathatwehaveseensofar,anduseittomakeaplot(fig.6.5).
p←ggplot (out_comp, mapping = aes(x= term, y= estimate))
p+geom_point ()+coord_ﬂip ()Pop
gdp Percap
Continent Oceania
Continent Europe
Continent Asia
Continent Americas
(Intercept)
01 0 2 0 3 0 4 0 5 0
EstimateTerm
Figure 6.5: Basic plot of OLS estimates.
W ecanextendandcleanupthisplotinavarietyofwa ys.F or
example, we can tell tidy()to calculate confidence intervals for
theestimates,usingR’s conﬁnt() function.
out_conf ←tidy (out, conf.int = TRUE )
out_conf %>% round_df ()


------------------------


148 •Chapter 6
## term estimate std.error statistic p.value conf.low conf.high
## 1 (Intercept) 47.81 0.34 140.82 0 47.15 48.48
## 2 gdpPercap 0.00 0.00 19.16 0 0.00 0.00
## 3 pop 0.00 0.00 3.33 0 0.00 0.00
## 4 continentAmericas 13.48 0.60 22.46 0 12.30 14.65
## 5 continentAsia 8.19 0.57 14.34 0 7.07 9.31
## 6 continentEurope 17.47 0.62 27.97 0 16.25 18.70
## 7 continentOceania 18.08 1.78 10.15 0 14.59 21.58
T h ec o n v e n i e n c e“ n o ti n ”o p e r a t o r %nin%is available via the
socvizlibrary. It does the opposite of %in%and selects only the
itemsinafirstvectorofcharactersthatarenotinthesecond.We’ll
use it to drop the intercept term from the table. We also want to
dosomethingaboutthelabels.Whenfittingamodelwithcategor-
icalvariables,Rwillcreatecoefficientnamesbasedonthevariable
nameandthecategoryname,like continentAmericas .N o rm all y
we like to clean these up before plotting. Most commonly, we
just want to strip away the variable name at the beginning of the
coefficient label. For this we can use preﬁx_strip() ,ac o n v e -
nience function in the socvizlibrary. We tell it which prefixes to
drop, using it to create a new column variable in out_conf that
correspondstothe termscolumnbuthasnicerlabels.
out_conf ←subset (out_conf, term %nin% "(Intercept)" )
out_conf $nicelabs ←preﬁx_strip (out_conf $term, "continent" )
Nowwecanuse geom_pointrange() tomakeafigure(fig.6.6)
that displays some information about our confidence in the vari-
able estimates, as opposed to just the coefficients. As with the
boxplotsearlier,weuse reorder() tosortthenamesofthemodel’s
terms by the estimate variable, thusarrangingourplotofeffects
fromlargesttosmallestinmagnitude.
p←ggplot (out_conf, mapping = aes(x= reorder (nicelabs, estimate),
y= estimate, ymin = conf.low, ymax = conf.high))
p+geom_pointrange ()+coord_ﬂip ()+labs (x= "",y= "OLS Estimate" )Oceania
Europe
Americas
Asia
gdp Percap
pop
0 5 10 15 20
OLS estimate
Figure 6.6: A nicer plot of OLS estimates and
confidence intervals.
Dotplots of this kind can be very compact. The vertical axis
canoftenbecompressedquiteabit,withnolossincomprehension.
Infact,theyareofteneasiertoreadwithmuchlessroombetween
therowsthanwhengivenadefaultsquareshape.


------------------------


Work with Models •149
Get observation-level statistics with augment()
The values returned by augment() are all statistics calculated at
the level of the original observations. As such, they can be addedon to the data frame that the model is based on. Working from
ac a l lt o
augment() will return a data frame with all the original
observations used in the estimation of the model, together withcolumnslikethefollowing:
•.ﬁtted—thefittedvaluesofthemodel
•.se.ﬁt—thestandarderrorsofthefittedvalues
•.resid—theresiduals
•.hat—thediagonalofthehatmatrix
•.sigma—anestimateofresidualstandarddeviationwhenthe
correspondingobservationisdroppedfromthemodel
•.cooksd—Cook ’ sdistance,acommonregressiondiagnostic
•.std.resid —thestandardizedresiduals
Eachofthesevariablesisnamedwithaleadingdot,forexam-
ple.hatrather than hat.T h i si st og u a r da g a i n s ta c c i d e n t a l l y
confusingitwith(oraccidentallyoverwriting)anexistingvariablein your data with this name. The columns of values return willdifferslightlydependingontheclassofmodelbeingfitted.
out_aug ←augment (out)
head (out_aug) %>% round_df ()
## lifeExp gdpPercap pop continent .ﬁtted .se.ﬁt .resid .hat .sigma .cooksd .std.resid
## 1 28.8 779 8425333 Asia 56.4 0.47 -27.6 0 8.34 0.01 -3.31## 2 30.3 821 9240934 Asia 56.4 0.47 -26.1 0 8.34 0.00 -3.13
## 3 32.0 853 10267083 Asia 56.5 0.47 -24.5 0 8.35 0.00 -2.93
## 4 34.0 836 11537966 Asia 56.5 0.47 -22.4 0 8.35 0.00 -2.69## 5 36.1 740 13079460 Asia 56.4 0.47 -20.3 0 8.35 0.00 -2.44## 6 38.4 786 14880372 Asia 56.5 0.47 -18.0 0 8.36 0.00 -2.16
Bydefault, augment() willextracttheavailabledatafromthe
model object. This will usually include the variables used in themodel itself but not any additional ones contained in the original
dataframe.Sometimesitisusefultohavethese.Wecanaddthem
byspecifyingthe
dataargument:


------------------------


150 •Chapter 6
out_aug ←augment (out, data = gapminder)
head (out_aug) %>% round_df ()
## country continent year lifeExp pop gdpPercap .ﬁtted .se.ﬁt .resid .hat .sigma .cooksd
## 1 Afghanistan Asia 1952 28.8 8425333 779 56.4 0.47 -27.6 0 8.34 0.01
## 2 Afghanistan Asia 1957 30.3 9240934 821 56.4 0.47 -26.1 0 8.34 0.00
## 3 Afghanistan Asia 1962 32.0 10267083 853 56.5 0.47 -24.5 0 8.35 0.00
## 4 Afghanistan Asia 1967 34.0 11537966 836 56.5 0.47 -22.4 0 8.35 0.00
## 5 Afghanistan Asia 1972 36.1 13079460 740 56.4 0.47 -20.3 0 8.35 0.00
## 6 Afghanistan Asia 1977 38.4 14880372 786 56.5 0.47 -18.0 0 8.36 0.00
## .std.resid
## 1 -3.31
## 2 -3.13
## 3 -2.93
## 4 -2.69
## 5 -2.44
## 6 -2.16
If some rows containing missing data were dropped to fit the
model, then these will not be carried over to the augmented data
frame.
The new columns created by augment() can be used to cre-
a t es o m es t a n d a r dr e g r e s s i o np l o t s .F o re x a m p l e ,w ec a np l o tt h e
residuals versus the fitted values. Figure 6.7 suggests, unsurpris-
ingly,thatourcountry-yeardatahasrathermorestructurethanis
capturedbyourOLSmodel.
p←ggplot (data = out_aug, mapping = aes(x= .ﬁtted, y= .resid))
p+geom_point ()25
–25
–50
50 60 70 80
.fitted.resid
90 1000
Figure 6.7: Residuals vs fitted values.Get model-level statistics with glance()
The glance() function organizes the information typically pre-
sented at the bottom of a model’s summary() output. By itself, it
usually just returns a table with a single row in it. But as we shall
seeinamoment,therealpowerof broom’sapproachisthewaythat
itcanscaleuptocaseswherewearegroupingorsubsamplingour
data.
glance (out) %>% round_df ()


------------------------


Work with Models •151
## r.squared adj.r.squared sigma statistic p.value df
## 1 0.58 0.58 8.37 393.91 0 7
## logLik AIC BIC deviance df.residual
## 1 -6033.83 12083.6 12127.2 118754 1697
B r o o mi sa b l et ot i d y( a n da u g m e n t ,a n dg l a n c ea t )aw i d e
rangeofmodeltypes.N otallfunctionsareavailableforallclasses
of model. Consult broom’s documentation for more details on
what is available. For example, here is a plot created from the
tidiedoutputofanevent-historyanalysis.FirstwegenerateaCox
proportionalhazardsmodelofsomesurvivaldata.
library (survival)
out_cph ←coxph (Surv (time, status) ~age +sex, data = lung)
out_surv ←survﬁt (out_cph)
Thedetailsofthefitarenotimportanthere,butinthefirststep
theSurv()function creates the response or outcome variable for
theproportional hazardsmodelthatisthenfittedbythe coxph()
function. Then the survﬁt() function creates the survival curve
f r o mt h em o d e l ,m u c hl i k ew eu s e d predict() to generate pre-
dictedvaluesearlier.Try summary(out_cph) toseethemodel,and
summary(out_surv) to see the table of predicted values that will
form the basis for our plot. Next we tidy out_surv to get a data
frame,andplotit(fig.6.8).
out_tidy ←tidy (out_surv)
p←ggplot (data = out_tidy, mapping = aes(time, estimate))
p+geom_line ()+geom_ribbon (mapping = aes(ymin = conf.low,
ymax = conf.high), alpha = 0.2)1.00
0.75
0.250.50
0.00
0 250 500 750
TimeEstimate
1000
Figure 6.8: A Kaplan-Meier plot.
6.6 Grouped Analysis and List Columns
Broom makes it possible to quickly fit models to different sub-
setsofyourdataandgetconsistentandusabletablesofresultsout
the other end. Let’s say we wanted to look at the gapminder data
by examining the relationship between life expectancy and GDP


------------------------


152 •Chapter 6
bycontinent, for each year in the data. The gapminder data is at
bottom organized by country-years. That is the unit of observa-
tion in the rows. If we wanted, we could take a slice of the data
manually, such as “all countries observed in Asia, in 1962” or “allinAfrica,2002.”Hereis“Europe,1977”:
eu77 ←gapminder %>% ﬁlter (continent =="Europe" , year ==1977 )
We could then see what the relationship between life
expectancyandGDPlookedlikeforthatcontinent-yeargroup:
ﬁt←lm(lifeExp ~log(gdpPercap), data = eu77)
summary (ﬁt)
##
## Call:
## lm(formula = lifeExp ~ log(gdpPercap), data = eu77)#### Residuals:
## Min 1Q Median 3Q Max
## -7.496 -1.031 0.093 1.176 3.712#### Coefﬁcients:
## Estimate Std. Error t value Pr(>|t|)
## (Intercept) 29.489 7.161 4.12 0.00031 ***## log(gdpPercap) 4.488 0.756 5.94 2.2e-06 ***## ---
## Signif. codes:
## 0 '***'0.001 '**'0.01 '*'0.05 '.'0.1'' 1
##
## Residual standard error: 2.11 on 28 degrees of freedom
## Multiple R-squared: 0.557, Adjusted R-squared: 0.541## F-statistic: 35.2 on 1 and 28 DF, p-value: 2.17e-06
With dplyrand broomwe can do this for every continent-
yearsliceofthedatainacompactandtidyway.Westartwithourtableofdataandthen(
%>%)groupthecountriesby continent and
yearusingthe group_by() function.Weintroducedthisgrouping
operationinchapter4.Ourdataisreorganizedfirstbycontinent,
and within continent by year. Here we will take one further stepandnestthedatathatmakesupeachgroup:


------------------------


Work with Models •153
out_le ←gapminder %>%
group_by (continent, year) %>%
nest ()
out_le
## # A tibble: 60 x 3
## continent year data## <fct> <int> <list>## 1 Asia 1952 <tibble [33 x 4]>
## 2 Asia 1957 <tibble [33 x 4]>
## 3 Asia 1962 <tibble [33 x 4]>## 4 Asia 1967 <tibble [33 x 4]>## 5 Asia 1972 <tibble [33 x 4]>
## 6 Asia 1977 <tibble [33 x 4]>
## 7 Asia 1982 <tibble [33 x 4]>## 8 Asia 1987 <tibble [33 x 4]>## 9 Asia 1992 <tibble [33 x 4]>
## 10 Asia 1997 <tibble [33 x 4]>
## # ... with 50 more rows
Think of what nest()does as a more intensive version what
group_by() does. The resulting object is has the tabular form we
expect (it is a tibble), but it looks a little unusual. The first two
columns are the familiar continent and year.B u tw en o wa l s o
have a new column, data, that contains a small table of data cor-
responding to each continent-year group. This is a list column ,
s o m e t h i n gw eh a v en o ts e e nb e f o r e .I tt u r n so u tt ob ev e r yu s e -
fulforbundlingtogethercomplexobjects(structured,inthiscase,
asalistoftibbles,eachbeinga33x4tableofdata)withintherowsof our data (which remains tabular). Our “Europe 1977” fit is inthere. We can look at it, if we like, by filtering the data and then
unnesting thelistcolumn.
out_le %>% ﬁlter (continent =="Europe" &year ==1977 )%>% unnest ()
## # A tibble: 30 x 6
## continent year country lifeExp pop gdpPercap
## <fct> <int> <fct> <dbl> <int> <dbl>## 1 Europe 1977 Albania 68.9 2.51e6 3533.## 2 Europe 1977 Austria 72.2 7.57e6 19749.


------------------------


154 •Chapter 6
## 3 Europe 1977 Belgium 72.8 9.82e6 19118.
## 4 Europe 1977 Bosnia and Her~ 69.9 4.09e6 3528.
## 5 Europe 1977 Bulgaria 70.8 8.80e6 7612.
## 6 Europe 1977 Croatia 70.6 4.32e6 11305.## 7 Europe 1977 Czech Republic 70.7 1.02e7 14800.## 8 Europe 1977 Denmark 74.7 5.09e6 20423.
## 9 Europe 1977 Finland 72.5 4.74e6 15605.
## 10 Europe 1977 France 73.8 5.32e7 18293.## # ... with 20 more rows
Listcolumnsareusefulbecausewecanactontheminacom-
pact and tidy way. In particular, we can pass functions along to
each row of the list column and make something happen. For
example,amomentagoweranaregressionoflifeexpectancyandlogged GDP for European countries in 1977. We can do that forevery continent-year combination in the data. We first create a
convenience function called
ﬁt_ols() that takes a single argu-
ment, df(for data frame), and that fits the linear model we are
interested in. Then we mapthat function to each of our list col- The map action is an important idea in functional
programming. If you have written code in other,more imperative languages, you can think of it as acompact alternative to writing for ... next loops. Youcan of course write loops like this in R.Computationally they are often not any less efficientthan their functional alternatives. But mappingfunctions to arrays is more easily integrated into a
sequence of data transformations.umn rows in turn. Recall from chapter 4 that mutatecreates new
variablesorcolumnswithinapipeline.
ﬁt_ols ←function (df) {
lm(lifeExp ~log(gdpPercap), data = df)
}
out_le ←gapminder %>%
group_by (continent, year) %>%
nest ()%>%
mutate (model = map(data, ﬁt_ols))
out_le
## # A tibble: 60 x 4
## continent year data model## <fct> <int> <list> <list>## 1 Asia 1952 <tibble [33 x 4]> <S3: lm>
## 2 Asia 1957 <tibble [33 x 4]> <S3: lm>
## 3 Asia 1962 <tibble [33 x 4]> <S3: lm>## 4 Asia 1967 <tibble [33 x 4]> <S3: lm>## 5 Asia 1972 <tibble [33 x 4]> <S3: lm>


------------------------


Work with Models •155
## 6 Asia 1977 <tibble [33 x 4]> <S3: lm>
## 7 Asia 1982 <tibble [33 x 4]> <S3: lm>
## 8 Asia 1987 <tibble [33 x 4]> <S3: lm>
## 9 Asia 1992 <tibble [33 x 4]> <S3: lm>## 10 Asia 1997 <tibble [33 x 4]> <S3: lm>## # ... with 50 more rows
B e f o r es t a r t i n gt h ep i p e l i n ew ec r e a t ean e wf u n c t i o n :i ti sa
convenience function whose only job is to estimate a particularOLS model on some data. Like almost everything in R, func-ti o n sa r eak i n do fo b ject .T om ak ean ewo n e ,w eu seth es l i gh tl y
special
function() function. There is a little more detail on cre-
ating functions in the appendix. To see what ﬁt_ols() looks
like once it is created, type ﬁt_olswithout parentheses at the
console. To see what it does, try ﬁt_ols(df = gapminder) or
summary(ﬁt_ols(gapminder)) .
Nowwehavetwolistcolumns: dataandmodel.Thelatterwas
created by mapping the ﬁt_ols() function to each row of data.
Insideeachelementof modelisalinearmodelfo rtha tco n tinen t-
year. So we now have sixty OLS fits, one for every continent-year
grouping. Having the models inside the list column is not muchuse to us in and of itself. But we can extract the information wewant while keeping things in a tidy tabular form. For clarity we
willrunthepipelinefromthebeginningagain,thistimeaddinga
fewnewsteps.
Firstweextractsummarystatisticsfromeachmodelbymap-
ping the
tidy()function from broom to the model list column.
Thenweunnesttheresult,droppingtheothercolumnsinthepro-cess. Finally, wefilteroutalltheIntercepttermsandalsodropallobservations from Oceania. In the case of the Intercepts we do
this just out of convenience. Oceania we drop just because there
a r es of e wo b s e r v a t i o n s .W ep u tt h er e s u l t si na no b j e c tc a l l e d
out_tidy .
ﬁt_ols ←function (df) {
lm(lifeExp ~log(gdpPercap), data = df)
}
out_tidy ←gapminder %>%
group_by (continent, year) %>%
nest ()%>%


------------------------


156 •Chapter 6
mutate (model = map(data, ﬁt_ols),
tidied = map(model, tidy)) %>%
unnest (tidied, .drop = TRUE )%>%
ﬁlter (term %nin% "(Intercept)" &
continent %nin% "Oceania" )
out_tidy %>% sample_n (5)
## # A tibble: 5 x 7
## continent year term estimate std.error statistic p.value
## <fct> <int> <chr> <dbl> <dbl> <dbl> <dbl>
## 1 Europe 1987 log(gdpPercap) 4.14 0.752 5.51 0.00000693
## 2 Asia 1972 log(gdpPercap) 4.44 1.01 4.41 0.000116
## 3 Europe 1972 log(gdpPercap) 4.51 0.757 5.95 0.00000208
## 4 Americas 1952 log(gdpPercap) 10.4 2.72 3.84 0.000827
## 5 Asia 1987 log(gdpPercap) 5.17 0.727 7.12 0.0000000531
We now have tidy regression output with an estimate of the
association between log GDP per capita and life expectancy for
eachyear,withincontinents.Wecanplottheseestimates(fig.6.9)
inawaythattakesadvantageoftheirgroupiness.
p←ggplot (data = out_tidy,
mapping = aes(x= year, y= estimate,
ymin = estimate -2*std.error,
ymax = estimate +2*std.error,
group = continent, color = continent))
15
5
0
1952 1957 1962 1967 1972 1977Continent Africa Americas Asia Europe
1982
Year1992 2002 2007 1987 199710Estimate
Figure 6.9: Yearly estimates of the association between GDP and life expectancy, pooled by continent.


------------------------


Work with Models •157
p+geom_pointrange (position = position_dodge (width = 1))+
scale_x_continuous (breaks = unique (gapminder $year)) +
theme (legend.position = "top" )+
labs (x= "Year" ,y= "Estimate" ,color = "Continent" )
The call to position_dodge() within geom_pointrange()
allows the point ranges for each continent to be near one another
withinyears, insteadofbeingplottedrightontopofoneanother.
We could have faceted the results by continent, but doing it this
wayletsusseedifferencesintheyearlyestimatesmuchmoreeas-ily. This technique is very useful not just for cases like this butalso when you want to compare the coefficients given by differ-
entkindsofstatisticalmodel.Thissometimeshappenswhenwe’re
interested in seeing how, say, OLS performs against some othermodelspecification.
6.7 Plot Marginal Effects
Ourearlierdiscussionof predict() wasaboutobtainingestimates
of the average effect of some coefficient, net of the other terms in
themodel.Overthepastdecade,estimatingandplotting partialor
marginaleffects fromamodelhasbecomeanincreasinglycommon
way of presenting accurate and interpretively useful predictions.
Interest in marginal effects plots was stimulated by the realiza-
tionthattheinterpretationoftermsinlogisticregressionmodels,in particular, was trickier than it seemed—especially when therewereinteractiontermsinthemodel(Ai&Norton2003).Thomas
Leeper’s
marginspackagecanmaketheseplotsforus.
library (margins)
To see it in action, we’ll take another look at the General
SocialSurveydatain gss_sm,thistimefocusingonthebinaryvari-
able obama.I ti sc o d e d 1i ft h er e s p o n d e n ts a i dh eo rs h ev o t e d As is common with retrospective questions on
elections, rather more people claim to have voted
for Obama than is consistent with the vote sharehe received in the election.for Barack Obama in the 2012 presidential election and 0other-
w i s e .I nt h i sc a s e ,m o s t l yf o rc o n v e n i e n c e ,t h ez e r oc o d ei n c l u d e sall other answers to the question, including those who said they
v o t e df o rM i t tR o m n e y ,t h o s ew h os a i dt h e yd i dn o tv o t e ,t h o s e
whorefusedtoanswer, andthosewhosaidtheydidn’tknowwho


------------------------


158 •Chapter 6
theyvotedfor.Wewillfitalogisticregressionon obama,with age,
polviews ,race,and sexasthepredictors.The agevariableisthe
respondent’s age in years. The sexvariable is coded as “Male” or
“Female,”with“Male”asthereferencecategory.The racevariable
is coded as “White,” “Black,” or “Other,” with “White” as the ref-erence category. The
polviews m ea s ur ei sase lf-r epo rt edscaleo f
the respondent’s political orientation from “Extremely Conserva-
tive”through“ExtremelyLiberal,”with“Moderate”inthemiddle.We take
polviews and create a new variable, polviews_m , using
therelevel() function to recode “Moderate” to be the reference
category.Wefitthemodelwiththe glm()functionandspecifyan
interactionbetween raceandsex.
gss_sm $polviews_m ←relevel (gss_sm $polviews, ref = "Moderate" )
out_bo ←glm(obama ~polviews_m +sex*race,
family = "binomial" ,data = gss_sm)
summary (out_bo)
##
## Call:
## glm(formula = obama ~ polviews_m + sex * race, family = "binomial",## data = gss_sm)##
## Deviance Residuals:
## Min 1Q Median 3Q Max## -2.905 -0.554 0.177 0.542 2.244##
## Coefﬁcients:
## Estimate Std. Error z value Pr(>|z|)## (Intercept) 0.29649 0.13409 2.21 0.0270 *
## polviews_mExtremely Liberal 2.37295 0.52504 4.52 6.2e-06 ***
## polviews_mLiberal 2.60003 0.35667 7.29 3.1e-13 ***## polviews_mSlightly Liberal 1.29317 0.24843 5.21 1.9e-07 ***## polviews_mSlightly Conservative -1.35528 0.18129 -7.48 7.7e-14 ***
## polviews_mConservative -2.34746 0.20038 -11.71 < 2e-16 ***
## polviews_mExtremely Conservative -2.72738 0.38721 -7.04 1.9e-12 ***## sexFemale 0.25487 0.14537 1.75 0.0796 .## raceBlack 3.84953 0.50132 7.68 1.6e-14 ***
## raceOther -0.00214 0.43576 0.00 0.9961
## sexFemale:raceBlack -0.19751 0.66007 -0.30 0.7648


------------------------


Work with Models •159
## sexFemale:raceOther 1.57483 0.58766 2.68 0.0074 **
## ---
## Signif. codes: 0 '***'0.001 '**'0.01 '*'0.05 '.'0.1'' 1
#### (Dispersion parameter for binomial family taken to be 1)##
## Null deviance: 2247.9 on 1697 degrees of freedom
## Residual deviance: 1345.9 on 1686 degrees of freedom## (1169 observations deleted due to missingness)
## AIC: 1370
#### Number of Fisher Scoring iterations: 6
The summary reports the coefficients and other information.
We can now graph the data in any one of several ways. Using
margins() ,wecalculatethemarginaleffectsforeachvariable:
bo_m ←margins (out_bo)
summary (bo_m)
## factor AME SE z p lower upper
## polviews_mConservative -0.4119 0.0283 -14.5394 0.0000 -0.4674 -0.3564
## polviews_mExtremely Conservative -0.4538 0.0420 -10.7971 0.0000 -0.5361 -0.3714
## polviews_mExtremely Liberal 0.2681 0.0295 9.0996 0.0000 0.2103 0.3258## polviews_mLiberal 0.2768 0.0229 12.0736 0.0000 0.2319 0.3218## polviews_mSlightly Conservative -0.2658 0.0330 -8.0596 0.0000 -0.3304 -0.2011
## polviews_mSlightly Liberal 0.1933 0.0303 6.3896 0.0000 0.1340 0.2526
## raceBlack 0.4032 0.0173 23.3568 0.0000 0.3694 0.4371## raceOther 0.1247 0.0386 3.2297 0.0012 0.0490 0.2005## sexFemale 0.0443 0.0177 2.5073 0.0122 0.0097 0.0789
The marginslibrary comes with several plot methods of its
own. If you wish, at this point you can just try plot(bo_m) to
see a plot of the average marginal effects, produced with the gen-
eral look of a Stata graphic. Other plot methods in the margins
library include cplot(), which visualizes marginal effects condi-
tionalonasecondvariable,and image(),whichshowspredictions
ormarginaleffectsasafilledheatmaporcontourplot.
Alternatively, we can take results from margins() and plot
them ourselves. To clean up the summary a little, we convertit to a tibble, then use
preﬁx_strip() and preﬁx_replace() to


------------------------


160 •Chapter 6
Figure 6.10: Average marginal effects plot.Race: Black
Liberal
Extremely liberal
Slightly liberal
Slightly conservative
Conservative
Extremely conservative
–0.50 –0.25 0.25
Average marginal eﬀect0.00Race: other
Female
tidy the labels. We want to strip the polviews_m and sexpre-
fixes and (to avoid ambiguity about “Other”) adjust the race
prefix.
bo_gg ←as_tibble (summary (bo_m))
preﬁxes ←c("polviews_m" ,"sex" )
bo_gg $factor ←preﬁx_strip (bo_gg $factor, preﬁxes)
bo_gg $factor ←preﬁx_replace (bo_gg $factor, "race" ,"Race: " )
bo_gg %>% select (factor, AME, lower, upper)
## # A tibble: 9 x 4
## factor AME lower upper
## * <chr> <dbl> <dbl> <dbl>
## 1 Conservative -0.412 -0.467 -0.356
## 2 Extremely Conservative -0.454 -0.536 -0.371
## 3 Extremely Liberal 0.268 0.210 0.326
## 4 Liberal 0.277 0.232 0.322
## 5 Slightly Conservative -0.266 -0.330 -0.201
## 6 Slightly Liberal 0.193 0.134 0.253
## 7 Race: Black 0.403 0.369 0.437
## 8 Race: Other 0.125 0.0490 0.200
## 9 Female 0.0443 0.00967 0.0789
Now we have a table that we can plot (fig. 6.10) as we have
learned:
p←ggplot (data = bo_gg, aes(x= reorder (factor, AME),
y= AME, ymin = lower, ymax = upper))
p+geom_hline (yintercept = 0,color = "gray80" )+


------------------------


Work with Models •161
geom_pointrange ()+coord_ﬂip ()+
labs (x= NULL ,y= "Average Marginal Effect" )
Ifwearejustinterestedingettingconditionaleffectsforapar-
ticularvariable,thenconvenientlywecanasktheplotmethodsin
themarginslibrary to do the work calculating effects for us but
withoutdrawingtheirplot. Instead, theycanreturntheresultsin
aformatwecaneasilyuseinggplot,andwithlessneedforcleanup.
Forexample,with cplot()wecandrawfigure6.11.Female
Male
0.0 0.2 0.4 0.6
Conditional effect
Figure 6.11: Conditional effects plot.
pv_cp ←cplot (out_bo, x= "sex" ,draw = FALSE )
p←ggplot (data = pv_cp, aes(x= reorder (xvals, yvals),
y= yvals, ymin = lower, ymax = upper))
p+geom_hline (yintercept = 0,color = "gray80" )+
geom_pointrange ()+coord_ﬂip ()+
labs (x= NULL ,y= "Conditional Effect" )
The marginspackage is under active development. It can do
much more than described here. The vignettes that come with
the package provide more extensive discussion and numerous
examples.
6.8 Plots from Complex Surveys
Social scientists often work with data collected using a complex
survey design. Survey instrume nts may be stratified by region
or some other characteristic, contain replicate weights to make
themcomparabletoareferencepopulation,haveaclusteredstruc-
t u r e ,a n ds oo n .I nc h a p t e r4w el e a r n e dh o wc a l c u l a t ea n dt h e n
plot frequency tables of categorical variables, using some data
from the General Social Survey. However, if we want accurate
estimates of U.S. households from the GSS, we will need to take
the survey’s design into account and use the survey weights pro-
vided in the dataset. Thomas Lumley’s surveylibrary provides a
comprehensive set of tools for addressing these issues. The tools
and the theory behind them are discussed in detail in Lumley


------------------------


162 •Chapter 6
(2010), and an overview of the package is provided in Lumley
(2004). While the functions in the surveypackage are straight-
forward to use and return results in a generally tidy form, the
package predates the tidyverse and its conventions by severalyears. This means we cannot use
surveyfunctions directly with
dplyr.H o w e v e r ,G r e gF r e e d m a nE l l i sh a sw r i t t e nah e l p e rp a c k -
age, srvyr,t h a ts o l v e st h i sp r o b l e mf o ru sa n dl e t su su s et h e
surveylibrary’s functions within a data analysis pipeline in a
familiarway.
For example, the gss_lon data contains a small subset of
measures from every wave of the GSS since its inception in1972. It also contains several variables that describe the designof the survey and provide replicate weights for observations
in various years. These technical details are described in the
GSS documentation. Similar information is typically provided byother complex surveys. Here we will use this design informa-tion to calculate weighted estimates of the distribution of edu-
cational attainment by race for selected survey years from 1976
to2016.
Tobegin,weloadthe
surveyandsrvyrlibraries.
library (survey)
library (srvyr)
Next,wetakeour gss_londatasetandusethe surveytoolsto
createanewobjectthatcontainsthedata,asbefore,butwithsomeadditionalinformationaboutthesurvey’sdesign:
options (survey.lonely.psu = "adjust" )
options (na.action= "na.pass" )
gss_wt ←subset (gss_lon, year >1974 )%>%
mutate (stratvar = interaction (year, vstrat)) %>%
as_survey_design (ids = vpsu,
strata = stratvar,
weights = wtssall,
nest = TRUE )
The two optionsset at the beginning provides some infor-
mation to the surveylibrary about how to behave. You should
consultLumley(2010)andthe surveypackagedocumentationfor


------------------------


Work with Models •163
details. The subsequent operations create gss_wt,a no b j e c tw i t h
one additional column ( stratvar ), describing the yearly sam-
pling strata. We use the interaction() function to do this. It
multiplies the vstratvariable by the yearvariable to get a vec-
t o ro fs t r a t u mi n f o r m a t i o nf o re a c hy e a r .I nt h en e x ts t e p ,w eu s e We have to do this because of the way the GSS
codes its stratum information.theas_survey_design() function to add the key pieces of infor-
mation about the survey design. It adds information about the
sampling identifiers ( ids), the strata ( strata), and the replicate
weights ( weights). With those in place we can take advantage
of a large number of specialized functions in the surveylibrary
thatallowustocalculateproperlyweightedsurveymeansoresti-mate models with the correct sampling specification. For exam-p l e ,w ec a nc a l c u l a t et h ed i s t r i b u t i o no fe d u c a t i o nb yr a c ef o r
a series of years from 1976 to 2016. We use
survey_mean() to
dothis:
out_grp ←gss_wt %>%
ﬁlter (year %in% seq(1976 ,2016 ,by = 4))%>%
group_by (year, race, degree) %>%
summarize (prop = survey_mean (na.rm = TRUE ))
out_grp
## # A tibble: 150 x 5
## year race degree prop prop_se## <dbl> <fct> <fct> <dbl> <dbl>
## 1 1976. White Lt High School 0.328 0.0160
## 2 1976. White High School 0.518 0.0162## 3 1976. White Junior College 0.0129 0.00298## 4 1976. White Bachelor 0.101 0.00960
## 5 1976. White Graduate 0.0393 0.00644
## 6 1976. Black Lt High School 0.562 0.0611## 7 1976. Black High School 0.337 0.0476## 8 1976. Black Junior College 0.0426 0.0193
## 9 1976. Black Bachelor 0.0581 0.0239
## 10 1976. Black Graduate 0. 0.## # ... with 140 more rows
The results returned in out_grpinclude standard errors. We
can also ask survey_mean() to calculate confidence intervals for
us,ifwewish.


------------------------


164 •Chapter 6
Grouping with group_by() lets us calculate counts or means
f o rt h ei n n e r m o s tv a r i a b l e ,g r o u p e db yt h en e x tv a r i a b l e“ u p ”o r
“out,” in this case, degreebyrace, such that the proportions for
degreewill sum to one for each group in race,a n dt h i sw i l lb e
done separately for each value of year.I fw ew a n tt h e marginal
frequencies, suchthatthevaluesforallcombinationsof raceand
degrees u mt oo n ew i t h i ne a c hy e a r ,w efi r s th a v et oi n t e r a c t
t h ev a r i a b l e sw ea r ec r o s s - c l a s s i f y i n g .T h e nw eg r o u pb yt h en e winteractedvariableanddothecalculationasbefore:
out_mrg ←gss_wt %>%
ﬁlter (year %in% seq(1976 ,2016 ,by = 4))%>%
mutate (racedeg = interaction (race, degree)) %>%
group_by (year, racedeg) %>%
summarize (prop = survey_mean (na.rm = TRUE ))
out_mrg
## # A tibble: 150 x 4
## year racedeg prop prop_se## <dbl> <fct> <dbl> <dbl>## 1 1976. White.Lt High School 0.298 0.0146
## 2 1976. Black.Lt High School 0.0471 0.00840
## 3 1976. Other.Lt High School 0.00195 0.00138## 4 1976. White.High School 0.471 0.0160## 5 1976. Black.High School 0.0283 0.00594
## 6 1976. Other.High School 0.00325 0.00166
## 7 1976. White.Junior College 0.0117 0.00268## 8 1976. Black.Junior College 0.00357 0.00162## 9 1976. Other.Junior College 0. 0.
## 10 1976. White.Bachelor 0.0919 0.00888
## # ... with 140 more rows
T h i sg i v e su st h en u m b e r st h a tw ew a n ta n dr e t u r n st h e mi n
at i d yd a t af r a m e .T h e interaction() function produces vari-
ablelabelsthatareacompoundofthetwovariablesweinteracted,with each combination of categories separated by a period (such
as
White.Graduate ).However,perhapswewouldliketoseethese
categoriesastwoseparatecolumns,oneforraceandoneforedu-cation, as before. Because the variable labels are organized in apredictableway,wecanuseoneoftheconvenientfunctionsinthe


------------------------


Work with Models •165
tidyverse’s tidyrp a c k a g et os e p a r a t et h es i n g l ev a r i a b l ei n t ot w o
columnswhilecorrectlypreservingtherowvalues.Appropriately,
thisfunctioniscalled separate() . The two backslashes before the period in the call to
separate are necessary for R to interpret it literally as
a period. By default in search-and-replace operationslike this, the search terms are regular expressions.The period acts as a special character, a kind ofwildcard, meaning “any character at all.” To makethe regular expression engine treat it literally, weadd one backslash before it. The backslash is an“escape” character. It means “The next character isgoing to be treated differently from usual.” However,because the backslash is a special character as well,we need to add a second backslash to make surethe parser sees it properly. out_mrg ←gss_wt %>% ﬁlter (year %in% seq(1976 ,2016 ,by = 4))%>%
mutate (racedeg = interaction (race, degree)) %>% group_by (year,
racedeg) %>% summarize (prop = survey_mean (na.rm = TRUE ))%>%
separate (racedeg, sep = "\\." ,into = c("race" ,"degree" ))
out_mrg
## # A tibble: 150 x 5
## year race degree prop prop_se
## <dbl> <chr> <chr> <dbl> <dbl>## 1 1976. White Lt High School 0.298 0.0146## 2 1976. Black Lt High School 0.0471 0.00840
## 3 1976. Other Lt High School 0.00195 0.00138
## 4 1976. White High School 0.471 0.0160## 5 1976. Black High School 0.0283 0.00594## 6 1976. Other High School 0.00325 0.00166
## 7 1976. White Junior College 0.0117 0.00268
## 8 1976. Black Junior College 0.00357 0.00162## 9 1976. Other Junior College 0. 0.
## 10 1976. White Bachelor 0.0919 0.00888
## # ... with 140 more rows
Thecallto separate() saystotakethe racedegcolumn,split
e a c hv a l u ew h e ni ts e e sap e r i o d ,a n dr e o r g a n i z et h er e s u l t si n t o
two columns, raceand degree.T h i sg i v e su sat i d yt a b l em u c h
likeout_grpbutforthemarginalfrequencies.
Reasonable people can disagree over how best to plot a small
multiple of a frequency table while faceting by year, especially
when there is some measure of uncertainty attached. A barplot is
t h eo b v i o u sa p p r o a c hf o ras i n g l ec a s e ,b u tw h e nt h e r ea r em a n yyearsitcanbedifficulttocomparebarsacrosspanels.Thisisespe-cially the case when standard errors or confidence intervals are
used in conjunction with bars. This is sometimes called a “dyna-
Sometimes it may be preferable to show that the
underlying variable is categorical, as a bar chartmakes clear, and not continuous, as a line graphsuggests. Here the trade-off is in favor of the linegraphs as the bars are hard to compare across facets. miteplot,” notbecauseitlooksamazingbutbecausethet-shaped
e r r o rb a r so nt h et o p so ft h ec o l u m n sm a k et h e ml o o kl i k ec a r -toon dynamite plungers. An alternative is to use a line graph to
join up the time observations, faceting on educational categories


------------------------


Figure 6.12: Weighted estimates of educational
attainment for whites and blacks, GSS selected years
1976–2016. Faceting barplots is often a bad idea,
and the more facets there are, the worse an idea it is.
With a small-multiple plot the viewer wants to
compare across panels (in this case, over time), but
this is difficult to do when the data inside the panels
are categorical comparisons shown as bars (in this
case, education level by group).Educational attainment by race
GSS 1976–2016
Race White Black
1976
60%
40%
20%
0%
60%
40%
20%
0%
60%
40%
20%
0%
60%
40%
20%
0%
60%
Lt high
schoolHigh
schoolJunior
collegeBachelor Graduate Lt high
schoolHigh
schoolJunior
collegeBachelor Graduate40%
20%
0%Percent1980
1984 1988
1996 2000
2004 2008
2012 2016


------------------------


Work with Models •167
instead of year. Figure 6.12 shows the results for our GSS data in
dynamite-plotform,wheretheerrorbarsaredefinedastwicethe
standarderrorineitherdirectionaroundthepointestimate.
p←ggplot (data = subset (out_grp, race %nin% "Other" ),
mapping = aes(x= degree, y= prop,
ymin = prop -2*prop_se,
ymax = prop +2*prop_se,
ﬁll = race,
color = race,
group = race))
dodge ←position_dodge (width= 0.9)
p+geom_col (position = dodge, alpha = 0.2)+
geom_errorbar (position = dodge, width = 0.2)+
scale_x_discrete (labels = scales ::wrap_format (10))+
scale_y_continuous (labels = scales ::percent) +
scale_color_brewer (type = "qual" ,palette = "Dark2" )+
scale_ﬁll_brewer (type = "qual" ,palette = "Dark2" )+
labs (title = "Educational Attainment by Race" ,
subtitle = "GSS 1976-2016" ,
ﬁll = "Race" ,
color = "Race" ,
x= NULL ,y= "Percent" )+
facet_wrap (~year, ncol = 2)+
theme (legend.position = "top" )
This plot has a few cosmetic details and adjustments that we
w i l ll e a r nm o r ea b o u ti nc h a p t e r8 .A sb e f o r e ,Ie n c o u r a g ey o ut opeelbacktheplotfromthebottom,oneinstructionatatime,toseew h a tc h a n g e s .O n eu s e f u la d j u s t m e n tt on o t i c ei st h en e wc a l lt o
the
scaleslibrary to adjust the labels on the x-axis. The adjust-
ment on the y-axis is familiar, scales::percent to convert the
proportion to a percentage. On the x-axis, the issue is that sev-eralofthelabelsareratherlong.Ifwedonotadjustthemtheywill
printoveroneanother.The
scales::wrap_format() functionwill
break long labels into lines. It takes a single numerical argument(here
10) that is the maximum length a string can be before it is
wrappedontoanewline.


------------------------


168 •Chapter 6
A graph like this is true to the categorical nature of the data,
whileshowingthebreakdownofgroupswithineachyear.Butyou
shouldexperimentwithsomealternatives.Forexample,wemight
decidethatitisbettertofacetbydegreecategoryinstead,andput
the year on the x-axis within each panel. If we do that, then we
can use geom_line() to show a time trend, which is more natu-
ral, and geom_ribbon() to show the error range. This is perhaps
a better way to show the data, especially as it brings out the time
trends within each degree category and allows us to see the sim-
ilarities and differences by racial classification at the same time
(fig.6.13).
p←ggplot (data = subset (out_grp, race %nin% "Other" ),
mapping = aes(x= year, y= prop, ymin = prop -2*prop_se,
ymax = prop +2*prop_se, ﬁll = race, color = race,
group = race))
p+geom_ribbon (alpha = 0.3,aes(color = NULL ))+
geom_line ()+
facet_wrap (~degree, ncol = 1)+
scale_y_continuous (labels = scales ::percent) +
scale_color_brewer (type = "qual" ,palette = "Dark2" )+
scale_ﬁll_brewer (type = "qual" ,palette = "Dark2" )+
labs (title = "Educational Attainment by Race" ,
subtitle = "GSS 1976-2016" ,ﬁll = "Race" ,
color = "Race" ,x= NULL ,y= "Percent" )+
theme (legend.position = "top" )Race
Lt high school
High school
Junior college
Bachelor
Graduate60%
40%
20%
0%
60%
40%
20%
0%
60%
40%
20%
0%
60%
40%
20%
0%
60%
40%
20%
0%
1980 1990 2000 2010PercentGSS 1976-2016Educational attainment by race
White Black
Figure 6.13: Faceting by education instead.6.9 Where to Go Next
Ingeneral,whenyouestimatemodelsandwanttoplottheresults,
the difficult step is not the plotting but rather calculating and
extracting the right numbers. Generating predicted values and
measures of confidence or uncertainty from models requires that
youunderstandthemodelyouarefittingandthefunctionyouuse
tofitit,especiallywhenitinvolvesinteractions,cross-leveleffects,
ortransformationsofthepredictororresponsescales.Thedetails
can vary substantially from model type to model type, and also
with the goals of any particular analysis. It is unwise to approach


------------------------


Work with Models •169
them mechanically. That said, several tools exist to help you
work with model objects and produce a default set of plots from
them.
Default plots for models
Just as model objects in R usually have a default summary()
method, printing out an overview tailored to the type of model
it is, they will usually have a default plot()method, too. Figures
produced by plot()are typically not generated via ggplot, but it
isusuallyworthexploringthem.Theytypicallymakeuseofeither
R ’ sb a s eg r a p h i c so rt h e latticelibrary (Sarkar 2008). These are
twoplottingsystemsnotcoveredinthisbook.Defaultplotmeth-
odsareeasytoexamine.Let’stakealookagainatoursimpleOLS
model.
out←lm(formula = lifeExp ~log(gdpPercap) +pop +continent,
data = gapminder)
To look at some of R’s default plots for this model, use the
plot()function.
# Plot not shown
plot (out, which = c(1,2),ask = FALSE )
Thewhich()statementhereselectsthefirsttwooffourdefault
plots for this kind of model. If you want to easily reproduce base
R’sdefaultmodelgraphicsusingggplot,the ggfortify packageis
worth examining. It is similar to broomin that it tidies the out-
p u to fm o d e lo b j e c t s ,b u ti tf o c u s e so np r o d u c i n gas t a n d a r dp l o t
( o rg r o u po fp l o t s )f o raw i d ev a r i e t yo fm o d e lt y p e s .I td o e st h i s
by defining a function called autoplot() .T h ei d e ai st ob ea b l e
to use autoplot() w i t ht h eo u t p u to fm a n yd i ff e r e n tk i n d so f
model.Continent Europe
Continent Oceania
Continent Americas
Continent AsiaLog (gdp percap)
Log (pop)
03 6
Value9CoefficientCoefficient plot
Figure 6.14: Ap l o tf r o mc o e f p l o t .As e c o n do p t i o nw o r t hl o o k i n ga ti st h e coefplot package.
It provides a quick way to produce good-quality plots of point
estimates and confidence intervals (fig. 6.14). It has the advan-
tage of managing the estimation of interaction effects and other
occasionallytrickycalculations.


------------------------


170 •Chapter 6
library (coefplot)
out←lm(formula = lifeExp ~log(gdpPercap) +log(pop) +continent,
data = gapminder)
coefplot (out, sort = "magnitude" ,intercept = FALSE )
Tools in development
T i d y v e r s et o o l sf o rm o d e l i n ga n dm o d e le x p l o r a t i o na r eb e i n g
actively developed. The broomandmarginspackages continue to
getmoreandmoreuseful.Therearealsootherprojectsworthpay-ing attention to. The
inferp a c k a g ei si ni t se a r l ys t a g e sb u tc a n infer.netlify.com
alreadydousefulthingsinapipeline-friendlyway .Y oucaninstall
itfromCRANwith install.packages("infer") .
Extensions to ggplot
TheGGallypackageprovidesasuiteoffunctionsdesignedtomake
producingstandardbutsomewhatcomplexplotsalittleeasier.For
instance, it can produce generalized pairs plots, a useful way of
quicklyexaminingpossiblerelationshipsbetweenseveraldifferentvariablesatonce.Thissortofplotislikethevisualversionofacor-r e l a t i o nm a t r i x .I ts h o w sab i v a r i a t ep l o tf o ra l lp a i r so fv a r i a b l e s
in the data. This is relatively straightforward when all the vari-
ables are continuous measures. Things get more complex when,asisoftenthecaseinthesocialsciences, someorallvariablesarecategorical or otherwise limited in the range of values they can
take.Ageneralizedpairsplotcanhandlethesecases.Forexample,
figure 6.15 shows a generalized pairs plot for five variables fromthe
organdata dataset.
library (GGally)
organdata_sm ←organdata %>% select (donors, pop_dens, pubhealth,
roads, consent_law)
ggpairs (data = organdata_sm, mapping = aes(color = consent_law),
upper = list (continuous = wrap ("density" ),combo = "box_no_facet" ),
lower = list (continuous = wrap ("points" ),combo = wrap ("dot_no_facet" )))


------------------------


0.15
0.10
0.05
0.00
40
30
20
10
0
9
8
7
6
5
200
100
150
Informed
Presumed
10 20 30 10 20 40 5 6 50 100 150 200
789
30
0
50
Informed Presumed
Consent_law Roads Pubhealth Pop_dens Donors
Consent_law
Roads
Pubhealth
Pop_dens
Donors
Figure 6.15:
A generalized pairs plot made using the GGally library.


------------------------


172 •Chapter 6
Multipanelplotslikethoseinfigure6.15areintrinsicallyvery
rich in information. When combined with several within-panel
types of representation, or any more than a modest number of
variables, they can become quite complex. They should be usedsparingly for the presentation of finished work. More often theya r eau s e f u lt o o lf o rar e s e a r c h e rt oq u i c k l yi n v e s t i g a t ea s p e c t so f
adataset. Thegoalisnottopithilysummarizeasinglepointone
alreadyknowsbuttoopenthingsupforfurtherexploration.


------------------------


7 Draw Maps
Choropleth maps show geographical regions colored, shaded, or
graded according to some variable. They are visually striking,especially when the spatial units of the map are familiar enti-
ties, like the countries of the European Union, or states in the
United States. But maps like this can also sometimes be mis-leading. AlthoughitisnotadedicatedGeographicalInformation
S ys t e m(GIS ),Rca nw o r kwi thg eo gr a p hicalda ta,a n dggp l o tca n
makechoroplethmaps.Butwe’llalsoconsidersomeotherwaysofrepresentingdataofthiskind.
Figure7.1showsaseriesofmapsoftheU .S.presidentialelec-
tion results in 2016. Reading from the top left, we see, first, a
state-levelmapwherethemarginofvictorycanbehigh(adarkerblue or red) or low (a lighter blue or red). The color scheme hasno midpoint. Second, we see a county-level map colored bright
redorbluedependingonthewinner.Thirdisacounty-levelmap
w h e r et h ec o l o ro fr e da n db l u ec o u n t i e si sg r a d e db yt h es i z eo ft h ev o t es h a r e .A g a i n ,t h ec o l o rs c a l eh a sn om i d p o i n t .F o u r t hi sa county-level map with a continuous color gradient from blue to
red,butthatpassesthroughapurplemidpointforareaswherethe
b a l a n c eo ft h ev o t ei sc l o s et oe v e n .T h em a pi nt h eb o t t o ml e fthasthesameblue-purple-redschemebutdistortsthegeographicalboundariesbysqueezingorinflatingthemtoreflectthepopulation
of the county shown. Finally in the bottom right we see a carto-
gram, where states are drawn using square tiles, and the numberof tiles each state gets is proportional to the number of electoralcollege votes it has (which in turn is proportional to that state’s
population).
Each of these maps shows data for the same event, but the
impressions they convey are very different. Each faces two mainproblems. First, the underlying quantities of interest are only
partly spatial. The number of electoral college votes won and the
share of votes cast within a state or county are expressed in spa-tial terms, but ultimately it is the number of people within thoser e g i o n st h a tm a t t e r .S e c o n d ,t h er e g i o n st h e m s e l v e sa r eo fw i l d l y


------------------------


Figure 7.1:
2016 U.S. election results maps of different kinds. Maps by Ali Zifan (panels 1–4, 6) and Mark Newman (panel 5).


------------------------


Draw Maps •175
differing sizes, and they differ in a way that is not well correlated
withthemagnitudesoftheunderlyingvotes.Themapmakersalso
facechoicesthatwouldariseinmanyotherrepresentationsofthe
data.Dowewanttojustshowwhowoneachstateinabsoluteterms(this is all that matters for the actual result, in the end) or do wewant to indicate how close the race was? Do we want to display
the results at some finer level of resolution than is relevant to the
outcome, such as county rather than state counts? How can weconvey that different data points can carry very different weights
becausetheyrepresentvastlylargerorsmallernumbersofpeople?
Itistrickyenoughtoconveythesechoiceshonestlywithdifferentcolorsandshapesizesonasimplescatterplot. Oftenamapislikea weird grid that you are forced to conform to even though you
knowitsystematicallymisrepresentswhatyouwanttoshow.
This is not always the case, of course. Sometimes our data
reallyispurelyspatial,andwecanobserveitatafineenoughlevelofdetailthatwecanrepresentspatialdistributionshonestlyandin
a compelling way. But the spatial features of much social science
are collected through entities such as precincts, neighborhoods,metro areas, census tracts, counties, states, and nations. Thesemaythemselvesbesociallycontingent.Agreatdealofcartographic
work with social-scientific variables involves working both with
andagainstthatarbitrariness.GeographerscallthistheModifiableArealUnitProblem,orMAUP(Openshaw1983).
7.1 Map U.S. State-Level Data
Let’s take a look at some data for the U.S. presidential election in
2016andseehowwemightplotitinR.The election datasethas
variousmeasuresofthevoteandvotesharesbystate.Herewepicksomecolumnsandsampleafewrowsatrandom.
election %>% select (state, total_vote,
r_points, pct_trump, party, census) %>%
sample_n (5)
## # A tibble: 5 x 6
## state total_vote r_points pct_trump party census## <chr> <dbl> <dbl> <dbl> <chr> <chr>## 1 Kentucky 1924149. 29.8 62.5 Republican South


------------------------


176 •Chapter 7
## 2 Vermont 315067. -26.4 30.3 Democrat Northeast
## 3 South Carolina 2103027. 14.3 54.9 Republican South
## 4 Wyoming 255849. 46.3 68.2 Republican West
## 5 Kansas 1194755. 20.4 56.2 Republican Midwest
North DakotaMidwest
Northeast
South
West
Point marginSouth Dakota
Nebraska
Kansas
Indiana
Missouri
Iowa
Ohio
Wisconsin
Michigan
Minnesota
Illinois
Pennsylvania
New Hampshire
Maine
Connecticut
New Jersey
Rhode Island
New York
Vermont
Massachusetts
West Virginia
Oklahoma
kentucky
Alabama
Arkansas
Tennessee
Louisiana
Mississippi
South Carolina
Texas
Georgia
North Carolina
Florida
Virginia
Delaware
Maryland
Wyoming
Idaho
Montana
Utah
Alaska
Arizona
Nevada
Colorado
New Mexico
Oregon
Washington
California
Hawaii
30 30 40
(Trump) (Clinton)20 20 10 0 10
Figure 7.2: 2016 election results. Would a two-color
choropleth map be more informative than this, or
less?The FIPS code is a federal code that numbers states and ter-
ritoriesoftheUnitedStates.Itextendstothecountylevelwithan
additional four digits, so every U.S. county has a unique six-digit
identifier,wherethefirsttwodigitsrepresentthestate.Thisdataset
alsocontainsthecensusregionofeachstate.
# Hex color codes for Dem Blue and Rep Red
party_colors ←c("#2E74C0" ,"#CB454A" )
p0←ggplot (data = subset (election, st %nin% "DC" ),
mapping = aes(x= r_points,
y= reorder (state, r_points),
color = party))
p1←p0+geom_vline (xintercept = 0,color = "gray30" )+
geom_point (size = 2)
p2←p1+scale_color_manual (values = party_colors)
p3←p2+scale_x_continuous (breaks = c(-30,-20,-10,0,10,20,30,40),
labels = c("30\n (Clinton)" ,"20" ,"10" ,"0",
"10" ,"20" ,"30" ,"40\n(Trump)" ))
p3+facet_wrap (~census, ncol= 1,scales= "free_y" )+
guides (color= FALSE )+labs (x= "Point Margin" ,y= "")+
theme (axis.text= element_text (size= 8))
Thefirstthingyoushouldrememberaboutspatialdataisthat
you don’t have to represent it spatially. We’ve been working with
country-level data throughout and have yet to make a map of it.
Of course, spatial representations can be very useful, and some-
times absolutely necesssary. But we can start with a state-level
dotplot, faceted by region (fig. 7.2). This figure brings together
m a n ya s p e c t so fp l o tc o n s t r u c t i o nt h a tw eh a v ew o r k e do ns o
far, including subsetting data, reordering results by a second
variable, and using a scale formatter. It also introduces some
new options, like manually setting the color of an aesthetic. We


------------------------


Draw Maps •177
break up the construction process into several steps by creating
intermediate objects ( p0,p1,p2) along the way. This makes the
code more readable. Bear in mind also that, as always, you can
try plotting each of these intermediate objects as well (just type
their name at the console and hit return) to see what they look
like. What happens if you remove the scales="free_y" argu-
ment to facet_wrap() ?W h a th a p p e n si fy o ud e l e t et h ec a l lt o
scale_color_manual() ?
Asalways,thefirsttaskindrawingamapistogetadataframe
with the right information in it, and in the right order. First we
load R’s mapspackage, which provides us with some predrawn
mapdata.
library (maps)
us_states ←map_data ("state" )
head (us_states)
## long lat group order region subregion
## 1 -87.4620 30.3897 1 1 alabama <NA>
## 2 -87.4849 30.3725 1 2 alabama <NA>
## 3 -87.5250 30.3725 1 3 alabama <NA>
## 4 -87.5308 30.3324 1 4 alabama <NA>
## 5 -87.5709 30.3267 1 5 alabama <NA>
## 6 -87.5881 30.3267 1 6 alabama <NA>
dim(us_states)
## [1] 15537 6
This just a data frame. It has more than 15,000 rows because
youneedalotoflinestodrawagood-lookingmap.Wecanmakea
blankstatemaprightawaywiththisdata,using geom_polygon() .
p←ggplot (data = us_states, mapping = aes(x= long, y= lat,
group = group))
p+geom_polygon (ﬁll = "white" ,color = "black" )
The map in figure 7.3 is plotted with latitude and longitude
points, which are there as scale elements mapped to the x- and
y-axes. A map is, after all, just a set of lines drawn in the right
orderonagrid.50
45
40
35
30
25
–120 –100 –80
LongLat
Figure 7.3: A first U.S. map.


------------------------


178 •Chapter 7
We can map the ﬁllaestheticto regionandchangethe color
mappingtoalightgrayandthinthelinestomakethestateborders
alittlenicer(fig.7.4).We’llalsotellRnottoplotalegend.
p←ggplot (data = us_states, aes(x= long, y= lat, group = group,
ﬁll = region))
p+geom_polygon (color = "gray90" ,size = 0.1)+guides (ﬁll = FALSE )
Next,let’sdealwiththeprojection.Bydefaultthemapisplot-
ted using the venerable Mercator projection. It doesn’t look that
good.AssumingwearenotplanningonsailingacrosstheAtlantic,
the practical virtues of this projection are not much use to us,
either. If you glance again at the maps in figure 7.1, you’ll notice
theylooknicer.ThisisbecausetheyareusinganAlbersprojection.
(Look, for example, at the way that the U.S.-Canadianborder is a
littlecurvedalongthe49thparallelfromWashingtonstatetoMin-
nesota,ratherthanastraightline.)Techniquesformapprojection
areafascinatingworldoftheirown,butfornowjustrememberwe
cantransformthedefaultprojectionusedby geom_polygon() via
thecoord_map() function.Rememberthatwesaidthatprojection
ontoacoordinatesystemisanecessarypartoftheplottingprocess
foranydata.Normallyitisleftimplicit.Wehavenotusuallyhadto
specifya coord_functionbecausemostofthetimewehavedrawn
our plots on a simple Cartesian plane. Maps are more complex.
Ourlocationsandbordersaredefinedonamoreorlessspherical
object, which means we must have a method for transforming or
projectingourpointsandlinesfromaroundtoaflatsurface.The
manywaysofdoingthisgiveusamenuofcartographicoptions.50
45
40
35
30
25
–120 –100 –80
LongLat
Figure 7.4: Coloring the states.
50
45
40
35
30
25
–120 –100 –80
LongLat
Figure 7.5: Improving the projection.T h eA l be r sp r o j e ct i o nr e q u i r e st w ol a t i t u d ep a r a m e t e r s , lat0
andlat1.W eg i v et h e mt h e i rc o n v e n t i o n a lv a l u e sf o raU . S .m a p
here(fig.7.5).(Trymessingaroundwiththeirvaluesandseewhat
happenswhenyouredrawthemap .)
p←ggplot (data = us_states,
mapping = aes(x= long, y= lat,
group = group, ﬁll = region))
p+geom_polygon (color = "gray90" ,size = 0.1)+
coord_map (projection = "albers" ,lat0 = 39,lat1 = 45)+
guides (ﬁll = FALSE )


------------------------


Draw Maps •179
N o ww en e e dt og e to u ro w nd a t ao n t ot h em a p .R e m e m -
ber, underneath that map is just a big data frame specifying a
l a r g en u m b e ro fl i n e st h a tn e e dt ob ed r a w n .W eh a v et om e r g e
our data with that data frame. Somewhat annoyingly, in the mapdata the state names (in a variable named
region)a r ei nl o w e r -
c a s e .W ec a nc r e a t eav a r i a b l ei no u ro w nd a t af r a m et oc o r r e -
spondtothis, usingthe tolower() functiontoconvertthe state
names. We then use left_join to merge, but you could also
usemerge(..., sort = FALSE) . This merge step is important!
You need to take care that the values of the key variables you
are matching on really do exactly correspond to one another. Ifthey do not, missing values (
NAcodes) will be introduced into
your merge, and the lines on your map will not join up. This
will result in a weirdly “sharded” appearance to your map when
R tries to fill the polygons. Here, the regionvariable is the only
c o l u m nw i t ht h es a m en a m ei nb o t ht h ed a t as e t sw ea r ej o i n -i n g ,a n ds ot h e
left_join() function uses it by default. If the
k ey sh a v ed i ff e r e n tn a m e si nea c hd a tase t ,y o uc a ns pec i fyth a ti f
needed.
To reiterate, it is important to know your data and variables
well enough to check that they have merged properly. Do not
do it blindly. For example, if rows corresponding to Washing-
ton, DC, were named “washington dc” in the regionvariable
of your election data frame but “district of columbia” in the
corresponding regionvariable of your map data, then merg-
ing on regionw o u l dm e a nn or o w si nt h e election data frame
would match “washington dc” in the map data, and the result-ing merged variables for those rows would all be coded as miss-ing. Maps that look broken when you draw them are usually
caused by merge errors. But errors can also be subtle. For exam-
ple, perhaps one of your state names inadvertently has a leading( o r ,w o r s e ,at r a i l i n g )s p a c ea sar e s u l to ft h ed a t ao r i g i n a l l ybeingimportedfromelsewhereandnotfullycleaned.Thatwould
mean, for example, that
california and california are dif-
ferent strings, and the match would fail. In ordinary use youmightnoteasilyseetheextraspace(designatedhereby
). Sobe
careful.
election $region ←tolower (election $state)
us_states_elec ←left_join (us_states, election)


------------------------


180 •Chapter 7
We have now merged the data. Takea look atthe objectwith
head(us_states_elec) . Now that everything is in one big data
frame,wecanplotitonamap(fig.7.6).
p←ggplot (data = us_states_elec,
aes(x= long, y= lat,
group = group, ﬁll = party))
p+geom_polygon (color = "gray90" ,size = 0.1)+
coord_map (projection = "albers" ,lat0 = 39,lat1 = 45)
To complete the map (fig. 7.7), we will use our party colors
forthefill,movethelegendtothebottom,andaddatitle.Finally
we will remove the grid lines and axis labels, which aren’t really
needed, by defining a special theme for maps that removes most
of the elements we don’t need. (We’ll learn more about themes
in chapter 8. You can also see the code for the map theme in the
appendix.)50
45
40
35
30
25
–120 –100 –80
LongLatParty
Democrat Republican
Figure 7.6: Mapping the results.
Election Results 2016
Democrat
Republican
Figure 7.7: Election 2016 by state.
Trump vote
Percent
60
40
20
Trump vote
Percent
60
40
20
Figure 7.8: Two versions of percent Trump by state.p0←ggplot (data = us_states_elec,
mapping = aes(x= long, y= lat,
group = group, ﬁll = party))
p1←p0+geom_polygon (color = "gray90" ,size = 0.1)+
coord_map (projection = "albers" ,lat0 = 39,lat1 = 45)
p2←p1+scale_ﬁll_manual (values = party_colors) +
labs (title = "Election Results 2016" ,ﬁll = NULL )
p2+theme_map ()
Withthemapdataframeinplace,wecanmapothervariables
if we like. Let’s try a continuous measure, such as the percentage
ofthevotereceivedbyDonaldT rump.T obeginwith,infigure7.8
wejustmapthevariablewewant( pct_trump )tothe ﬁllaesthetic
andseewhat geom_polygon() doesbydefault.
p0←ggplot (data = us_states_elec,
mapping = aes(x= long, y= lat, group = group, ﬁll = pct_trump))
p1←p0+geom_polygon (color = "gray90" ,size = 0.1)+
coord_map (projection = "albers" ,lat0 = 39,lat1 = 45)
p1+labs (title = "Trump vote" )+theme_map ()+labs (ﬁll = "Percent" )


------------------------


Draw Maps •181
p2←p1+scale_ﬁll_gradient (low = "white" ,high = "#CB454A" )+
labs (title = "Trump vote" )
p2+theme_map ()+labs (ﬁll = "Percent" )
Thedefaultcolorusedinthe p1objectisblue.Justforreasons
ofconvention, thatisn’twhatiswantedhere. Inaddition, thegra-dientrunsinthewrongdirection.Inourcase,thestandardinter-pretation is that a higher vote share makes for a darker color. We
fixbothoftheseproblemsinthe
p2objectbyspecifyingthe scale
directly.We’llusethevalueswecreatedearlierin party_colors .
For election results, we might prefer a gradient that diverges
from a midpoint. The scale_gradient2() f u n c t i o ng i v e su sa
blue-red spectrum that passes through white by default. Alterna-tively,wecanrespecifythemidlevelcoloralongwiththehighandlowcolors.Wewillmakepurpleourmidpointandusethe
muted()
functionfromthe scaleslibrarytotonedownthecoloralittle.
p0←ggplot (data = us_states_elec,
mapping = aes(x= long, y= lat, group = group, ﬁll = d_points))
p1←p0+geom_polygon (color = "gray90" ,size = 0.1)+
coord_map (projection = "albers" ,lat0 = 39,lat1 = 45)
p2←p1+scale_ﬁll_gradient2 ()+labs (title = "Winning margins" )
p2+theme_map ()+labs (ﬁll = "Percent" )
p3←p1+scale_ﬁll_gradient2 (low = "red" ,mid = scales ::muted ("purple" ),
high = "blue" ,breaks = c(-25,0,25,50,75))+
labs (title = "Winning margins" )
p3+theme_map ()+labs (ﬁll = "Percent" )
Ifyoulookatthegradientscaleforthisfirst“purpleAmerica”
map, in figure 7.9, you’ll see that it extends very high on the blueside.ThisisbecauseWashington,DC,isincludedinthedataand
hencethescale.Eventhoughitisbarelyvisibleonthemap,DChas
by far the highest points margin in favor of the Democrats of anyunitofobservationinthedata.Ifweomitit,we’llseethatourscaleshiftsinawa ytha tdoesno tj usta ff ecttheto po ftheb l ueendb u t
recentersthewholegradientandmakestheredsidemorevividas
aresult.Figure7.10showstheresult.


------------------------


182 •Chapter 7
p0←ggplot (data = subset (us_states_elec,
region %nin% "district of columbia" ),
aes(x= long, y= lat, group = group, ﬁll = d_points))
p1←p0+geom_polygon (color = "gray90" ,size = 0.1)+
coord_map (projection = "albers" ,lat0 = 39,lat1 = 45)
p2←p1+scale_ﬁll_gradient2 (low = "red" ,
mid = scales ::muted ("purple" ),
high = "blue" )+
labs (title = "Winning margins" )
p2+theme_map ()+labs (ﬁll = "Percent" )
Winning margins
Winning marginsPercent
50
0
Percent
5075
25
–250
Figure 7.9: Two views of Trump vs Clinton share: a
white midpoint and a purple America version.Thisbringsoutthefamiliarchoroplethproblemofhavinggeo-
graphical areas that only partially represent the variable we are
mapping.Inthiscase,we’reshowingvotesspatially,butwhatreally
mattersisthenumberofpeoplewhovotedineachstate.
Winning margins
Percent
25
–250
Figure 7.10: A purple America version of Trump vs
Clinton that excludes results from Washington, DC.7.2 America’s Ur-choropleths
In the U.S. case, administrative areas vary widely in geographical
area and also in population size. The modifiable areal unit prob-
lem evident at the state level, as we have seen, also arises even
more at the county level. County-level U.S. maps can be aestheti-
callypleasingbecauseoftheaddeddetailtheybringtoanational
map.Buttheyalsomakeiteasytopresentageographicaldistribu-
tiontoinsinuateanexplanation.Theresultscanbetrickytowork
with.Whenproducingcountymaps,itisimportanttoremember
that the states of New Hampshire, Rhode Island, Massachussetts,
and Connecticutare all smaller in area than anyof the ten largest
Westerncounties. Many of those counties have fewer than a hun-
dred thousand people living in them. Some have fewer than ten
thousandinhabitants.
The result is that most choropleth maps of the United States
forwhatevervariableineffectshowpopulationdensitymorethan
anything else. The other big variable, in the U.S. case, is percent
black. Let’s see how to draw these two maps in R. The proce-
dure is essentially the same as it was for the state-level map. We
needtwodataframes,onecontainingthemapdata,andtheother
containing the fill variables we want plotted. Because there are
morethanthreethousandcountiesintheUnitedStates,thesetwo


------------------------


Draw Maps •183
dataframeswillberatherlargerthantheywereforthestate-level
maps.
The datasets are included in the socvizlibrary. The county
map data frame has already been processed a little in order tot r a n s f o r mi tt oa nA l b e r sp r o j e c t i o n ,a n da l s ot or e l o c a t e( a n drescale)AlaskaandHawaiisothattheyfitintoanareainthebot-
tomleftofthefigure.Thisisbetterthanthrowingawaytwostates
f r o mt h ed a t a .T h es t e p sf o rt h i st r a n s f o r m a t i o na n dr e l o c a t i o na r en o ts h o w nh e r e .I fy o uw a n tt os e eh o wi t ’ sd o n e ,c o n s u l tt h e
appendixfordetails.Let’stakealookatourcountymapdatafirst:
county_map %>% sample_n (5)
## long lat order hole piece group id
## 116977 -286097 -1302531 116977 FALSE 1 0500000US35025.1 35025
## 175994 1657614 -698592 175994 FALSE 1 0500000US51197.1 51197## 186409 674547 -65321 186409 FALSE 1 0500000US55011.1 55011## 22624 619876 -1093164 22624 FALSE 1 0500000US05105.1 05105
## 5906 -1983421 -2424955 5906 FALSE 10 0500000US02016.10 02016
I tl o o k st h es a m ea so u rs t a t em a pd a t af r a m e ,b u ti ti sm u c h
larger, running to almost 200,000 rows. The idfield is the FIPS
codeforthecounty.Next,wehaveadataframewithcounty-level
demographic,geographic,andelectiondata:
county_data %>%
select (id, name, state, pop_dens, pct_black) %>%
sample_n (5)
## id name state pop_dens pct_black
## 3029 53051 Pend Oreille County WA [ 0, 10) [ 0.0, 2.0)
## 1851 35041 Roosevelt County NM [ 0, 10) [ 2.0, 5.0)
## 1593 29165 Platte County MO [ 100, 500) [ 5.0,10.0)## 2363 45009 Bamberg County SC [ 10, 50) [50.0,85.3]## 654 17087 Johnson County IL [ 10, 50) [ 5.0,10.0)
This data frame includes information for entities besides
counties, thoughnotforallvariables. Ifyoulookatthetopoftheobject with
head() ,you’llnoticethatthefirstrowhasan idof0.
ZeroistheFIPScodefortheentireUnitedStates,andthusthedata
inthisrowareforthewholecountry.Similarly,thesecondrowhas
anidof01000, whichcorrespondstothestateFIPSof01, forthe
w h o l eo fA l a b a m a .A sw em e r g e county_data in to county_map ,


------------------------


184
•
Chapter 7
Figure 7.11:
U.S. population density by county.
Population
aquare mile
0–10 10–50 50–100 100–500 500–1,000 1,000–5,000 >5,000
these state rows will be dropped, along with the national row, as
county_map
onlyhascounty-leveldata.
WemergethedataframesusingthesharedFIPS
id
column:
county_full
←
left_join
(county_map, county_data,
by =
"id"
)
Withthedatamerged,wecanmapthepopulationdensityper
squaremile(fig.7.11).
p
←
ggplot
(
data =
county_full,
mapping =
aes
(
x=
long,
y=
lat,
ﬁll =
pop_dens,
group =
group))
p1
←
p
+
geom_polygon
(
color =
"gray90"
,
size =
0.05
)
+
coord_equal
()
p2
←
p1
+
scale_ﬁll_brewer
(
palette=
"Blues"
,
labels =
c
(
"0-10"
,
"10-50"
,
"50-100"
,
"100-500"
,
"500-1,000"
,
"1,000-5,000"
,
">5,000"
))
p2
+
labs
(
ﬁll =
"Population per\nsquare mile"
)
+
theme_map
()
+
guides
(
ﬁll =
guide_legend
(
nrow =
1
))
+
theme
(
legend.position =
"bottom"
)


------------------------


Draw Maps
•
185
If you try out the
p1
object, you will see that ggplot produces
a legible map, but by default it chooses an unordered categorical
l a y o u t .T h i si sb e c a u s et h e
pop_dens
variable is not ordered.
W ec o u l dr e c o d ei ts ot h a tRi sa w a r eo ft h eo r d e r i n g .A l t e r n a -
tively, we can manually supply the right sort of scale using the
scale_ﬁll_brewer()
function,togetherwithanicersetoflabels.
W ew i l ll e a r nm o r ea b o u tt h i ss c a l ef u n c t i o ni nt h en e x tc h a p t e r .
Wealsotweakhowthelegendisdrawnusingthe
guides()
func-
tion to make sure each element of the key appears on the same
row. Again, wewillseethisuseof
guides()
in more detail in the
nextchapter. Theuseof
coord_equal()
makessurethattherela-
tive scale of our map does not change even if we alter the overall
dimensionsoftheplot.
Wecannowdoexactlythesamethingforourmapofpercent
black population by county (fig. 7.12). Once again, we specify a
paletteforthe
ﬁll
mappingusing
scale_ﬁll_brewer()
,thistime
choosingadifferentrangeofhuesforthemap .
p
←
ggplot
(
data =
county_full,
mapping =
aes
(
x=
long,
y=
lat,
ﬁll =
pct_black,
group =
group))
p1
←
p
+
geom_polygon
(
color =
"gray90"
,
size =
0.05
)
+
coord_equal
()
p2
←
p1
+
scale_ﬁll_brewer
(
palette=
"Greens"
)
US population, percent black (0.0, 2.0) (2.0, 5.0) (5.0, 10.0) (10.0, 15.0) (15.0, 25.0) (25.0, 50.0) (50.0, 85.3)
Figure 7.12:
Percent black population by county.


------------------------


186
•
Chapter 7
Gun-related suicides, 1999–2015
Rate per 100,000 pop.
(10,12)
(12,54)
(8,10)
(7,8)
(4,7)
(0,4)
Reverse-coded population density
People per square mile
(82,215)
(215,1672)
(45,82)
(25,45)
(9,25)
(0,9)
Figure 7.13:
Gun-related suicides by county; reverse-coded population density by county. Before tweeting this picture, please read the text for
discussion of what is wrong with it.
p2
+
labs
(
ﬁll =
"US Population, Percent Black"
)
+
guides
(
ﬁll =
guide_legend
(
nrow =
1
))
+
theme_map
()
+
theme
(
legend.position =
"bottom"
)
Figures7.11and7.12areAmerica’s“ur-choropleths.”Between
the two of them, population density and percent black will do a
lot to obliterate many a suggestively patterned map of the United
States. These two variables aren’t
explanations
of anything in iso-
lation,butifitturnsoutthatitismoreusefultoknowoneorboth
oftheminsteadofthethingyou’replotting,youprobablywantto
reconsideryourtheory.
As an example of the problem in action, let’s draw two
new county-level choropleths (fig. 7.13). The first is an effort to
replicate a poorly sourced but widely circulated county map of
firearm-related suicide rates in the United States. The
su_gun6
variable in
county_data
(and
county_full
)i sam e a s u r eo f
the rate of all firearm-related suicides between 1999 and 2015.
The rates are binned into six categories. We have a
pop_dens6
variable that divides the population density into six categories,
too.
Wefirstdrawamapwiththe
su_gun6
variable.Wewillmatch
the color palettes between the maps, but for the population map
wewillflipourcolorscalearoundsothatlesspopulatedareasare


------------------------


Draw Maps •187
sho wninadarkershade.W edothisb yusingafunctionfromthe
RColorBrewer library to manually create two palettes. The rev()
functionusedherereversestheorderofavector.
orange_pal ←RColorBrewer ::brewer.pal (n= 6,name = "Oranges" )
orange_pal
## [1] "#FEEDDE" "#FDD0A2" "#FDAE6B" "#FD8D3C" "#E6550D"
## [6] "#A63603"
orange_rev ←rev(orange_pal)
orange_rev
## [1] "#A63603" "#E6550D" "#FD8D3C" "#FDAE6B" "#FDD0A2"
## [6] "#FEEDDE"
The brewer.pal() function produces evenly spaced color
schemes to order from any one of several named palettes. Thecolors are specified in hexadecimal format. Again, we will learn
moreaboutcolorspecificationsandhowtomanipulatepalettesfor
mappedvariablesinchapter8.
gun_p ←ggplot (data = county_full,
mapping = aes(x= long, y= lat,
ﬁll = su_gun6,
group = group))
gun_p1 ←gun_p +geom_polygon (color = "gray90" ,size = 0.05 )+coord_equal ()
gun_p2 ←gun_p1 +scale_ﬁll_manual (values = orange_pal)
gun_p2 +labs (title = "Gun-Related Suicides, 1999-2015" ,
ﬁll = "Rate per 100,000 pop." )+
theme_map ()+theme (legend.position = "bottom" )
Having drawn the gun plot, we use almost exactly the same
codetodrawthereverse-codedpopulationdensitymap.
pop_p ←ggplot (data = county_full, mapping = aes(x= long, y= lat,
ﬁll = pop_dens6,
group = group))


------------------------


188 •Chapter 7
pop_p1 ←pop_p +geom_polygon (color = "gray90" ,size = 0.05 )+coord_equal ()
pop_p2 ←pop_p1 +scale_ﬁll_manual (values = orange_rev)
pop_p2 +labs (title = "Reverse-coded Population Density" ,
ﬁll = "People per square mile" )+
theme_map ()+theme (legend.position = "bottom" )
I t ’ sc l e a rt h a tt h et w om a p sa r en o ti d e n t i c a l .H o w e v e r ,t h e
visual impact of the first has a lot in common with the second.ThedarkbandsintheWest(exceptforCalifornia)standout,and
they fade as we move toward the center of the country. There are
some strong similarities elsewhere on the map too, such as in theNortheast.
Thegun-relatedsuicidemeasureisalreadyexpressedasarate.
It is the number of qualifying deaths in a county, divided by that
county’spopulation.Normally,westandardizeinthiswayto“con-trolfor”thefactthatlargerpopulationswilltendtoproducemoregun-related suicides just because they have more people in them.
However, this sort of standardization has its limits. In particular,
when the event of interest is not very common, and there is verywidevariationinthebasesizeoftheunits, thenthedenominator
(e.g.,thepopulationsize)startstobeexpressedmoreandmorein
thestandardizedmeasure.
Third, and more subtly, the data is subject to reporting con-
straints connected to population size. If there are fewer than ten
eventsperyearforacauseofdeath,theCentersforDiseaseControl
(CDC)willnotreportthematthecountylevelbecauseitmightbepossibletoidentifyparticulardeceasedindividuals.Assigningdatalike this to bins creates a threshold problem for choropleth maps.
Look again figure 7.13. The gun-related suicides panel seems to
show a north-south band of counties with the lowest rate of sui-cidesrunningfromtheDakotasdownthroughNebraska,Kansas,andintoWestTexas.Oddly,thisbandborderscountiesintheWest
withtheveryhighestrates,fromNewMexicoonup.Butfromthe
density map we can see that many counties in both these regionshave very low population densities. Are they really that differentintheirgun-relatedsuiciderates?
Probably not. More likely, we are seeing an artifact arising
from how the data is coded. For example, imagine a county with


------------------------


Draw Maps •189
100,000 inhabitants that experiences nine gun-related suicides in
ay e a r .T h eC D Cw i l ln o tr e p o r tt h i sn u m b e r .I n s t e a di tw i l lb e
coded as “suppressed,” accompanied by a note saying any stan-
dardized estimates or rates will also be unreliable. But if we ared e t e r m i n e dt om a k eam a pw h e r ea l lt h ec o u n t i e sa r ec o l o r e di n ,we might be tempted to put any suppressed results into the low-
estbin.Afterall,weknowthatthenumberissomewherebetween
z e r oa n dt e n .W h yn o tj u s tc o d ei ta sz e r o ?M e a n w h i l e ,ac o u n t y
Do not do this. One standard alternative is to
estimate the suppressed observations using a countmodel. An approach like this might naturally lead tomore extensive, properly spatial modeling of thedata. with 100,000 inhabitants that experiences twelve gun-related sui-
cidesayear willbenumericallyreported.TheCDCisaresponsible
organization, and so although it provides the absolute number ofdeathsforallcountiesabovethethreshold,thenotestothedatafilewillstillwarnyouthatanyratecalculatedwiththisnumberwillbe
unreliable. If we do it anyway, then twelve deaths in a small pop-
ulation might well put a sparsely populated county in the highestcategoryofsuiciderate.Meanwhile,alow-populationcountyjustunderthatthresholdwouldbecodedasbeinginthelowest(light-
est) bin. But in reality they might not be so different, and in any
case efforts to quantify that difference will be unreliable. If esti-matesforthesecountiescannotbeobtaineddirectlyorestimatedwith a good model, then it is better to drop those cases as miss-
i n g ,e v e na tt h ec o s to fy o u rb e a u t i f u lm a p ,t h a nh a v el a r g ea r e a s
of the country painted with a color derived from an unreliablenumber.
Smalldifferencesinreporting,combinedwithcoarsebinning
and miscoding, will produce spatially misleading and substan-
tively mistaken results. It might seem that focusing on the detailsof variable coding in this particular case is a little too muchin the weeds for a general introduction. But it is exactly these
details that can dramatically alter the appearance of any graph,
and especially maps, in a way that can be hard to detect afterthefact.
7.3 Statebins
Asanalternativetostate-levelchoropleths,wecanconsider state-
bins, using a package developed by Bob Rudis. We will use it
to look again at our state-level election results. Statebins is sim-ilar to ggplot but has a slightly different syntax from the onewe’re used to. It needs several arguments, including the basic


------------------------


190 •Chapter 7
data frame (the state_data argument), a vector of state names
(state_col ),andthevaluebeingshown( value_col ).Inaddition,
we can optionally tell it the color palette we want to use and the
color of the text to label the state boxes. For a continuous vari-
able we can use statebins_continuous() , as follows, to make
figure7.14:
Percent Trump
20
WA ID IL ND MT MN MI MAVT NHME
NY
OR NV IN SD WY IA OH PA NJ CT
CA UT KY NE CO MO WM VA MD
AZ TN KS NM AR NC SC
MS OK
TXAK
HILA AL GADC
FLDERIWI40 60
Percent Clinton
30
WA ID IL ND MT MN MI MAVT NHME
NY
OR NV IN SD WY IA OH PA NJ CT
CA UT KY NE CO MO WM VA MD
AZ TN KS NM AR NC SC
MS OK
TXAK
HILA AL GA
FLDERIWI40 60 50
Figure 7.14: Statebins of the election results. We
omit DC from the Clinton map to prevent the scale
becoming unbalanced.library (statebins)
statebins_continuous (state_data = election, state_col = "state" ,
text_color = "white" ,value_col = "pct_trump" ,
brewer_pal= "Reds" ,font_size = 3,
legend_title= "Percent Trump" )
statebins_continuous (state_data = subset (election, st %nin% "DC" ),
state_col = "state" ,
text_color = "black" ,value_col = "pct_clinton" ,
brewer_pal= "Blues" ,font_size = 3,
legend_title= "Percent Clinton" )
Sometimeswewillwanttopresentcategoricaldata.Ifourvari-
ableisalreadycutintocategorieswecanuse statebins_manual()
to represent it. Here we add a new variable to the election data
called color, just mirroring party names with two appropriate
colornames.Wedothisbecauseweneedtospecifythecolorswe
are using by way of a variable in the data frame, not as a proper
mapping. We tell the statebins_manual() function that the col-
orsarecontainedinacolumnnamed coloranduseitforthefirst
mapinfigure7.15.WA ID IL ND MT MN MI MAVT NH
Winner
Trump
Clinton
Percent Trump 4–21 21–37 37–53 53–70ME
NY
OR NV IN SD WY IA OH PA NJ CT
VA MD CA UT KY NE CO MO WV
AZ TN KS NM AR NC SC
MS OK
TXAK
HILA AL GADC
FLDERIWI
WA ID IL ND MT MN MI MAVT NHME
NY
OR NV IN SD WY IA OH PA NJ CT
CA UT KY NE CO MO WV VA MD
AZ TN KS NM AR NC SC
MS OK
TXAK
HILA AL GADC
FLDERIWI
Figure 7.15: Manually specifying colors for statebins.Alternatively,wecanhave statebins() cutthedatausingthe
breaksargument,asinthesecondplotinfigure7.15.
election ←election %>% mutate (color = recode (party, Republican = "darkred" ,
Democrat = "royalblue" ))
statebins_manual (state_data = election, state_col = "st" ,
color_col = "color" ,text_color = "white" ,
font_size = 3,legend_title= "Winner" ,
labels= c("Trump" ,"Clinton" ),legend_position = "right" )


------------------------


Draw Maps •191
statebins (state_data = election,
state_col = "state" ,value_col = "pct_trump" ,
text_color = "white" ,breaks = 4,
labels = c("4-21" ,"21-37" ,"37-53" ,"53-70" ),
brewer_pal= "Reds" ,font_size = 3,legend_title= "Percent Trump" )
7.4 Small-Multiple Maps
Sometimeswehavegeographicaldatawithrepeatedobservations
overtime.Acommoncaseistohaveacountry-orstate-levelmea-
sure observed over a period of years. In these cases, we might
want to make a small-multiple map to show changes over time.For example, the
opiatesdata has state-level measures of the
death rate from opiate-related causes (such as heroin or fentanyl
overdoses)between1999and2014.
opiates
## # A tibble: 800 x 11
## year state ﬁps deaths population crude adjusted## <int> <chr> <int> <int> <int> <dbl> <dbl>
## 1 1999 Alabama 1 37 4430141 0.800 0.800
## 2 1999 Alaska 2 27 624779 4.30 4.00## 3 1999 Arizona 4 229 5023823 4.60 4.70## 4 1999 Arkansas 5 28 2651860 1.10 1.10
## 5 1999 California 6 1474 33499204 4.40 4.50
## 6 1999 Colorado 8 164 4226018 3.90 3.70## 7 1999 Connecticut 9 151 3386401 4.50 4.40
## 8 1999 Delaware 10 32 774990 4.10 4.10
## 9 1999 District o~ 11 28 570213 4.90 4.90## 10 1999 Florida 12 402 15759421 2.60 2.60## # ... with 790 more rows, and 4 more variables:
## # adjusted_se <dbl>, region <ord>, abbr <chr>,
## # division_name <chr>
As before, we can take our us_states object, the one with
the state-level map details, and merge it with our opiates dataset.As before, we convert the
statevariable in the opiatesdata to
lowercasefirst,tomakethematchworkproperly.


------------------------


192 •Chapter 7
opiates $region ←tolower (opiates $state)
opiates_map ←left_join (us_states, opiates)
Because the opiatesdata includes the yearvariable, we are
n o winaposi tio nt omak eafacet edsmall-m ul ti p lewi tho n ema p
for each year in the data. The following chunk of code is similartothesinglestate-levelmapswehavedrawnsofar.Wespecifythem a pd a t aa su s u a l ,a d d i n g
geom_polygon() and coord_map() to
it,withtheargumentsthosefunctionsneed.Insteadofcuttingour
dataintobins, wewillplotthecontinuousvaluesfortheadjusteddeath rate variable (
adjusted ) directly. To help plot this variable If you want to experiment with cutting the data in to
groups, take a look at the cut_interval() function.effectively, we will use a new scale function from the viridis
library. The viridis colors run in low-to-high sequences and do
a very good job of combining perceptually uniform colors witheasy-to-see,easilycontrastedhuesalongtheirscales.The
viridis
library provides continuous and discrete versions, both in sev-
eral alternatives. Some balanced palettes can be a little washed
out at their lower end, especially, but the viridis palettes avoidthis. In this code, the
_csuffix in the scale_ﬁll_viridis_c()
function signals that it is the scale for continuous data. There is
ascale_ﬁll_viridis_d() equivalentfordiscretedata.
We facet the maps just like any other small-multiple with
facet_wrap() .W eu s et h e theme()function to put the legend
at the bottom and remove the default shaded background from
t h ey e a rl a b e l s .W ew i l ll e a r nm o r ea b o u tt h i su s eo ft h e theme()
functioninchapter8.Thefinalmapisshowninfigure7.16.
library (viridis)
p0←ggplot (data = subset (opiates_map, year >1999 ),
mapping = aes(x= long, y= lat,
group = group,
ﬁll = adjusted))
p1←p0+geom_polygon (color = "gray90" ,size = 0.05 )+
coord_map (projection = "albers" ,lat0 = 39,lat1 = 45)
p2←p1+scale_ﬁll_viridis_c (option = "plasma" )
p2+theme_map ()+facet_wrap (~year, ncol = 3)+


------------------------


Opiate related deaths by state, 2000–2014
2000 2001 2002
2003 2004 2005
2006 2007 2008
2009 2010 2011
2012
Death rate per 100,000 population
10 20 302013 2014
Figure 7.16: A small-multiple map. States in gray recorded too low a number of deaths to reliably calculate a death rate for that year. States in white
reported no data.


------------------------


194 •Chapter 7
theme (legend.position = "bottom" ,
strip.background = element_blank ()) +
labs (ﬁll = "Death rate per 100,000 population " ,
title = "Opiate Related Deaths by State, 2000-2014" )
Isthisagoodwaytovisualizethisdata?Aswediscussedabove, Try revisiting your code for the ur-choropleths, but
use continuous rather than binned measures, as well
as the viridis palette. Instead of pct_black ,u s et h e
black variable. For the population density, divide
popbyland_area . You will need to adjust the
scale_ functions. How do the maps compare to the
binned versions? What happens to the population
density map, and why?choroplethmapsoftheUnitedStatestendtotrackfirstthesizeof
the local population and secondarily the percent of the popula-
tionthatisAfricanAmerican.Thedifferencesinthegeographical
size of states makes spotting changes more difficult again. And it
isquitedifficulttocomparerepeatedlyacrossspatialregions.The
repeatedmeasuresdomeanthatsomecomparisonispossible,and
thestrongtrendsforthisdatamakethingsalittleeasiertosee.In
thiscase,acasualviewermightthink,forexample,thattheopioid
crisis was worst in the desert Southwest in comparison to many
other parts of the country, although it also seems that something
seriousishappeningintheAppalachians.
7.5 Is Your Data Really Spatial?
As we noted at the beginning of the chapter, even if our data is
collected via or grouped into spatial units, it is always worth ask-
ing whether a map is the best way to present it. Much county,
state,andnationaldataisnotproperlyspatial,insofarasitisreally
about individuals (or some other unit of interest) rather than the
geographicaldistributionofthoseunitsperse.Let’stakeourstate-
levelopiatesdataandredrawitasatime-seriesplot.Wewillkeep
thestate-levelfocus(thesearestate-levelrates,afterall)buttryto
makethetrendsmoredirectlyvisible.
W ec o u l dj u s tp l o tt h et r e n d sf o re v e rys t a t e ,a sw ed i da tt h e
very beginning with the gapminder data. But fifty states (as in
fig.7.17)istoomanylinestokeeptrackofatonce.
p←ggplot (data = opiates, mapping = aes(x= year, y= adjusted,
group = state))
p+geom_line (color = "gray70" )30Adjusted20
10
0
2000 2005 2010
Year
Figure 7.17: All the states at once.
Amoreinformativeapproachistotakeadvantageofthegeo-
graphicalstructureofthedatabyusingthecensusregionstogroup
thestates.Imagineafacetedplotshowingstate-leveltrendswithin


------------------------


Draw Maps •195
each region of the country, perhaps with a trend line for each
region.T odothis,wewilltakeadvantageofggplot’ sabilitytolayer
geomsoneontopofanother,usingadifferentdatasetineachcase.
We begin by taking the opiatesdata(removingWashington,DC,
asitisnotastate)andplottingtheadjusteddeathrateovertime.
p0←ggplot (data = drop_na (opiates, division_name),
mapping = aes(x= year, y= adjusted))
p1←p0+geom_line (color = "gray70" ,
mapping = aes(group = state))
The drop_na() function deletes rows that have observations
missingonthespecifiedvariables,inthiscasejust division_name ,
because Washington, DC, is not part of any census division. We
mapthe groupaestheticto stateingeom_line() ,whichgi v esus
al i n ep l o tf o re v e r ys t a t e .W eu s et h e colorargument to set the
linestoalightgray.Nextweaddasmoother:
p2←p1+geom_smooth (mapping = aes(group = division_name),
se = FALSE )
F o rt h i sg e o mw es e tt h e groupaesthetic to division_name .
(Divisionisasmallercensusclas sificationthanregion.)Ifwesetit
tostate,wewouldgetfiftyseparatesmoothersinadditiontoour
fiftytrendlines.Then,usingwhatwelearnedinchapter4,weadd
ageom_text_repel() objectthatputsthelabelforeachstateatthe
endoftheseries.Becausewearelabelinglinesratherthanpoints,we want the state label to appear only at the end of the line. Thetrickistosubsetthedatasothatonlythepointsfromthelastyear
observed are used (andthus labeled). We also mustremember to
remove Washington, DC, again here, as the new
dataargument
supersedestheoriginalonein p0.
p3←p2+geom_text_repel (data = subset (opiates,
year ==max(year) &abbr !="DC" ),
mapping = aes(x= year, y= adjusted, label = abbr),
size = 1.8,segment.color = NA,nudge_x = 30)+
coord_cartesian (c(min(opiates $year),
max(opiates $year)))


------------------------


196 •Chapter 7
Bydefault, geom_text_repel willaddlittlelinesegmentsthat
indicatewhatthelabelsreferto.Butthatisnothelpfulhere,aswe
arealreadydealingwiththeendpointofaline.Soweturnthemoff
withtheargument segment.color = NA .Wealsobumpthelabels
off to the right of the lines a little, using the nudge_xargument,
and use coord_cartesian() to set the axis limits so that there is
enoughroomforthem.
Finally, we facet the results by census division and add our
labels. A useful adjustment is to reorder the panels by the aver-
age death rate. We put a minus in front of adjusted so that the
divisionswiththehighestaverageratesappearinthechartfirst.
p3+labs (x= "",y= "Rate per 100,000 population" ,
title = "State-Level Opiate Death Rates by Census Division, 1999-2014" )+
facet_wrap (~reorder (division_name, -adjusted, na.rm = TRUE ),nrow = 3)
Our new plot (fig. 7.18) brings out much of the overall story
tha tisinthema psb u talsoshiftstheem phasisab i t.I tiseasierto
see more clearly what is happening in some parts of the country.
In particular you can see the climbing numbers in New Hamp-shire, Rhode Island, Massachussetts, and Connecticut. You canmoreeasilyseethestate-leveldifferencesintheWest,forinstance
between Arizona, on the one hand, and New Mexico or Utah on
the other. And as was also visible on the maps, the astonishinglyrapidriseinWestVirginia’sdeathrateisalsoevident. Finally, the
time-series plots are better at conveying the diverging trajecto-
riesofvariousstateswithinregions.Thereismorevarianceattheend of the series than at the beginning, especially in the North-east,Midwest,andSouth,andwhilethiscanbeinferredfromthe
maps,itiseasiertoseeinthetrendplots.
The unit of observation in this graph is still the state-year.
Thegeographicallyboundnatureofthedatanevergoesaway.Thelineswedrawstillrepresentstates. Thusthebasicarbitrarinessof
the representation cannot be made to disappear. In some sense,
an ideal dataset here would be collected at some much morefine-grained level of unit, time, and spatial specificity. Imagineindividual-level data with arbitrarily precise information on per-
sonal characteristics, time, and location of death. In a case like
that, we could then aggregate up to any categorical, spatial, ortemporalunitsweliked.Butdatalikethatisextremelyrare,oftenfor good reasons that range from practicality of collection to the


------------------------


Mountain
30
NM
UT
NV
CO
AZ
MT
IDWYNHWV
MD
DE
SCNC
VA
FL
GA
AK
WA
OR
CAOH
KY
TN
AL
MS
MO
PA
NY
NJOK
AR
LA
TXKS
MN
IAND
SD
NEWI
MI
IL
INRI
MA
CT
ME
VT20
10
0
30
20
10
0
30
20
2000 2005 2010 2000 2005 2010 2000 2005 201010
0Rate per 100,000 populationNew England South Atlantic
Pacific East North Central East South Central
West South Central Middle Atlantic West North CentralState-level opiate death rates by census division, 1999–2014
Figure 7.18: The opiate data as a faceted time-series.


------------------------


198 •Chapter 7
privacyofindividuals.Inpracticeweneedtotakecarenottocom-
mit a kind of fallacy of misplaced concreteness that mistakes the
unit of observation for the thing of real substantive or theoreti-
cal interest. This is a problem for most kinds of social-scientificdata.Buttheirstrikingvisualcharactermakesmapsperhapsmorevulnerabletothisproblemthanotherkindsofvisualization.
7.6 Where to Go Next
In this chapter, we learned how to begin to work with state-leveland county-level data organized by FIPS codes. But this barelyscratches the surface of visualization where spatial features and
distributionsarethemainfocus.Theanalysisandvisualizationof
s p a t i a ld a t ai si t so w nr e s e a r c ha r e a ,w i t hi t so w nr e s e a r c hd i s c i -plines in geography and cartography. Concepts and methods forrepresentingspatialfeaturesarebothwelldevelopedandstandard-
ized. Until recently, most of this functionality was accessible only
throughdedicatedGeographicalInformationSystems.Theirmap-ping and spatial analysis features were not well connected. Or, atleast, they were not conveniently connected to software oriented
totheanalysisoftabulardata.
This is changing fast. Brundson & Comber (2015) provide
an introduction to some of R’s mapping capabilities. Mean-while,recentlythesetoolshavebecomemuchmoreaccessiblevia
the tidyverse. Of particular interest to social scientists is Edzer
r-spatial.github.io/sf/ . Also see news and
updates at r-spatial.org .Pebesma’s ongoing development of the sfpackage, which imple-
mentsthestandardSimpleFeaturesdatamodelforspatialfeaturesinatidyverse-friendlyway.Relatedly,KyleWalkerandBobRudis’s
tigrispackage allows for (sf-library-compatible) access to the github.com/walkerke/tigris
U.S. Census Bureau’s TIGER/Line shapefiles, which allow you tomap data for many different geographical, administrative, andcensus-related subdivisions of the United States, as well as things
like roads and water features. Finally, Kyle Walker’s
tidycensus
package (Walker 2018) makes it much easier to tidily get both walkerke.github.io/tidycensus
substantiveandspatialfeaturedatafrom the U.S.Census and the
AmericanCommunitySurvey.


------------------------


8 Refine Your Plots
S of a rw eh a v em o s t l yu s e dg g p l o t ’ sd e f a u l to u t p u tw h e nm a k -
ing our plots, generally not looking at opportunities to tweak orcustomize things to any great extent. In general, when making
figures during exploratory data analysis, the default settings in
ggplotshouldbeprettygoodtoworkwith.It’sonlywhenwehavesomespecificplotinmindthatthequestionofpolishingtheresults
comesup.Refiningaplotcanmeanseveralthings.Wemightwant
t og e tt h el o o ko fi tj u s tr i g h t ,b a s e do no u ro w nt a s t e sa n do u rsense of what needs to be highlighted. We might want to formati ti naw a yt h a tw i l lm e e tt h ee x p e c t a t i o n so faj o u r n a l ,ac o n f e r -
enceaudience,orthegeneralpublic.Wemightwanttotweakthis
orthatfeatureoftheplotoraddanannotationoradditionaldetailnotcoveredbythedefaultoutput.Orwemightwanttocompletelychangethelookoftheentirething,giventhatallthestructuralele-
ments of the plot are in place. We have the resources in ggplot to
doallthesethings.
Let’s begin by looking at a new dataset,
asasec.T h i si ss o m e
data on membership over time in special-interest sections of the
AmericanSociologicalAssociation.
head (asasec)
## Section Sname
## 1 Aging and the Life Course (018) Aging## 2 Alcohol, Drugs and Tobacco (030) Alcohol/Drugs## 3 Altruism and Social Solidarity (047) Altruism
## 4 Animals and Society (042) Animals
## 5 Asia/Asian America (024) Asia## 6 Body and Embodiment (048) Body## Beginning Revenues Expenses Ending Journal Year Members
## 1 12752 12104 12007 12849 No 2005 598
## 2 11933 1144 400 12677 No 2005 301## 3 1139 1862 1875 1126 No 2005 NA## 4 473 820 1116 177 No 2005 209


------------------------


200 •Chapter 8
## 5 9056 2116 1710 9462 No 2005 365
## 6 3408 1618 1920 3106 No 2005 NA
Inthisdataset,wehavemembershipdataforeachsectionover
a ten-year period, but the data on section reserves and income
(the Beginning and Revenues variables) is for 2015 only. Let’s
look attherelationshipbetween sectionmembershipandsection
revenuesforasingleyear,2014.
p←ggplot (data = subset (asasec, Year ==2014 ),mapping = aes(x= Members,
y= Revenues, label = Sname))
p+geom_point ()+geom_smooth ()
##`geom_smooth() `using method = 'loess 'and formula 'y~x '
Figure 8.1 is our basic scatterplot-and-smoother graph. To
refineit,let’sbeginbyidentifyingsomeoutliers,switchfrom loess
toOLS,andintroduceathirdvariable.ThisgetsustoFigure8.2.
250 500 750 1000 1250
Members20000
10000
0Revenues
Figure 8.1: Back to basics. p←ggplot (data = subset (asasec, Year ==2014 ),mapping = aes(x= Members,
y= Revenues, label = Sname))
p+geom_point (mapping = aes(color = Journal)) +geom_smooth (method = "lm" )
250 500 750 1000 1250
Members20000
10000
0RevenuesNo YesJournal
Figure 8.2: Refining the plot.Nowwecanaddsometextlabels.Atthispointitmakessense
t ou s es o m ei n t e r m e d i a t eo b j e c t st ob u i l dt h i n g su pa sw eg o .W e
won’tshowthemall.Butbynowyoushouldbeabletoseeinyour
mind’seyewhatanobjectlike p1orp2willlooklike.Andofcourse
youshouldtypeoutthecodeandcheckifyouarerightasyougo .
p0←ggplot (data = subset (asasec, Year ==2014 ),mapping = aes(x= Members,
y= Revenues, label = Sname))
p1←p0+geom_smooth (method = "lm" ,se = FALSE ,color = "gray80" )+
geom_point (mapping = aes(color = Journal))
p2←p1+geom_text_repel (data = subset (asasec, Year ==2014 &
Revenues >7000 ),size = 2)
Continuingwiththe p2object,wecanlabeltheaxesandscales.
Wealsoaddatitleandmovethelegendtomakebetteruseofthe
spaceintheplot(fig.8.3).


------------------------


Refine Your Plots •201
250 500 750 1000 1250
MembershipSection has own Journal No Yes
Source: ASA annual report.$20,000
$10,000
$0RevenuesASA sections
2014 calendar year.
Mental healthComm/Urban
Teaching
Aging
MedicalFigure 8.3: Refining the axes.
p3←p2+labs (x="Membership" ,
y="Revenues" ,
color = "Section has own Journal" ,
title = "ASA Sections" ,
subtitle = "2014 Calendar year." ,
caption = "Source: ASA annual report." )
p4←p3+scale_y_continuous (labels = scales ::dollar) +
theme (legend.position = "bottom" )
p4
8.1 Use Color to Your Advantage
You should choose a color palette in the first place based on its
a b i l i t yt oe x p r e s st h ed a t ay o ua r ep l o t t i n g .A nu n o r d e r e dc a t -
egorical variable like “country” or “sex,” for example, requires
distinctcolorsthatwon’tbeeasilyconfusedwithoneanother.An
ordered categorical variable like “level of education,” on the other
hand,requiresagradedcolorschemeofsomekindrunningfrom
less to more or earlier to later. There are other considerations,
t o o .F o re x a m p l e ,i fy o u rv a r i a b l ei so r d e r e d ,i sy o u rs c a l ec e n -
tered on a neutral midpoint with departures to extremes in each
direction, as in a Likert scale? Again, these questions are about


------------------------


202 •Chapter 8
ensuringaccuracyandfidelitywhenmappingavariabletoacolor
scale. Take care to choose a palette that reflects the structure of
your data. For example, do not map sequential scales to cate-
gorical palettes, or use a diverging palette for a variable with no
well-definedmidpoint.
Separate from these mapping issues, there are considerations
aboutwhichcolorsinparticulartochoose.Ingeneral,thedefault
colorpalettesthatggplotmakesavailablearewellchosenfortheir
perceptualpropertiesandaestheticqualities.Wecanalsousecolor
andcolorlayersasdeviceforemphasis,tohighlightparticulardata
points or parts of the plot, perhaps in conjunction with other
features.
We choose color palettes for mappings through one of the
scale_functions for colororﬁll. While it is possible to
v e r yfi n e l yc o n t r o lt h el o o ko fy o u rc o l o rs c h e m e sb yv a r y -
ing the hue, chroma, and luminance of each color you use
viascale_color_hue() orscale_ﬁll_hue() , in general this is
not recommended. Instead you should use the RColorBrewer
package to make a wide range of named color palettes avail-
able to you, and choose from those. Figures 8.4, 8.5, and 8.6
show the available options for sequential, diverging, and qual-
itative variables. When used in conjunction with ggplot, you
access these colors by specifying the scale_color_brewer() or
scale_ﬁll_brewer() functions, depending on the aesthetic you
are mapping. Figure 8.7 shows how to use the named palettes in
thisway.YIOrRd
YIOrBr
YIGnBu
YIGn
Reds
RdPu
Purples
PuRd
PuBuPuBuGn
OrRd
Oranges
Greys
Greens
GnBu
BuPu
BuGn
Blues
Figure 8.4: RColorBrewer’s sequential palettes.
Spectral
RdYIGn
RdYIBu
RdGy
RdBu
PuOr
PRGn
PiYG
BrBG
Figure 8.5: RColorBrewer’s diverging palettes.
Set3
Set2
Set1
Pastel2
Pastel1
Paired
Dark2
Accent
Figure 8.6: RColorBrewer’s qualitative palettes.p←ggplot (data = organdata, mapping = aes(x= roads, y= donors,
color = world))
p+geom_point (size = 2)+scale_color_brewer (palette = "Set2" )+
theme (legend.position = "top" )
p+geom_point (size = 2)+scale_color_brewer (palette = "Pastel2" )+
theme (legend.position = "top" )
p+geom_point (size = 2)+scale_color_brewer (palette = "Dark2" )+
theme (legend.position = "top" )
You can also specify colors manually, via scale_color_
manual() orscale_ﬁll_manual() .T h e s ef u n c t i o n st a k ea value


------------------------


Refine Your Plots •203
argument that can be specified as vector of color names or color
values that R knows about. R knows many color names (like red,
and green,a n d cornﬂowerblue) .T r y demo( 'colors ')for an
overview.Alternatively,colorvaluescanbespecifiedviatheirhex-
adecimalRGBvalue.Thisisawayofencodingcolorvaluesinthe
RGB colorspace, where each channel can take a value from 0 to
255. A color hex value begins with a hash or pound character, #,
followedbythreepairsofhexadecimalor“hex”numbers.Hexval-
uesareinBase16,withthefirstsixlettersofthealphabetstanding
forthenumbers10to15.Thisallowsatwo-characterhexnumber
torangefrom0to255.Youreadthemas #rrggbb,where rristhe
two-digit hex code for the red channel, ggfor the green channel,
and bbfor the blue channel. So #CC55DDtranslates in decimal to
CC= 204 (red), 55=8 5( g r e e n ) ,a n d DD= 221 (blue). It gives a
strongpinkcolor.
Going back to our ASA membership plot, for example, for
figure8.8wecanmanuallyintroduceapalettefromChang(2013)
that’sfriendlytoviewerswhoarecolorblind.
cb_palette ←c("#999999" ,"#E69F00" ,"#56B4E9" ,"#009E73" ,"#F0E442" ,
"#0072B2" ,"#D55E00" ,"#CC79A7" )
p4+scale_color_manual (values = cb_palette)
While we can specify colors manually, this work has already
been done for us. If we are serious about using a safe palette for
color-blindviewers,weshouldinvestigatethe dichromat package
instead. It provides a range of palettes and some useful functions
forhelpingyouseeapproximatelywhatyourcurrentpalettemight
look like to a viewer with one of several different kinds of color
blindness. Thecolorblindr package has similar functionality.World Corporatist Liberal SocDem NA
World Corporatist Liberal SocDem NA
World Corporatist Liberal SocDem NA30
20
10
50 100 150 200
RoadsDonors
30
20
10
50 100 150 200
RoadsDonors
30
20
10
50 100 150 200
RoadsDonors
Figure 8.7: Some available palettes in use.
Forexample,let’suse RColorBrewer ’sbrewer.pal() function
togetfivecolorsfromggplot ’ sdefaultpalette.
Default ←brewer.pal (5,"Set2" )
N e x t ,w ec a nu s eaf u n c t i o nf r o mt h e dichromat package to
transformthesecolorstonewvaluesthatsimulatedifferentkinds
ofcolorblindness.Theresultsareshowninfigure8.9.


------------------------


204 •Chapter 8
Figure 8.8: Using a custom color palette.
Mental healthComm/Urban
Teaching
Aging
MedicalASA sections
2014 calendar year.Revenues$20,000
$10,000
$0
250 500 750 1000 1250
Membership
Source: ASA annual report.Section has own Journal No Yes
library (dichromat)
types ←c("deutan" ,"protan" ,"tritan" )
names (types) ←c("Deuteronopia" ,"Protanopia" ,"Tritanopia" )
color_table ←types %>% purrr ::map(~dichromat (Default, .x)) %>%
as_tibble ()%>% add_column (Default, .before = TRUE )
color_table
## # A tibble: 5 x 4
## Default Deuteronopia Protanopia Tritanopia
## <chr> <chr> <chr> <chr>
## 1 #66C2A5 #AEAEA7 #BABAA5 #82BDBD
## 2 #FC8D62 #B6B661 #9E9E63 #F29494
## 3 #8DA0CB #9C9CCB #9E9ECB #92ABAB
## 4 #E78AC3 #ACACC1 #9898C3 #DA9C9C
## 5 #A6D854 #CACA5E #D3D355 #B6C8C8
color_comp (color_table)Default
Deuteronopia
Protanopia
Tritanopia
Figure 8.9: Comparing a default color palette with
an approximation of how the same palette appears
to people with one of three kinds of color blindness.In this code, we create a vector of typesof color blindness
thatthe dichromat() functionknowsaboutandgivethemproper
names. Then we make a table of colors for each type using the
purrrlibrary’s map()function. The rest of the pipeline converts
theresultsfromalisttoatibbleandaddstheoriginalcolorsasthe


------------------------


Refine Your Plots •205
first column in the table. We can now plot them to see how they
compare,usingaconveniencefunctionfromthe socvizlibrary.
Theabilitytomanuallyspecifycolorscanbeusefulwhenthe
meaning of a category itself has a strong color association. Politi-
calparties,forexample,tendtohaveofficialorquasi-officialparty
colorsthatpeopleassociatewiththem.Insuchcasesitishelpfulto
beabletopresentresultsfor,say,theGreenPartyinagreencolor.
Whendoingthis,itisworthkeepinginmindthatsomecolorsare
associatedwithcategories(especiallycategoriesofperson)forout-
m odedr ea so n s,o rn ov eryg oodr ea so n.Don o tu ses t er eo typ ical
colorsjustbecauseyoucan.
8.2 Layer Color and Text Together
Aside from mapping variables directly, color is also useful when
we want to pick out or highlight some aspect of our data. In
c a s e sl i k et h i s ,t h el a y e r e da p p r o a c ho fg g p l o tc a nr e a l l yw o r k
to our advantage. Let’s work through an example where we use
manually specified colors both for emphasis and because of their
socialmeaning.
We will build up a plot of data about the U.S. general elec-
tion in 2016. It is contained in the county_data object in the
socvizlibrary. We begin by defining a blue and red color for the
DemocratsandRepublicans,respectively.Thenwecreatethebasic
s e t u pa n dfi r s tl a y e ro ft h ep l o t .W es u b s e tt h ed a t a ,i n c l u d i n g
only counties with a value of “No” on the ﬂippedvariable. We
set the color of geom_point() to be a light gray, as it will form
the background layer of the plot (fig. 8.10). And we apply a log
transformationtothex-axisscale.10,000,000 100,000 1,0000.00.20.40.60.8black/100
pop
Figure 8.10: The background layer.
# Democrat Blue and Republican Red
party_colors ←c("#2E74C0" ,"#CB454A" )
p0←ggplot (data = subset (county_data,
ﬂipped =="No" ),
mapping = aes(x= pop,
y= black /100))
p1←p0+geom_point (alpha = 0.15 ,color = "gray50" )+
scale_x_log10 (labels= scales ::comma)
p1


------------------------


206 •Chapter 8
In the next step (fig. 8.11) we add a second geom_point()
l a y e r .H e r ew es t a r tw i t ht h es a m ed a t a s e tb u te x t r a c tac o m p l e -
mentary subset from it. This time we choose the “Yes” counties
on the ﬂippedvariable. The xand ymappings are the same, but
weaddacolorscaleforthesepoints,mappingthe partywinner16
variable to the coloraesthetic. Then we specify a manual color
scale with scale_color_manual() , where the values are the blue
andred party_colors wedefinedabove.0.8
0.6
0.4
0.2
0.0
10,000,000 100,000 1,000
popPartywinner16 Democrat Republicanblack/100
Figure 8.11: The second layer.p2←p1+geom_point (data = subset (county_data,
ﬂipped =="Yes" ),
mapping = aes(x= pop, y= black /100,
color = partywinner16)) +
scale_color_manual (values = party_colors)
p2
Thenextlayersetsthey-axisscaleandthelabels(fig.8.12).
p3←p2+scale_y_continuous (labels= scales ::percent) +
labs (color = "County ﬂipped to ... " ,
x= "County Population (log scale)" ,
y= "Percent Black Population" ,
title = "Flipped counties, 2016" ,
caption = "Counties in gray did not ﬂip." )
p3Flipped counties, 2016Percent black population80%
60%
40%
20%
0%
1,000 100,000 10,000,000
County population (log scale)
Counties in gray did not flip.County flipped to... Democrat Republican
Figure 8.12: Adding guides and labels, and fixing
the y-axis scale.
Finally, we add a third layer using the geom_text_repel()
function. Onceagainwesupplyasetofinstructionstosubsetthe
data for this text layer. We are interested in the flipped counties
that have a relatively high percentage of African American resi-
dents. The result, shown in figure 8.13, is a complex but legible
multilayerplotwithjudicioususeofcolorforvariablecodingand
context.
p4←p3+geom_text_repel (data = subset (county_data,
ﬂipped =="Yes" &
black >25),


------------------------


Refine Your Plots •207
80%
60%
40%
20%
0%Percent black populationFlipped counties, 2016
1,000 100,000 10,000,000
County population (log scale)
Counties in gray did not ﬂip.County ﬂipped to ... Democrat Republican
GA
GA
GAGA GA
GA
GA
GA
GASC
SC
SC
SCSCSCALAL
NCNC
NCNC
NC
NCMS
MSMS
MS
ILVA FLTN
VA
VA
VAVATX
DEAR
Figure 8.13: County-level election data from 2016.
mapping = aes(x= pop,
y= black /100,
label = state), size = 2)
p4+theme_minimal ()+
theme (legend.position= "top" )
When producing a graphic like this in ggplot, or when look-
ingatgoodplotsmadebyothers,itshouldgraduallybecomeyour
h a b i tt os e en o tj u s tt h ec o n t e n to ft h ep l o tb u ta l s ot h ei m p l i c i t
or explicit structure that it has. First, you will be able to see the
mappings that form the basis of the plot, picking out which vari-
ables are mapped to x and y, and which to to color, fill, shape,
l a b e l ,a n ds oo n .W h a tg e o m sw e r eu s e dt op r o d u c et h e m ?S e c -
ond,howhavethescalesbeenadjusted?Aretheaxestransformed?


------------------------


208 •Chapter 8
Are the fill and color legends combined? And third, especially as
youpracticemakingplotsofyourown,youwillfindyourselfpick-
ing out the layeredstructure of the plot. What is the base layer?
What has been drawn on top of it, and in what order? Whichupperlayersareformedfromsubsetsofthedata? Whicharenewdatasets? Are there annotations? The ability to evaluate plots in
this way, to apply the grammar of graphics in practice, is use-
ful both for looking at plots and for thinking about how to makethem.
8.3 Change the Appearance of Plots with Themes
Our elections plot is in a pretty finished state. But if we want toc h a n g et h eo v e r a l ll o o ko fi ta l la to n c e ,w ec a nd ot h a tu s i n gggplot’s theme engine. Themes can be turned on or off using the
theme_set() function. It takes the name of a theme (which will
itselfbeafunction)asanargument.Trythefollowing:
theme_set (theme_bw ())
p4+theme (legend.position = "top" )
theme_set (theme_dark ())
p4+theme (legend.position = "top" )
I n t e r n a l l y ,t h e m ef u n c t i o n sa r eas e to fd e t a i l e di n s t r u c t i o n s
to turn on, turn off, or modify a large number of graphical ele-ments on the plot. Once set, a theme applies to all subsequent
plots,anditremainsactiveuntilitisreplacedbyadifferenttheme.
T h i sc a nb ed o n ee i t h e rt h r o u g ht h eu s eo fa n o t h e r
theme_set()
statement or on a per plot basis by adding the theme function tothe end of theplot:
p4 + theme_gray() would temporarily over-
ride the generally active theme for the p4object only. You can
stillusethe theme()functiontofine-tuneanyaspectofyourplot,
as seen above with the relocation of the legend to the top of thegraph.
Theggplotlibrarycomeswithseveralbuilt-inthemes,includ-
ing
theme_minimal() andtheme_classic() ,w i t h theme_gray()
ortheme_grey() a st h ed e f a u l t .I ft h e s ea r en o tt oy o u rt a s t e ,
installthe ggthemes packageformanymoreoptions.Youcan,for
example, make ggplot output look like it has been featured in the


------------------------


Refine Your Plots •209
80%
60%
40%
20%
0%
1,000 100,000Flipped counties, 2016
GA
GAGAMSSCSC
GAAL
IL
County population (log scale)Percent black population
Counties in gray did not ﬂip.10,000,000County ﬂipped to ... Democrat Republican
80%
60%
40%
20%
0%
1,000 100,000Flipped counties, 2016
County ﬂipped to ... Democrat Republican
Counties in gray did not ﬂip.10,000,000
Figure 8.14: Economist and WSJ themes.
Economist ,o rth eWall Street Journal ,o rinthepa g eso faboo kb y
EdwardTufte.Figure8.14showstwoexamples.
Usingsomethemesmightinvolveadjustingfontsizesorother
elementsasneeded,ifthedefaultsaretoolargeorsmall.Ifyouuse
athemewithacoloredbackground,youwillalsoneedtoconsider
what color palette you are using when mapping to colororﬁll
aesthetics. You can define your own themes either entirely from
s c r a t c ho rb ys t a r t i n gw i t ho n ey o ul i k ea n dm a k i n ga d j u s t m e n t s
fromthere.
library (ggthemes)
theme_set (theme_economist ())
p4+theme (legend.position= "top" )
theme_set (theme_wsj ())
p4+theme (plot.title = element_text (size = rel(0.6)),
legend.title = element_text (size = rel(0.35 )),
plot.caption = element_text (size = rel(0.35 )),
legend.position = "top" )
Generally speaking, themes with colored backgrounds and
customizedtypefacesarebestusedwhenmakingone-offgraphics
orposters,preparingfigurestointegrateintoaslidepresentation,
or conforming to a house or editorial style for publication. Take


------------------------


210 •Chapter 8
care to consider how the choices you make will harmonize with
the broader printed or displayed material. Just as with the choice
ofpalettesforaestheticmappings,whenstartingoutitcanbewis-
esttosticktothedefaultsorconsistentlyuseathemethathashadits kinks already ironed out. Claus O. Wilke’s
cowplotpackage, It also contains some convenience functions for
laying out several plot objects in a single figure,among other features, as we shall see below in oneof the case studies. for instance, contains a well-developed theme suitable for figures
whosefinaldestinationisajournalarticle.BobRudis’s hrbrthemes
package, meanwhile, has a distinctive and compact look and feel
that takes advantage of some freely available typefaces. Both are
availablevia install.packages() .
The theme()function allows you to exert fine-grained con-
trolovertheappearanceofallkindsoftextandgraphicalelementsin a plot. For example, we can change the color, typeface, and
f o n ts i z eo ft e x t .I fy o uh a v eb e e nf o l l o w i n ga l o n gw r i t i n gy o u r
code,youwillhavenoticedthattheplotsyoumakehavenotbeenidentical to the ones shown in the text. The axis labels are in aslightly different place from the default, the typeface is different,
and there are other, smaller changes as well. The
theme_book()
function provides the custom ggplot theme used throughout this
book.ThecodeforthisthemeisbasedsubstantiallyonBobRudis’s
theme_ipsum() ,fromhis hrbrthemes library.Youcanlearnmore
aboutitintheappendix.Forfigure8.15,wethenadjustthattheme
evenfurtherbytweakingthetextsize,andwealsoremoveanum-berofelementsbynamingthemandmakingthemdisappearusing
element_blank() .
p4+theme (legend.position = "top" )
p4+theme (legend.position = "top" ,
plot.title = element_text (size= rel(2),
lineheight= .5,
family= "Times" ,
face= "bold.italic" ,
colour= "orange" ),
axis.text.x = element_text (size= rel(1.1),
family= "Courier" ,
face= "bold" ,
color= "purple" ))


------------------------


Refine Your Plots •211
Flipped counties, 2016
80%
60%
40%
20%
0%
1,000 100,000 10,000,000
Counties in gray did not ﬂip.County population (log scale)Percent black populationCounty ﬂipped to ... Democrat Republican County ﬂipped to ... Democrat RepublicanFlipped counties, 2016
80%
60%
40%
20%
0%
1,000 100,000 10,000,000
Counties in gray did not ﬂip.County population (log scale)Percent black population
Figure 8.15: Controlling various theme elements directly (and making several bad choices while doing so).
8.4 Use Theme Elements in a Substantive Way
I tmakesgoodsensetousethemesasawaytofixdesignelements
because that means you can subsequently ignore them and focus
insteadonthedatayouareexamining.Butitisalsoworthremem-
beringthatggplot’sthemesystemisveryflexible.Itpermitsawide
r a n g eo fd e s i g ne l e m e n t st ob ea d j u s t e dt oc r e a t ec u s t o mfi g u r e s .
Forinstance,followinganexamplefromWehrwein(2017),wewill
create an effective small multiple of the age distribution of GSS
respondents over the years. The gss_londata contains informa-
tion on the age of each GSS respondent for all the years in the
surveysince1972.Thebasefigure8.16isascaled geom_density()
la yero ftheso rtwesa wearlier ,thistimefacetedb ythe yearvari-
able. We will fill the density curves with a dark gray color and
then add an indicator of the mean age in each year, and a text
l a y e rf o rt h el a b e l .W i t ht h o s ei np l a c ew et h e na d j u s tt h ed e t a i l
of several theme elements, mostly to remove them. As before, we
useelement_text() to tweak the appearance of various text ele-
mentssuchastitlesandlabels.Andwealsouse element_blank()
toremoveseveralofthemaltogether.
First,weneedtocalculatethemeanageoftherespondentsfor
each year of interest. Because the GSS has been around for most
(but not all) years since 1972, we will look at distributions about


------------------------


212 •Chapter 8
every four years since the beginning. We use a short pipeline to
extracttheaverageages.
yrs←c(seq(1972 ,1988 ,4),1993 ,seq(1996 ,2016 ,4))
mean_age ←gss_lon %>%
ﬁlter (age %nin% NA&&year %in% yrs) %>%
group_by (year) %>%
summarize (xbar = round (mean (age, na.rm = TRUE ),0))
mean_age $y←0.3
yr_labs ←data.frame (x= 85,y= 0.8,
year = yrs)
The ycolumnin mean_age willcomeinhandywhenwewant
topositiontheageasatextlabel.Next,wepreparethedataandset
upthegeoms.1972
1976
1980
1984
1988
1993
1996
2000
2004
2008
2012
2016
Age20 40 60 80Age distribution of
GSS respondents
45
45
45
44
45
4546
46
46
48
48
49
Figure 8.16: A customized small multiple.p←ggplot (data = subset (gss_lon, year %in% yrs),
mapping = aes(x= age))
p1←p+geom_density (ﬁll = "gray20" ,color = FALSE ,
alpha = 0.9,mapping = aes(y= ..scaled..)) +
geom_vline (data = subset (mean_age, year %in% yrs),
aes(xintercept = xbar), color = "white" ,size = 0.5)+
geom_text (data = subset (mean_age, year %in% yrs),
aes(x= xbar, y= y,label = xbar), nudge_x = 7.5,
color = "white" ,size = 3.5,hjust = 1)+
geom_text (data = subset (yr_labs, year %in% yrs),
aes(x= x,y= y,label = year)) +
facet_grid (year ~.,switch = "y")
Theinitial pobjectsubsetsthedatabytheyearswehavecho-
sen and maps xto the agevariable. The geom_density() call is
thebaselayer,withargumentstoturnoffitsdefaultlinecolor,set
the fill to a shade of gray, and scale the y-axis between zero and
one.
Usingoursummarizeddataset,the geom_vline() layerdraws
averticalwhitelineatthemeanageofthedistribution.Thefirstof
twotextgeomslabelstheageline(inwhite).Thefirst geom_text()


------------------------


Refine Your Plots •213
call uses a nudgeargument to push the label slightly to the right
of its x-value. The second labels the year. We do this because
w ea r ea b o u tt ot u r no fft h eu s u a lf a c e tl a b e l st om a k et h ep l o t
morecompact. Finallyweuse facet_grid() to break out the age
distributions by year. We use the switchargument to move the
labelstotheleft.
With the structure of the plot in place, we then style the ele-
ments in the way that we want, using a series of instructions to
theme().
p1+theme_book (base_size = 10,plot_title_size = 10,
strip_text_size = 32,panel_spacing = unit (0.1,"lines" ))+
theme (plot.title = element_text (size = 16),
axis.text.x= element_text (size = 12),
axis.title.y= element_blank (),
axis.text.y= element_blank (),
axis.ticks.y = element_blank (),
strip.background = element_blank (),
strip.text.y = element_blank (),
panel.grid.major = element_blank (),
panel.grid.minor = element_blank ()) +
labs (x= "Age" ,
y= NULL ,
title = "Age Distribution of\nGSS Respondents" )
One of the pleasing things about ggplot’s developer commu-
nity is that it often takes plot ideas that are first worked outin a one-off or bespoke way and generalizes them to the pointwhere they are available as new geoms. Shortly after writing the
code for the GSS age distributions in figure 8.16, the
ggridges
package was released. Written by Claus O. Wilke, it offers a dif-
ferent take on small-multiple density plots by allowing the dis-tributions to overlap vertically to interesting effect. It is espe-
cially useful for repeated distributional measures that change in
a clear direction. In figure 8.17 we redo our previous plot using afunctionfrom
ggridges .Because geom_density_ridges() makes
for a more compact display we trade off showing the mean age
v a l u ef o rt h es a k eo fd i s p l a y i n gt h ed i s t r i b u t i o nf o re v e r yG S S
year.


------------------------


214 •Chapter 8
library (ggridges)
p←ggplot (data = gss_lon,
mapping = aes(x= age, y= factor (year, levels = rev(unique (year)),
ordered = TRUE )))
p+geom_density_ridges (alpha = 0.6,ﬁll = "lightblue" ,scale = 1.5)+
scale_x_continuous (breaks = c(25,50,75))+
scale_y_discrete (expand = c(0.01 ,0))+
labs (x= "Age" ,y= NULL ,
title = "Age Distribution of\nGSS Respondents" )+
theme_ridges ()+
theme (title = element_text (size = 16,face = "bold" ))
The expandargument in scale_y_discrete() adjusts the
scalingofthey-axisslightly.Ithastheeffectofshorteningthedis-
tancebetweentheaxislabelsandthefirstdistribution,anditalso
prevents the top of the very first distribution from being cut off
b yt h ef r a m eo ft h ep l o t .T h ep a c k a g ea l s oc o m e sw i t hi t so w n
theme, theme_ridges() , that adjusts the labels so that they are
alignedproperly,andweuseithere.The geom_density_ridges()
function is also capable of reproducing the look of our original
version.Thedegreeofoverlapinthedistributionsiscontrolledby
thescaleargumentinthegeom.Youcanexperimentwithsetting
it to values below or above one to see the effects on the layout of
theplot.Age distribution of
GSS respondents
1972
1973
1974
1975
1976
1977
1978
1980
1982
1983
1984
1985
1986
1987
1988
1988
1990
1991
1993
1994
1996
1998
2000
2002
2004
2006
2008
2010
2012
2014
2016
25 50 75
Age
Figure 8.17: A ridgeplot version of the age
distribution plot.Much more detailed information on the names of the vari-
o u se l e m e n t sy o uc a nc o n t r o lv i a theme()can be found in the
ggplot documentation. Setting these thematic elements in an ad
hoc way is often one of the first things people want to do when
they make a plot. But in practice, apart from getting the overall
size and scale of your plot squared away, making small adjust-
ments to theme elements should be the last thing you do in the
plottingprocess.Ideally,onceyouhavesetupathemethatworks
well for you, it should be something you can avoid having to do
atall.


------------------------


Refine Your Plots •215
8.5 Case Studies
Badgraphicsareeverywhere.Betteronesarewithinourreach.For
thefinalsectionsofthischapterwewillworkthroughsomecom-mon visualization problems or dilemmas, as seen through somereal-lifecases.Ineachcasewewilllookattheoriginalfiguresand
redraw them in new (and better) versions. In the process we will
introduceafewnewfunctionsandfeaturesofggplotthatwehavenot seen yet. This, too, is true to life. Usually, it’s having to facesome practical design or visualization question that forces us to
ferret out the solution to our problem in the documentation or
come up with some alternative answer on the fly ourselves. Let’sstartwithacommoncase:theuseofdualaxesintrendplots.
Two y-axes
In January 2016 Liz Ann Sonders, chief investment strategistwithCharlesSchwab,Inc.,tweetedabouttheapparentcorrelationbetween two economic time series: the Standard and Poor’s 500
stockmarketindexandtheMonetaryBase,ameasureofthesizeof
moneysupply.TheS&Pisanindexthatrangesfromabout700toabout2,100overtheperiodofinterest(aboutthelastsevenyears).The Monetary Base ranges from about 1.5 trillion to 4.1 trillion
dollarsoverthesameperiod.Thismeansthatwecan’tplotthetwo
seriesdirectly.TheMonetaryBaseissomuchlargerthatitwouldmaketheS&P500seriesappearasaflatlineatthebottom.Whilethereareseveralreasonablewaystoaddressthis,peopleoftenopt
insteadtohavetwoy-axes.
Because it is designed by responsible people, R makes it
slightlytrickytodrawgraphswithtwoy-axes.Infact,ggplotrulesitoutoforderaltogether.ItispossibletodoitusingR’ sbasegraph-
ics, if you insist. Figure 8.18 shows the result. (You can find the
code at
https://github.com/kjhealy/two-y-axes )G r a p h i c si n
base R work very differently from the approach we have takenthroughout this book, so it would just be confusing to show the
codehere.
Mostofthetimewhenpeopledrawplotswithtwoy-axesthey
want to line the series up as closely as possible because they sus-pectthatthere’sasubstantiveassociationbetweenthem,asinthis


------------------------


216 •Chapter 8
Figure 8.18: Two time series, each with its own
y-axis.
2010 2012 2014 2016
Date1000 1500
15002000
2500 3500S&P points
Billions of dollarsS&P 500
Monetary Base
Figure 8.19: Variations on two y-axes.
2010S&P 500
Monetary BaseS&P 500
Monetary BaseStart y2 at Zero Start y1 at Zero; Max both at Max y2
2012 2014 2016 2010 2012 2014 2016
Date Date1000 1500 2000
4000 3000 2000 1000 05000 4000 3000 2000 1000 0
4000 3500 3000 2050 2000 1500S&P points
S&P pointsBillions of dollars
Billions of dollars
case. The main problem with using two y-axes is that it makes it
eveneasierthanusualtofoolyourself(orsomeoneelse)aboutthe
degree of association between the variables. This is because you
can adjust the scaling of the axes relative to one another in a way
thatmovesthedataseriesaroundmoreorlesshoweveryoulike.In
figure 8.18 the red Monetary Base line tracks below the blue S&P
500forthefirsthalfofthegraphandisaboveitforthesecondhalf.
Wecan“fix”thatbydecidingtostartthesecondy-axisatzero,
whichshiftstheMonetaryBaselineabovetheS&Plineforthefirst
halfoftheseriesandbelowitlateron.Thefirstpanelinfigure8.19
shows the results. The second panel, meanwhile, adjusts the axes
so that the axis tracking the S&P starts at zero. The axis tracking
theMonetaryBasestartsarounditsminimum(asisgenerallygood
practice),butnowbothaxesmaxoutaround4,000.Theunitsare
different,ofcourse.The4,000ontheS&Psideisanindexnumber,
whiletheMonetaryBasenumberis4,000billiondollars.Theeffect
is to flatten out the S&P’s apparent growth quite a bit, muting the
associationbetweenthetwovariablessubstantially.Youcouldtell
quiteadifferentstorywiththisone,ifyoufeltlikeit.
H o we l s em i g h tw ed r a wt h i sd a t a ?W ec o u l du s eas p l i t -o r
broken-axisplottoshowthetwoseriesatthesametime.Thesecan
be effective sometimes, and they seem to have better perceptual
properties than overlayed charts with dual axes (Isenberg et al.
2011).Theyaremostusefulincaseswheretheseriesyouareplot-
tingareofthesamekindbutofverydifferentmagnitudes.Thatis
notthecasehere.


------------------------


Refine Your Plots •217
Another compromise, if the series are not in the same units
(or of widely differing magnitudes), is to rescale one of the series
(e.g.,bydividingormultiplyingitbyathousand),oralternatively
toindexeachofthemto100atthestartofthefirstperiodandthenplot them both. Index numbers can have complications of theirown,butheretheyallowustouseoneaxisinsteadoftwo,andalso
to calculate a sensible difference between the two series and plot
t h a ta sw e l l ,i nap a n e lb e l o w .I tc a nb et r i c k yt ov i s u a l l ye s t i m a t ethedifference betweenseries, inpartbecauseourperceptual ten-
dencyistolookforthe nearestcomparisonpointintheotherseries
rather than the one directly above or below. Following Cleveland(1994), we can also add a panel underneath that tracks the run-ningdifferencebetweenthetwoseries.Webeginbymakingeach
plotandstoringtheminanobject.Todothis,itwillbeconvenient
to tidy the data into a long format, with the indexed series in thekey variable and their corresponding scores as the values. We usetidyr’s
gather() functionforthis:
head (fredts)
## date sp500 monbase sp500_i monbase_i
## 1 2009-03-11 696.68 1542228 100.000 100.000## 2 2009-03-18 766.73 1693133 110.055 109.785
## 3 2009-03-25 799.10 1693133 114.701 109.785
## 4 2009-04-01 809.06 1733017 116.131 112.371## 5 2009-04-08 830.61 1733017 119.224 112.371## 6 2009-04-15 852.21 1789878 122.324 116.058
fredts_m ←fredts %>% select (date, sp500_i, monbase_i) %>% gather (key = series,
value = score, sp500_i :monbase_i)
head (fredts_m)
## date series score
## 1 2009-03-11 sp500_i 100.000
## 2 2009-03-18 sp500_i 110.055
## 3 2009-03-25 sp500_i 114.701## 4 2009-04-01 sp500_i 116.131## 5 2009-04-08 sp500_i 119.224
## 6 2009-04-15 sp500_i 122.324
Oncethedataistidiedinthiswaywecanmakeourgraph.


------------------------


218 •Chapter 8
p←ggplot (data = fredts_m,
mapping = aes(x= date, y= score,
group = series,
color = series))
p1←p+geom_line ()+theme (legend.position = "top" )+
labs (x= "Date" ,
y= "Index" ,
color = "Series" )
p←ggplot (data = fredts,
mapping = aes(x= date, y= sp500_i -monbase_i))
p2←p+geom_line ()+
labs (x= "Date" ,
y= "Difference" )
Nowthatwehaveourtwoplots,wewanttolaythemoutnicely.
We do not want them to appear in the same plot area, but we dowanttocomparethem.Itwouldbepossibletodothiswithafacet,but that would mean doing a fair amount of data munging to get
allthreeseries(thetwoindicesandthedifferencebetweenthem)
intothesametidydataframe.Analternativeistomaketwosepa-rateplotsandthenarrangethemjustaswelike.Forinstance,havet h ec o m p a r i s o no ft h et w os e r i e st a k eu pm o s to ft h es p a c e ,a n d
puttheplotoftheindexdifferencesalongthebottominasmaller
area.
T h el a y o u te n g i n eu s e db yRa n dg g p l o t ,c a l l e d
grid,d o e s
make this possible. It controls the layout and positioning of plot
areas and objects at a lower level than ggplot. Programming
gridl a y o u t sd i r e c t l yt a k e sal i t t l em o r ew o r kt h a nu s i n gg g p l o t ’ s
functions alone. Fortunately, there are some helper libraries thatwe can use to make things easier. One possibility is to use the
gridExtra library.Itprovidesanumberofusefulfunctionsthatlet
us talk to the grid engine, including grid.arrange() . This func-
tion takes alist of plot objectsandinstructionsfor how we wouldlike them arranged. The
cowplotlibrary we mentioned earlier
makesthingseveneasier.Ithasa plot_grid() functionthatworks
much like grid.arrange() w h i l ea l s ot a k i n gc a r eo fs o m efi n e
details,includingtheproperalignmentofaxesacrossseparateplotobjects.


------------------------


Refine Your Plots •219
300Series monbase_i sp500_iIndexDiﬀerence250
200
150
100
60
40
20
0
2010 2012 2014 2016
DateDate2010 2012 2014 2016Figure 8.20: Indexed series with a running
difference below, using two separate plots.
cowplot ::plot_grid (p1, p2, nrow = 2,rel_heights = c(0.75 ,0.25 ),
align = "v")
Theresultisshowninfigure8.20.Itlooksprettygood.Inthis
version, the S&P index runs above the Monetary Base for almost
the whole series, whereas in the plot as originally drawn, they
crossed.
The broader problem with dual-axis plots of this sort is
that the apparent association between these variables is probably
spurious.Theoriginalplotisenablingourdesiretospotpatterns,
but it is probably the case that both of these time series are tend-
ingtoincreasebutarenototherwiserelatedinanydeepway.Ifwe
wereinterestedinestablishingthetrueassociationbetweenthem,
wemightbeginbynaivelyregressingoneontheother.Wecantry
to predict the S&P index from the Monetary Base, for instance. If
we do that, things look absolutely fantastic to begin with, as we
appeartoexplainabout95percentofthevarianceintheS&Pjust
by knowing the size of the Monetary Base from the same period.
We’re going to be rich!
Sadly, we’re probably not going to be rich. While everyone
knows that correlation is not causation, with time-series data we
get this problem twice over. Even just considering a single series,


------------------------


220 •Chapter 8
eac ho bse rva tio ni so ft e np r e t tyc l o se l yc o rr e la t edwi thth eo bse r -
vation in the period immediately before it, or perhaps with the
observation some regular number of periods before it. A time
series might have a seasonal component that we would want toaccount for before making claims about its growth, for example.And if we ask what predictsits growth, then we will introduce
someothertimeseries,whichwillhavetrendpropertiesofitsown.
I nt h o s ec i r c u m s t a n c e s ,w em o r eo rl e s sa u t o m a t i c a l l yv i o l a t et h eassumptionsofordinaryregressionanalysisinawaythatproduces
wildly overconfident estimates of association. The result, which
mayseemparadoxicalwhenyoufirstrun acrossit, isthatalotofthe machinery of time-series ana l y s i si sa b o u tm a k i n gt h es e r i a l
natureofthedatagoaway.
L i k ea n yr u l eo ft h u m b ,i ti sp o s s i b l et oc o m eu pw i t he x c e p -
tions, or talk oneself into them. We can imagine situations wherethejudicioususeofdualy-axesmightbeasensiblewaytopresentdata to others, or might help a researcher productively explore a
dataset.ButingeneralIrecommendagainstitbecauseitisalready
muchtooeasytopresentspurious,oratleastoverconfident,asso-ciations, especially with time-series data. Scatterplots can do thatjust fine. Even with a singleseries, as we sawin chapter1, we can
makeassociationslooksteeperorflatterbyfiddlingwiththeaspect
ratio. Using two y-axes gives you an extra degree of freedom tomessaboutwiththedatathat,inmostcases,youreallyshouldnottakeadvantageof.Arulelikethiswillnotstoppeoplewhowantto
foolyouwithchartsfromtrying, ofcourse. Butitmighthelpyou
notfoolyourself.
Redrawing a bad slide
In late 2015 Marissa Mayer’s performance as CEO of Yahoo was
b e i n gc r i t i c i z e db ym a n yo b s e r v e r s .O n eo ft h e m ,E r i cJ a c k s o n ,
an investment fund manager, sent a ninety-nine-slide presenta-tion to Yahoo’s board outlining his best case against Mayer. (He
also circulated it publicly.) The style of the slides was typical of
businesspresen ta tions.Slidesandpostersareaveryusefulmeansof communication. In my experience, most people who com-plain about “death by PowerPoint” have not sat through enough
talks where the presenter hasn’t even bothered to prepare slides.
But it is striking to see how fully the “slide deck” has escaped


------------------------


Refine Your Plots •221
15,000
14,000
13,000
12,000
11,000
10,000
9,000
8,000
7,000
‘04
Source: Company ﬁlings (10K), analyst calls‘05 ‘06 ‘07 ‘08 ‘09 ‘10 ‘11 ‘12 ‘13
Marissa mayer hired:
July 2012‘14 ‘1501,000
($) Millions
2,0004,0005,0006,0007,0008,000Yahoo full time employee headcount (2004–2015) vs. revenue (2004–2015)
3,000
Revenues Headcount5,257
6,425
6,969
6,460
6,324
4,984
4,986
4,680
4,6187,2083,574Figure 8.21: A bad slide. (From the
December 2015 Yahoo! Investor
Presentation: A Better Plan for
Yahoo Shareholders.)
its origins as an aid to communication and metastasized into a
freestanding quasi-format of its own. Business, the military, and
academiahaveallbeeninfectedbythistendencyinvariousways.
Never mind taking the time to write a memo or an article, just
give us endless pages of bullet points and charts. The disorient-
ing effect is of constant summaries of discussions that never took
place.
In any case, figure 8.21 reproduces a typical slide from the
deck. It seems to want to say something about the relationship
betweenYahoo’snumberofemployeesanditsrevenue,inthecon-
t e x to fM a y e r ’ st e n u r ea sC E O .T h en a t u r a lt h i n gt od ow o u l db e
tomakesomekindofscatterplottoseeiftherewasarelationship
between these variables. Instead, however, the slide puts time on
thex-axisandusestwoy-axestoshowtheemployeeandrevenue
data. It plots the revenues as a bar chart and the employee data
as points connected by slightly wavy lines. At first glance, it is
not clear whether the connecting line segments are just manually
added or if there’s some principle underlying the wiggles. (They
turn out to have been created in Excel.) The revenue values are
usedaslabelswithinthebars.Thepointsarenotlabeled.Employee
datagoesto2015,butrevenuedataonlyto2014.Anarrowpoints
to the date Mayer was hired as CEO, and a red dotted line seems
toindicate... actuallyI’mnotsure.Maybesomesortofthreshold
belowwhichemployeenumbersshouldfall?Ormaybejustthelast
observedvalue,toallowcomparisonacrosstheseries?Itisn’tclear.
Finally,noticethatwhiletherevenuenumbersareannual,thereis
morethanoneobservationperyearforsomeofthelateremployee
numbers.


------------------------


222 •Chapter 8
Howshouldweredrawthischart?Let’sfocusongettingacross
the relationship between employee numbers and revenue, as that
seemstobethemotivationforitinthefirstplace.Asasecondary
element,wewanttosaysomethingaboutMayer’sroleinthisrela-tionship. The original sin of the slide is that it plots two series ofnumbers using two different y-axes, as discussed above. We see
this from business analysts more often than not. Time is almost
theonlythingtheyeverputonthex-axis.
To redraw the chart, I took the numbers from the bars on
thecharttogetherwithemployeedatafromQZ.com.Wherethere
wasquarterlydataintheslide,Iusedtheend-of-yearnumberforemployees, except for 2012. Mayer was appointed in July 2012.Ideally we would have quarterly revenue and quarterly employee
data for all years, but given that we do not, the most sensible
thingtodoistokeepthingsann ualizedexceptfortheoneyearofinterest,whenMayerarrivesasCEO .I t’ sworthdoingthisbecauseotherwisethelargeroundoflayoffsthatimmediatelyprecededher
arrival would be misattributed to her tenure as CEO. The upshot
isthatwehavetwoobservationsfor2012inthedataset.Theyhavethesamerevenuedatabutdifferentemployeenumbers.Thefigurescanbefoundinthe
yahoodataset.
head (yahoo)
## Year Revenue Employees Mayer
## 1 2004 3574 7600 No
## 2 2005 5257 9800 No
## 3 2006 6425 11400 No## 4 2007 6969 14300 No## 5 2008 7208 13600 No
## 6 2009 6460 13900 No
The redrawing is straightforward. We could just draw a scat-
terplot and color the points by whether Mayer was CEO at thetime.Bynowyoushouldknowhowtodothisquiteeasily .W ecan
takeasmallstepfurtherbymakingascatterplotbutalsoholding
on to the temporal element beloved of business analysts. We canuse
geom_path() and use line segments to “join the dots” of the
yearlyobservationsinorder,labelingeachpointwithitsyear.The
result(fig.8.22)isaplotthatshowsthetrajectoryofthecompany


------------------------


Refine Your Plots •223
over time, like a snail moving across a flagstone. Again, bear in
mindthatwehavetwoobservationsfor2012.
$7,000Yahoo employees vs revenues, 2004–2014
$6,000
$5,000
$4,000
200420052006 200920072008
2010
2011 2012
20142013
9,000 11,000
Mayer is CEO13,000
EmployeesRevenue (millions)
aNo Yes a
Figure 8.22: Redrawing as a connected scatterplot.p←ggplot (data = yahoo,
mapping = aes(x= Employees, y= Revenue))
p+geom_path (color = "gray80" )+
geom_text (aes(color = Mayer, label = Year),
size = 3,fontface = "bold" )+
theme (legend.position = "bottom" )+
labs (color = "Mayer is CEO" ,
x= "Employees" ,y= "Revenue (Millions)" ,
title = "Yahoo Employees vs Revenues, 2004-2014" )+
scale_y_continuous (labels = scales ::dollar) +
scale_x_continuous (labels = scales ::comma)
This way of looking at the data suggests that Mayer was
appointed after a period of falling revenues and just following
a very large round of layoffs, a fairly common pattern with the
leadership of large firms. Since then, through either new hires or
acquisitions, employee numbers have crept back up a little while
revenueshavecontinuedtofall.Thisversionmoreclearlyconveys
whattheoriginalslidewastryingtogetacross.
Alternatively, we can keep the analyst community happy by
putting time back on the x-axis and plotting the ratio of revenue
to employees on the y-axis. This gives us the linear time-trend
back, only in a more sensible fashion (fig. 8.23). We begin the
plotbyusing geom_vline() toaddaverticallinemarkingMayer’s
accessiontotheCEOposition.
p←ggplot (data = yahoo,
mapping = aes(x= Year, y= Revenue /Employees))
p+geom_vline (xintercept = 2012 )+
geom_line (color = "gray60" ,size = 2)+
annotate ("text" ,x= 2013 ,y= 0.44 ,
label = " Mayer becomes CEO" ,size = 2.5)+
labs (x= "Year\n" ,
y= "Revenue/Employees" ,
title = "Yahoo Revenue to Employee Ratio, 2004-2014" )


------------------------


224 •Chapter 8
Figure 8.23: Plotting the ratio of revenue to
employees against time. (From the December 2015
Yahoo! Investor Presentation: A Better Plan for
Yahoo Shareholders.)0.55Yahoo revenue to employee ratio, 2004–2014
0.50
0.45
0.40
0.35
2004 2006 2008 2010 2012Mayer becomes CEO
2014
YearRevenue/Employees
Figure 8.24: Data on the structure of U.S. student
debts as of 2016.
20%
17%
28%19%8%3%4%1%Borrower distribution by
outstanding balance
out of  44 million borrowers in 2016
>$100k
5%
23%10%
16%Debt distribution by
outstanding balance
out of $1.3 trillion in 2016
>$100k
30%
less than 5k
5k–10k
10k–25k
25k–50k
50k–75k
75k–100k
100k–200k
200k+2%
4%11%
19%15%
Saying no to pie
For a third example, we turn to pie charts. Figure 8.24 shows a
pair of charts from a New York Federal Reserve Bank briefing on
thestructureofdebtintheUnitedStates(Chakrabartietal.2017).
As we saw in chapter 1, the perceptual qualities of pie charts are
not great. In a single pie chart, it is usually harder than it should
be to estimate and compare the values shown, especially when
therearemorethanafewwedgesandwhenthereareanumberof
wedgesreasonablycloseinsize.AClevelanddotplotorabarchart


------------------------


Refine Your Plots •225
is usually a much more straightforward way of comparing quan-
tities. When comparing the wedges between two pie charts, as in
this case, the task is made harder again as the viewer has to ping
back and forth between the wedges of each pie and the verticallyorientedlegendunderneath.
T h e r ei sa na d d i t i o n a lw r i n k l ei nt h i sc a s e .T h ev a r i a b l eb r o -
kendownineachpiechartisnotonlycategorical,itisalsoordered
from low to high. The data describe the percent of all borrowersand the percent of all balances divided up across the size of bal-
ancesowed,fromlessthanfivethousanddollarstomorethantwo
h u n d r e dt h o u s a n dd o l l a r s .I t ’ so n et h i n gt ou s eap i ec h a r tt od i s -play shares of an unordered categorical variable, such as percentof total sales due to pizza, lasagna, and risotto. Keeping track of
o r d e r e dc a t e g o r i e si nap i ec h a r ti sh a r d e ra g a i n ,e s p e c i a l l yw h e n
we want to make a comparison between two distributions. Thewedges of these two pie charts areordered (clockwise, from the
top), but it’s not so easy to follow them. This is partly because of
thepie-nessofthechartandpartlybecausethecolorpalettecho-
senforthecategoriesisnotsequential.Insteaditisunordered.Thecolorsallowthedebtcategoriestobedistinguishedbutdon’tpickoutthesequencefromlowtohighvalues.
S on o to n l yi sal e s st h a ni d e a lp l o tt y p eb e i n gu s e dh e r e ,
it’s being made to do a lot more work than usual, and with thewrong sort of color palette. As is often the case with pie charts,the compromise made to facilitate interpretation is to display all
then umericalvaluesforeverywedge,andalsotoaddasummary
outside the pie. If you find yourself having to do this, it’s worthaskingwhetherthechartcouldberedrawn,orwhetheryoumightaswelljustshowatableinstead.
Herearetwowayswemightredrawthesepiecharts.Asusual,
neitherapproachisperfect.Orrather ,eachapproachdrawsatten-tiontofeaturesofthedatainslightlydifferentways.Whichworksbe s td e pe n d so nwh a tp a rt so fth ed a taw ew a n tt oh i ghl i gh t .T h e
dataareinanobjectcalled
studebt.
head (studebt)
## # A tibble: 6 x 4
## Debt type pct Debtrc## <ord> <fct> <int> <ord>## 1 Under $5 Borrowers 20 Under $5


------------------------


226 •Chapter 8
Figure 8.25: Faceting the pie charts.
Over $20044 million borrowers owe a total of $1.3 trillion
Percent of all borrowersOutstanding student loans
Percent of all balances
$100–$200
$75–$100
$50–$75
$25–$50
$10–$25
$5–$10
Under $5
0%Amount owed, in thousands of dollars
10% 20% 0% 10% 20%
Source: FRB NY
## 2 $5-$10 Borrowers 17 $5-$10
## 3 $10-$25 Borrowers 28 $10-$25
## 4 $25-$50 Borrowers 19 $25-$50
## 5 $50-$75 Borrowers 8 $50-$75
## 6 $75-$100 Borrowers 3 $75-$100
Ourfirstefforttoredrawthepiecharts(fig.8.25)usesafaceted
comparison of the two distributions. We set up some labels in
advance, as we will reuse them. We also make a special label for
thefacets.
p_xlab ←"Amount Owed, in thousands of Dollars"
p_title ←"Outstanding Student Loans"
p_subtitle ←"44 million borrowers owe a total of $1.3 trillion"
p_caption ←"Source: FRB NY"
f_labs ←c(`Borrowers `="Percent of\nall Borrowers" ,
`Balances `="Percent of\nall Balances" )
p←ggplot (data = studebt,
mapping = aes(x= Debt, y= pct/100,ﬁll = type))
p+geom_bar (stat = "identity" )+
scale_ﬁll_brewer (type = "qual" ,palette = "Dark2" )+
scale_y_continuous (labels = scales ::percent) +
guides (ﬁll = FALSE )+
theme (strip.text.x = element_text (face = "bold" ))+
labs (y= NULL ,x= p_xlab,


------------------------


Refine Your Plots •227
caption = p_caption,
title = p_title,
subtitle = p_subtitle) +
facet_grid (~type, labeller = as_labeller (f_labs)) +
coord_ﬂip ()
T h e r ei sar e a s o n a b l ea m o u n to fc u s t o m i z a t i o ni nt h i sg r a p h .
First, the text of the facets is made bold in the theme()call. The
graphical element is first named ( strip.text.x )a n dt h e nm o d -
ified using the element_text() function. We also use a custom
paletteforthe ﬁllmapping,via scale_ﬁll_brewer() .Andfinally
we relabel the facets to something more informative than their
bare variable names. This is done using the labeller argument
and the as_labeller() function inside the facet_grid() call.
At the beginning of the plotting code, we set up an object called
f_labs,w h i c hi si ne ff e c tat i n yd a t af r a m et h a ta s s o c i a t e sn e w
labels with the values of the typevariable in studebt.W eu s e
backticks (the angled quote character located next to the ‘1’ key
on U.S. keyboards) to pick out the values we want to relabel. The
as_labeller() functiontakesthisobjectandusesittocreatenew
textforthelabelswhen facet_grid() iscalled.
S u b s t a n t i v e l y ,h o wi st h i sp l o tb e t t e rt h a nt h ep i ec h a r t s ?W e
split the data into the two categories and showed the percentage
shares as bars. The percent scores are on the x-axis. Instead ofusing color to distinguish the debt categories, we put their valueso nt h ey - a x i si n s t e a d .T h i sm e a n sw ec a nc o m p a r ew i t h i nac a t -
egory just by looking down the bars. For instance, the left-hand
panel shows that almost a fifth of the 44 million people with stu-dentdebtowelessthanfivethousanddollars.Comparisonsacrosscategoriesarenoweasieraswell,aswecanscanacrossarowtosee,
forinstance,thatwhilejust1percentorsoofborrowersowemore
than$200,000,thatcategoryaccountsformorethan10percentofallstudentdebt.
W ec o u l da l s oh a v em a d et h i sb a rc h a r tb yp u t t i n gt h ep e r -
centages on the y-axis and the categories of amount owed on the
x-axis. When the categorical axis labels are long, though, I gen-erally find it’s easier to read them on the y-axis. Finally, while itlooksniceandhelpsalittletohavethetwocategoriesofdebtdis-
tinguished by color, the colors on the graph are not encoding or
mappinganyinformationinthedatathatisnotalreadytakencareof by the faceting. The
ﬁllmappingisusefulbutalsoredundant.


------------------------


228 •Chapter 8
Percent of
all balancesAmount owed, in thousands of dollars44 million borrowers owe a total of $1.3 trillionOutstanding student loans
Percent of
all borrowers
0%Under $5 $5–$10 $10–$25 $50–$75 $25–$50 $75–$100 $100–$200 Over $200
25% 75% 50% 100%
Source: FRB NY
Figure 8.26: Debt distributions as horizontally segmented bars.
Thisgraphcouldeasilybeinblackandwhiteandwouldbejustas
informative.
One thing that is not emphasized in a faceted chart like this
istheideathateachofthedebtcategoriesisashareorpercentage
of a total amount. That is what a pie chart emphasizes more than
anything, but as we saw there’s a perceptual price to pay for that,
especiallywhenthecategoriesareordered.Butmaybewecanhang
on to the emphasis on shares by using a different kind of barplot.
Instead of having separate bars distinguished by heights, we can
array the percentages for each distribution proportionally within
a single bar. We will make a stacked bar chart with just two main
bars,(fig.8.26)andliethemontheirsideforcomparison.
library (viridis)
p←ggplot (studebt, aes(y= pct/100,x= type, ﬁll = Debtrc))
p+geom_bar (stat = "identity" ,color = "gray80" )+
scale_x_discrete (labels = as_labeller (f_labs)) +
scale_y_continuous (labels = scales ::percent) +
scale_ﬁll_viridis (discrete = TRUE )+
guides (ﬁll = guide_legend (reverse = TRUE ,
title.position = "top" ,
label.position = "bottom" ,
keywidth = 3,
nrow = 1))+


------------------------


Refine Your Plots •229
labs (x= NULL ,y= NULL ,
ﬁll = "Amount Owed, in thousands of dollars" ,
caption = p_caption,
title = p_title,
subtitle = p_subtitle) +
theme (legend.position = "top" ,
axis.text.y = element_text (face = "bold" ,hjust = 1,size = 12),
axis.ticks.length = unit (0,"cm" ),
panel.grid.major.y = element_blank ()) +
coord_ﬂip ()
Once again, there is a substantial amount of customization
in this chart. I encourage you to peel it back one option at a
time to see how it changes. We use the as_labeller() with
f_labsagain, but in the labels for the x-axis this time. We
make a series of adjustments in the theme()call to customize
the purely visual elements of the plot, making the y-axis labels
larger, right justified, and bold via element_text() ,r e m o v i n g
the axis tick-marks, and also removing the y-axis grid lines via
element_blank() .
More substantively, we take a lot of care about color in
figure 8.26. First, we set the border colors of the bars to a lightgrayin
geom_bar() tomakethebarsegmentseasiertodistinguish.
Second,wedrawonthe viridislibraryagain(aswedidwithour
small-multiple maps in chapter 7), using scale_ﬁll_viridis()
forthecolorpalette.Third,wearecarefultomaptheincomecate-
goriesinanascendingsequenceofcolors,andtoadjustthekeysothatthevaluesrunfromlowtohigh, fromlefttoright, andfrom
yellowtopurple.Thisisdonepartlybyswitchingthe
ﬁllmapping
from DebttoDebtrc. The categories of the latter are the same as
theformer,butthesequenceofincomelevelsiscodedintheorderwe want. We also show the legend to the reader first by putting it
atthetop,underthetitleandsubtitle.
Therestoftheworkisdoneinthe
guides() call.Wehavenot
used guides() much thus far except to turn off legends that we
did not want to display. But here we see its usefulness. We give
guides() a series of instructions about the ﬁllmapping: reverse reverse = TRUE
thedirectionofthecolorcoding;putthelegendtitleabovethekey; title.position
putthelabelsforthecolorsbelowthekey;widenthewidthofthe label.position
keywidth colorboxesalittle;andplacethewholekeyonasinglerow.
nrow


------------------------


230 •Chapter 8
This is a lot of work, but if you don’t do it the plot will be
much harder to read. Again, I encourage you to peel away the
layers and options in sequence to see how the plot changes. The
versioninfigure8.26letsusmoreeasilyseehowthecategoriesofdollar amounts owed break down as a percentage of all balances,and as a percent of all borrowers. We can also eyeball compar-
isonsbetweenthetwotypes,especiallyatthefarendofeachscale.
It’s easy to see how a tiny percentage of borrowers account fora disproportionately large share of total debt, for example. But
even with all this careful work, estimating the size of each indi-
vidual segment is still not as easy here as it is in figure 8.25, thefaceted version. This is because it’s harder to estimate sizes whenwe don’t have an anchor point or baseline scale to compare each
piece to. (In the faceted plot, that comparison point was the x-
axis.) So the size of the “Under 5” segment in the bottom baris much easier to estimate than the size of the “$10–25” bar, forinstance. Our injunction to take care about using stacked bar
chartsstillhasalotofforce,evenwhenwetryhardtomakethebest
ofthem.
8.6 Where to Go Next
We have reached the end of our introduction. From here on, youshould be in a strong position to forge ahead in two main ways.
Thefirstistobecomemoreconfidentandpracticedwithyourcod-
ing. Learning ggplot should encourage you to learn more aboutthe set of tidyverse tools, and then by extension to learn moreabout R in general. What you choose to pursue will (and should)
bedrivenbyyourownneedsandinterestsasascholarordatasci-
entist.ThemostnaturaltexttolookatnextisGarrettGrolemund
r4ds.had.co.nz/
andHadleyWickham’s RforDataScience (2016),whichintroduces
t i d y v e r s ec o m p o n e n t st h a tw eh a v ed r a w no nh e r eb u tn o tp u r -
suedindepth.OtherusefultextsincludeChang(2013)andRoger leanpub.com/rprogramming
Peng’sRProgrammingforDataScience (2016).Themostthorough
introduction to ggplot in particular can be found in Wickham(2016).
Pushingaheadtouseggplotfornewkindsofgraphswilleven-
t u a l l yg e ty o ut ot h ep o i n tw h e r eg g p l o td o e sn o tq u i t ed ow h a tyou need or does not quite provide the sort of geom you want. Inthat case, the first place to look is the world of extensions to the


------------------------


Refine Your Plots •231
ggplot framework. Daniel Emaasit’s overview of add-on packages ggplot2-exts.org
forggplotisthebestplacetobeginyoursearch.W ehaveusedafew
extensions in the book already. Like ggrepel and ggridges, exten-
sions typically provide a new geom or two to work with, whichmaybejustwhatyouneed. Sometimes, aswithThomasLinPed-ersen’s
ggraph,y o ug e taw h o l ef a m i l yo fg e o m sa n da s s o c i a t e d
tools—in ggraph’s case, a suite of tidy methods for the visual-
ization of network data. Other modeling and analysis tasks mayrequire more custom work, or coding that is closely connected
to the kind of analysis being done. Harrell (2016) provides many
clearly worked examples, mostly based on ggplot; Gelman & Hill(2018) and Imai (2017) also introduce contemporary methodsusing R; Silge & Robinson (2017) present a tidy approach to ana-
lyzingandvisualizingtextualdata;whileFriendly&Meyer(2017)
thoroughly explore the analysis of discrete data, an area that isoftenchallengingtoapproachvisually.
The second way you should push ahead is by looking at and
thinking about other people’s graphs. The R Graph Gallery, run
r-graph-gallery.com
b yY a nH o l t z ,i sau s e f u lc o l l e c t i o no fe x a m p l e so fm a n yk i n d so f
graphicsdrawnwithggplotandotherRtools.PolicyViz,asiterun policyviz.com
b yJ o nS c h w a b i s h ,c o v e r sar a n g eo ft o p i c so nd a t av i s u a l i z a t i o n .
Itregularlyfeaturescasestudieswherevisualizationsarereworked
toimprovethemorcastnewlightonthedatatheypresent.Butdonotjustlookforexamplesthathavecodewiththemtobeginwith.As I have said before, a real strength of ggplot is the grammar of
graphicthatunderpinsit.Thatgrammarisamodelyoucanuseto
lookatandinterpret anygraph,nomatterhowitwasproduced.It
g i v e sy o uav oc a b u l a ryt h a tl e t sy o us a yw h a tt h ed a t a ,m a p p i n g s ,geoms,scales,guides,andlayersofanyparticulargraphmightbe.
Andbecausethegrammarisimplementedastheggplotlibrary,itis
ashortstepfrombeingabletoanatomizethestructureofagraphto being able to sketch an outline of the code you could write toreproduceityourself.
Whileitsunderlyingprinciplesandgoalsarerelativelystable,
thetechniquesandtoolsofresearcharechanging.Thisisespeciallytruewithinthesocialsciences(Salganik2018).Datavisualizationis an excellent entry point to these new developments. Our tools
for it are more versatile and powerful than ever. You should look
at your data. Looking is not a replacement for thinking. It can-n o tf o r c ey o ut ob eh o n e s t ;i tc a n n o tm a g i c a l l yp r e v e n ty o uf r o mmaking mistakes; and it cannot make your ideas true. But if you


------------------------


232 •Chapter 8
analyze data, visualization can help you uncover features in it. If
you are honest, it can help you live up to your own standards.
W h e ny o ui n e v i t a b l ym a k ee r r o r s ,i tc a nh e l py o ufi n da n dc o r -
rectthem.Andifyouhaveanideaandsomegoodevidenceforit,itcanhelpyoushowitinacompellingway.


------------------------


Acknowledgments
Software is a kind of condensed collaboration. It’s a big help in
everydaylifebutisalsoeasytotakeforgranted.Theresearchand
teachingIdodependontoolsthatotherpeoplefreelywrite,main-
tain, and distribute. My first debt is therefore to all those whoproduce and maintain R, the infrastructure that supports it, andthepackagesbuiltonitsfoundations.Theparticularlibrariesused
in the book are cited throughout the text and listed in the refer-
ences.IamalsogratefultothoseintheRcommunitywhohelpedme while I wrote this book, whether directly, through commentsand suggestions; indirectly, by independently solving problems I
ran into myself; or unwittingly, via the excellent example of their
ownopenandgenerousstyleofwork.InparticularIthankJennyBryan,MineÇetinkaya-Rundel,DirkEddelbuettel,ThomasLum-
ley, John MacFarlane, Bob Rudis, Hadley Wickham, Claus O.
Wilke,andYihuiXie.
A conversation with Chris Bail, a coauthored paper with Jim
Moody(Healy&Moody2014),andasuggestionfromSteveVaisey
got me started on this project. Duke University and the Kenan
Institute for Ethics gave me time to see it through. Martin RuefandSuzanneShanahanmadethenecessaryroom.MystudentsandseminarparticipantsatDuke,Yale,McGill,theUniversityofOslo,
and Statistical Horizons were test pilots for much of the mate-
rialandprovidedinvaluablefeedback.IthankAndyPapachristos,Tom Lyttleton, Torkild Lyngstad, Amélie Quesnel-Vallée, ShelleyClark,andPaulAllisonfortheexternalteachingopportunities.
At Princeton University Press, Meagan Levinson has been an
ideal editor in every respect. Her expert guidance and enthusi-asm throughout the writing and production of the book madeeverything move a lot quicker than expected. Four anonymous
readersforthePressprovideddetailedandhelpfulcommentsthat
improved the manuscript substantially. I also received excellentfeedback from Andrew Gelman, Eszter Hargittai, Matissa Hollis-ter,EricLawrence,andMattSalganik.Anyremainingerrorsareof
coursemyown.


------------------------


234 •Acknowledgments
Formanyyears,LauriePaulgaveherencouragementandsup-
porttothisandotherprojects.Ithankherforthat. Iscumaleisan
mhaidincadairangealannsí.
For their professionalism as colleagues or their kindness as
friends, IamgratefultoSamAnthony, CourtneyBender, AndreaDeeker, Mary Dixon-Woods, John Evans, Tina Fetner, Pierre-
Olivier Gourinchas, Erin Kelly, Liz Morgan, Brian Steensland,
Craig Upright, Rebekah Estrada Vaisey, and Steve Vaisey. MarionFourcade has both these qualities but also a third—patience as a
coauthor—thatIfearIhavetriedbeyondreason.
MuchofthisbookwaswrittenontheRobertsonScholarsBus,
which goes back and forth between Duke and Chapel Hill on thehalfhourduringterm.It’sabighelpineverydaylifebutisalsoeasy
totakeforgranted.Itsexistenceisworthanyamountofhandwav-
ingaboutconnectionandcollaboration.Thebestseatsarenearthefront,facingsideways.


------------------------


Appendix
This appendix contains supplemental information about various
a s p e c t so fRa n dg g p l o tt h a ty o ua r el i k e l yt or u ni n t oa sy o uu s eit. You are at the beginning of a process of discovering practicalproblemsthatareaninevitablepartofusingsoftware.Thisisoften
frustrating.Butfeelingstumpedisastandardexperienceforevery-
onewhowritescode.Eachtimeyoufigureoutthesolutiontoyourproblem,youacquiremoreknowledgeabouthowandwhythingsgowrong,andmoreconfidenceabouthowtotacklethenextglitch
thatcomesalong.
1 A little more about R
How to read an R help page
Functions, datasets, and other built-in objects in R are docu-
mentedinitshelpsystem.Youcansearchorbrowsethisdocumen-
tation via the “Help” tab in RStudio’s lower right-hand window.
ThequalityofR’shelppagesvariessomewhat.Theytendtobeontheterseside.However,theyallhaveessentiallythesamestructure,anditisusefultoknowhowtoreadthem.FigureA.1providesan
overview of what to look for. Remember, functions take inputs,
perform actions, and return outputs. Something goes in, it getsworkedon,andthensomethingcomesout.Thatmeansyouwantto know what the function requires,w h a ti t does,a n dw h a ti t
returns.W h a ti tr e q u i r e si ss h o w ni nt h e UsageandArguments
sectionsofthehelppage.Thenamesoftherequiredandoptionalargumentsaregivenintheorderthefunctionexpectsthem.Someargumentshavedefaultvalues.Inthecaseofthe
mean()function,
theargument na.rmissetto FALSEbydefault.Thesewillbeshown
in theUsagesection. If a named argument has no default, you
will have to give it a value. Depending on what the argument is,this might be a logical value, a number, a dataset, or any other
object.


------------------------


236 •Appendix
Figure A.1: The structure of an R help page.
The other part to look at closely is the Valuesection, which
tellsyouwhatthefunctionreturnsonceithasdoneitscalculation.
Again, depending on what the function is, this might simply be
a single number or other short bit of output. But it could also be
somethingascomplexasaggplotfigureoramodelobjectconsist-
ingofmanyseparatepartsorganizedasalist.


------------------------


Appendix •237
Well-documentedpackageswilloftenhave demosandvignettes
attached to them. These are meant to describe the package as a
whole,ratherthanspecificfunctions.Agoodpackagevignettewill
oftenhaveoneormorefullyworkedexamplestogetherwithadis-cussiondescribinghowthepackageworksandwhatitcando.Toseeifthereareanypackagevignettes,clickthelinkatthebottomof
thefunction’shelppagetobetakentothepackageindex.Anyavail-
abledemos,vignettes,orothergeneralhelpwillbelistedatthetop.
The basics of accessing and selecting things
Generallyspeaking,thetidyverse’spreferredmethodsfordatasub-setting, filtering, slicing and selecting will keep you away fromthe underlying mechanics of selecting and extracting elements of
vectors, matrices, or tables of data. Carrying out these opera-
tions through functions like
select() ,ﬁlter(),subset() ,a n d
merge()is generally safer and more reliable than accessing ele-
ments directly. However, it is worth knowing the basics of these
operations. Sometimes accessing elements directly is the most
convenient thing to do. More important, we may use these tech-niques in small ways in our code with some regularity. Here wevery briefly introduce some of R’s selection operators for vectors,
arrays,andtables.
Considerthe
my_numbers andyour_numbers vectorsagain.
my_numbers ←c(1,2,3,1,3,5,25)
your_numbers ←c(5,31,71,1,3,21,6)
Toaccessanyparticularelementin my_numbers ,weusesquare
brackets. Square brackets are not like the parentheses after func-
tions.Theyareusedtopickoutanelementindexedbyitsposition:
my_numbers[ 4]
## [1] 1
my_numbers[ 7]
## [1] 25


------------------------


238 •Appendix
Putting the number ninside the brackets will give us (or
“return”) the nth element in the vector, assuming there is one. To
accessasequenceofelementswithinavectorwecandothis:
my_numbers[ 2:4]
## [1] 2 3 1
This shorthand notation tells R to count from the second to
the fourth element, inclusive. We are not restricted to selecting
contiguouselementseither.Wecanmakeuseofour c()function
again:
my_numbers[ c(2,4)]
## [1] 2 1
R evaluates the expression c(2,4)first and then extracts
just the second and the fourth element from my_numbers ,i g n o r -
ing the others. You might wonder why we didn’t just write
my_numbers[2,3] directly.Theansweristhatthisnotationisused
for objects arrayed in two dimensions (i.e., something with rowsandcolumns),likematrices,dataframes,ortibbles.W ecanmakea two-dimensional object by creating two different vectors with
the
c()functionandusingthe tibble() functiontocollectthem
together:
my_tb ←tibble (mine = c(1,4,5,8:11),yours = c(3,20,16,
34:31))
class (my_tb)
## [1] "tbl_df" "tbl" "data.frame"
my_tb
## # A tibble: 7 x 2
## mine yours## <dbl> <dbl>
## 1 1. 3.
## 2 4. 20.## 3 5. 16.## 4 8. 34.


------------------------


Appendix •239
## 5 9. 33.
## 6 10. 32.
## 7 11. 31.
We index data frames, tibbles, and other arrays by row In these chunks of code you will see some
explanatory text set off by the hash symbol, #.
In R’s syntax, the hash symbol is used to designatea comment. On any line of code, text that appearsafter a
#symbol will be ignored by R’s interpreter.
It won’t be evaluated and it won’t trigger a syntaxerror.first, and then by column. Arrays may also have more than two
dimensions.
my_tb[ 3,1]# Row 3 Col 1
## # A tibble: 1 x 1
## mine## <dbl>## 1 5.
my_tb[ 1,2]# Row 1, Col 2
## # A tibble: 1 x 1
## yours
## <dbl>## 1 3.
The columns in our tibble have names. We can select ele-
ments using them, too. We do this by putting the name of the
columninquoteswherewepreviouslyputtheindexnumberofthecolumn:
my_tb[ 3,"mine" ]# Row 3 Col 1
## # A tibble: 1 x 1
## mine
## <dbl>
## 1 5.
my_tb[ 1,"yours" ]# Row 1, Col 2
## # A tibble: 1 x 1
## yours## <dbl>
## 1 3.
my_tb[ 3,"mine" ]# Row 3 Col 1


------------------------


240 •Appendix
## # A tibble: 1 x 1
## mine
## <dbl>
## 1 5.
my_tb[ 1,"yours" ]# Row 1, Col 2
## # A tibble: 1 x 1
## yours
## <dbl>
## 1 3.
If we want to get all the elements of a particular column, we
c a nl e a v eo u tt h er o wi n d e x .T h i sw i l lm e a na l lt h er o w sw i l lb e
includedforwhichevercolumnweselect.
my_tb[, "mine" ]# All rows, Col 1
## # A tibble: 7 x 1
## mine## <dbl>
## 1 1.
## 2 4.## 3 5.## 4 8.
## 5 9.
## 6 10.## 7 11.
W ecandothistheotherwayaround,too,selectingaparticular
rowandshowingallcolumns:
my_tb[ 4,] # Row 4, all cols
## # A tibble: 1 x 2
## mine yours## <dbl> <dbl>
## 1 8. 34.
Abetterwayofaccessingparticularcolumnsinadataframeis
viathe $operator,whichcanbeusedtoextractcomponentsofvar-
ious sorts of object. This way we append the name of the column
wewanttothenameoftheobjectitbelongsto:


------------------------


Appendix •241
my_tb $mine
## [1] 1 4 5 8 9 10 11
Elements of many other objects can be extracted in this way,
too,includingnestedobjects.
out←lm(mine ~yours, data = my_tb)
out$coefﬁcients
## (Intercept) yours
## -0.0801192 0.2873422
out$call
## lm(formula = mine ~ yours, data = my_tb)
out$qr$rank # nested
## [1] 2
Finally, in the case of data frames, the $operator also lets us
addnewcolumnstotheobject. Forexample, wecanaddthefirst
twocolumnstogether,rowbyrow.Tocreateacolumninthisway,we put the
$and the name of the new column on the left side of
theassignment.
my_tb $ours ←my_tb $mine +my_tb $yours
my_tb
## # A tibble: 7 x 3
## mine yours ours
## <dbl> <dbl> <dbl>
# # 11 .3 .4 .## 2 4. 20. 24.## 3 5. 16. 21.
## 4 8. 34. 42.
## 5 9. 33. 42.## 6 10. 32. 42.## 7 11. 31. 42.


------------------------


242 •Appendix
In this book we do not generally access data via [or$.I ti s
particularly bad practice to access elements by their index num-
beronly,asopposedtousingnames.Inbothcases,andespecially
t h el a t t e r ,i ti st o oe a s yt om a k eam i s t a k ea n dc h o o s et h ew r o n gcolumns or rows. In addition, if our table changes shape later on(e.g., due to the addition of new original data), then any absolute
referencetothepositionofcolumns(ratherthantotheirnames)is
verylikelytobreak.Still,wedousethe
c()functionforsmalltasks
quite regularly, so it’s worth understanding how it can be used to
pickoutelementsfromvectors.TableA.1
Someuntidydata.
name treatmenta treatmentb
JohnSmith NA 18
Jane Doe 4 1MaryJohnson 6 7
TableA.2
The same data, still untidy, but in a
differentway.
treatment John Jane Mary
Smith Doe Johnson
aN A 4 6
b1 8 1 7
TableA.3
Tidied data. Every variable a col-umn,everyobservationarow.
name treatment n
Jane Doe a 4
Jane Doe b 1JohnSmith a NA
JohnSmith b 18
MaryJohnson a 6MaryJohnson b 7Tidy data
Working with R and ggplot is much easier if the data you use is
in the right shape. Ggplot wants your data to be tidy.F o ram o r e
thoroughintroductiontotheideaoftidydata, seechapters5and
12ofWickham&Grolemund(2016).Togetasenseofwhatatidydataset looks like in R, we will follow the discussion in Wickham(2014).Inatidydataset,
1.Eachvariableisacolumn.
2.Eachobservationisarow.
3.Eachtypeofobservationalunitformsatable.
Formostofyourdataanalysis,thefirsttwopointsarethemost
important. Thethirdpointmightbealittleunfamiliar. Itisafea-ture of “normalized” data from the world of databases, where the
goal is to represent data in a series of related tables with minimal
duplication (Codd 1990). Data analysis more usually works witha single large table of data, often with considerable duplication ofsomevariablesdowntherows.
Datapresentedinsummarytablesisoftennot“tidy”asdefined
here. When structuring our data, we need to be clear about howourdataisarranged.Ifyourdataisnottidilyarranged,thechancesare good that you will have more difficulty, and maybe a lotmore
difficulty,gettingggplottodrawthefigureyouwant.
Forexample,considertableA.1andtableA.2,fromWickham’s
discussion.Theypresentthesamedataindifferentways,buteachwould cause trouble if we tried to work with it in ggplot to make
a graph. Table A.3 shows the same data once again, this time in a
tidiedform.


------------------------


Appendix •243
0 to 4 years 5 to 8 years 1 to 3 years 4 years 1 to 3 years4 years or
more
25 years and older
Male
2016 1,183 3,513 7,144 30,780 26,468 34,283 (NA)
2015 1,243 3,669 7,278 30,997 25,778 32,923 (NA)
2014 1,184 3,761 7,403 30,718 25,430 32,095 (NA)
2013 1,127 3,836 7,314 30,014 25,283 31,731 (NA)
2012 1,237 3,879 7,388 30,216 24,632 30,766 (NA)
2011 1,234 3,883 7,443 30,370 24,319 29,971 (NA)
2010 1,279 3,931 7,705 30,682 23,570 29,158 (NA)
2009 1,372 4,027 7,754 30,025 23,634 28,706 (NA)
2008 1,310 4,136 7,853 29,491 23,247 28,433 (NA)
2007 1,458 4,249 8,294 29,604 22,219 27,596 (NA)
2006 1,472 4,395 7,940 29,380 22,136 26,910 (NA)
2005103,372
101,887
100,592
99,305
98,119
97,220
96,325
95,518
94,470
93,421
92,233
90,899 1,505 4,402 7,787 29,151 21,794 26,259 (NA)Table A-1. Years of school completed by people 25 years and over, by age and sex:  selected years 1940 to 2016
(Numbers in thousands. Noninstitutionalized population except where otherwise specified.)
Elementary High school CollegeYears of school completed
TotalMedianAge, sex,
and years
Figure A.2: Untidy data from the census.
HadleyW ickhamnotesfivemainwaystablesofdatatendnot
tobetidy:
1. Columnheadersarevalues,notvariablenames.
2. Multiplevariablesarestoredinonecolumn.
3. Variablesarestoredinbothrowsandcolumns.
4. Multiple types of observational units are stored in the same
table.
5. Asingleobservationalunitisstoredinmultipletables.
Da taco mesinanun tidyfo rmallthetime,o ftenfo rthegood
reason that it can be presented that way using much less space,
or with far less repetition of labels and row elements. Figure A.2
s h o w sat h efi r s tf e wr o w so fat a b l eo fU . S .C e n s u sB u r e a ud a t a
abouteducationalattainmentintheUnitedStates. Tobeginwith,
it’s organized as a series of subtables down the spreadsheet, bro-
kenoutbyageandsex.Second,theunderlyingvariableofinterest,
“Years of School Completed,” is stored across several columns,
withanadditionalvariable(levelofschooling)includedacrossthe
columnsalso.Itisnothardtogetthetableintoaslightlymorereg-
ular format by eliminating the blank rows and explicitly naming
the subtable rows. One can do this manually and get to the point
where it can be read in as an Excel or CSV file. This is not ideal,


------------------------


244 •Appendix
as manually cleaning data runs against the commitment to do as
much as possible programmatically. We can automate the process readxl.tidyverse.org
somewhat. The tidyverse comes with a readxlpackage that tries
toeasethepain.
## # A tibble: 366 x 11
## age sex year total elem4 elem8 hs3 hs4 coll3 coll4 median## <chr> <chr> <int> <int> <int> <int> <dbl> <dbl> <dbl> <dbl> <dbl>
## 1 25-34 Male 2016 21845 116 468 1427. 6386. 6015. 7432. NA
## 2 25-34 Male 2015 21427 166 488 1584. 6198. 5920. 7071. NA## 3 25-34 Male 2014 21217 151 512 1611. 6323. 5910. 6710. NA## 4 25-34 Male 2013 20816 161 582 1747. 6058. 5749. 6519. NA
## 5 25-34 Male 2012 20464 161 579 1707. 6127. 5619. 6270. NA
## 6 25-34 Male 2011 20985 190 657 1791. 6444. 5750. 6151. NA## 7 25-34 Male 2010 20689 186 641 1866. 6458. 5587. 5951. NA## 8 25-34 Male 2009 20440 184 695 1806. 6495. 5508. 5752. NA
## 9 25-34 Male 2008 20210 172 714 1874. 6356. 5277. 5816. NA
## 10 25-34 Male 2007 20024 246 757 1930. 6361. 5137. 5593. NA## # ... with 356 more rows
The tidyverse has several tools to help you get the rest of the
w a yi nc o n v e rti n gy o u rd a tafr o ma nu n ti d yt oati d ys ta t e .T h e se
can mostly be found in the tidyrand dplyrpackages. The for-
mer provides functions for converting, for example, wide-formatdata to long-format data, as well as assisting with the business ofsplittingandcombiningvariablesthatareuntidilystored.Thelat-
terhastoolsthatallowtidytablestobefurtherfiltered,sliced,and
analyzed at different grouping levels, as we have seen throughoutthisbook.
With our
eduobject, we can use the gather() function to
transform the schooling variables into a key-value arrangement.
T h ek e yi st h eu n d e r l y i n gv a r i a b l e ,a n dt h ev a l u ei st h ev a l u eit takes for that observation. We create a new object,
edu_tin
thisway.
edu_t ←gather (data = edu,
key = school,
value = freq,
elem4 :coll4)
head (edu_t)


------------------------


Appendix •245
## # A tibble: 6 x 7
## age sex year total median school freq## <chr> <chr> <int> <int> <dbl> <chr> <dbl>## 1 25-34 Male 2016 21845 NA elem4 116.
## 2 25-34 Male 2015 21427 NA elem4 166.
## 3 25-34 Male 2014 21217 NA elem4 151.## 4 25-34 Male 2013 20816 NA elem4 161.
## 5 25-34 Male 2012 20464 NA elem4 161.
## 6 25-34 Male 2011 20985 NA elem4 190.
tail (edu_t)
## # A tibble: 6 x 7
## age sex year total median school freq## <chr> <chr> <int> <int> <dbl> <chr> <dbl>## 1 55> Female 1959 16263 8.30 coll4 688.
## 2 55> Female 1957 15581 8.20 coll4 630.
## 3 55> Female 1952 13662 7.90 coll4 628.## 4 55> Female 1950 13150 8.40 coll4 436.## 5 55> Female 1947 11810 7.60 coll4 343.
## 6 55> Female 1940 9777 8.30 coll4 219.
Theeducationalcategoriespreviouslyspreadoverthecolumns
have been gathered into two new columns. The schoolvariable
is thekeycolumn. It contains all the education categories that
were previously given across the column headers, from zero tofour years of elementary school to four or more years of college.
T h e ya r en o ws t a c k e du po nt o po fe a c ho t h e ri nt h er o w s .T h e
freqvariableisthe valuecolumnandcontainstheuniquevalueof
schooling for each level of that variable. Once our data is in this
l o n g - f o r ms h a p e ,i ti sr e a d yf o re a s yu s ew i t hg g p l o ta n dr e l a t e d
tidyversetools.
2 Common Problems Reading in Data
Date formats
Date formats can be annoying. First, times and dates must betreateddifferentlyfromordinarynumbers.Second,therearemanydifferent date formats, differing both in the precision with which


------------------------


246 •Appendix
t h e ya r es t o r e da n di nt h ec o n v e n t i o nt h e yf o l l o wa b o u th o wt o
display years, months, days, and so on. Consider the following
data:
head (bad_date)
## # A tibble: 6 x 2
## date N
## <chr> <int>
## 1 9/1/11 44426
## 2 9/2/11 55112
## 3 9/3/11 19263
## 4 9/4/11 12330
## 5 9/5/11 8534
## 6 9/6/11 59490
The data in the datecolumn has been read in as a character
string, but we want R to treat it as a date. If can’t treat it as a date,
wegetbadresults(fig.A.3).N60000
40000
20000
9/1/11 9/10/11 9/2/11 9/3/11 9/4/11 9/5/11 9/6/11 9/7/11 9/8/11 9/9/11
Date
Figure A.3: A bad date.
p←ggplot (data = bad_date, aes(x= date, y= N))
p+geom_line ()
## geom_path: Each group consists of only one observation.
## Do you need to adjust the group aesthetic?
Whathashappened?Theproblemisthatggplotdoesn’tknow
dateconsists of dates. As a result, when we ask to plot it on the
x-axis, it tries to treat the unique elements of datelike a categor-
ical variable instead. (That is, as a factor.) But because each date
is unique, its default effort at grouping the data results in every
grouphavingonlyoneobservationinit(i.e.,thatparticularrow).
The ggplot function knows something is odd about this and tries
t ol e ty o uk n o w .I tw o n d e r sw h e t h e rw e ’ v ef a i l e dt os e t group =
<something> inourmapping.60000
DateN40000
20000
9/1/11 9/10/11 9/2/11 9/3/11 9/4/11 9/5/11 9/6/11 9/7/11 9/8/11 9/9/11
Figure A.4: Still bad. For the sake of it, let’s see what happens when the bad date
valuesare notunique.Wewillmakeanewdataframebystacking
twocopiesofthedataontopofeachother .The rbind()function
doesthisfo rus.W eendu pinfigur eA.4wi thtwoco p ieso fevery
observation.


------------------------


Appendix •247
bad_date2 ←rbind (bad_date, bad_date)
p←ggplot (data = bad_date2, aes(x= date, y= N))
p+geom_line ()
Now ggplot doesn’t complain at all, because there’s more
than one observation per (inferred) group. But the plot is still
wrong!
Wewillfixthisproblemusingthe lubridate package.Itpro-
vides a suite of convenience functions for converting date strings
i nv a r i o u sf o r m a t sa n dw i t hv a r i o u ss e p a r a t o r s( s u c ha s /or-)
intoobjectsofclass Datethat R knows about. Here our bad dates
are in a month/day/year format, so we use mdy().C o n s u l tt h e
lubridate package’s documentation to learn more about similar
convenience functions for converting character strings where the
datecomponentsappearinadifferentorder.
Sep 0260000N40000
20000
Sep 04 Sep 06 Sep 08 Sep 10
Date
Figure A.5: Much better.# install.packages( 'lubridate ')
library (lubridate)
bad_date $date ←mdy(bad_date $date)
head (bad_date)
## # A tibble: 6 x 2
## date N
## <date> <int>
## 1 2011-09-01 44426
## 2 2011-09-02 55112
## 3 2011-09-03 19263
## 4 2011-09-04 12330
## 5 2011-09-05 8534
## 6 2011-09-06 59490
Now datehasa Dateclass.Let’strytheplotagain(fig.A.5).
p←ggplot (data = bad_date, aes(x= date, y= N))
p+geom_line ()


------------------------


248 •Appendix
Year-only dates
Manyvariablesaremeasuredbytheyearandsuppliedinthedata
a saf o u r - d i g i tn u m b e rr a t h e rt h a na sad a t e .T h i sc a ns o m e t i m e s
cause headaches when we want to plot year on the x-axis. It hap-
pensmostoftenwhenthetimeseriesisrelativelyshort. Consider
thisdata:
url←"https://cdn.rawgit.com/kjhealy/viz-organdata/master/organdonation.csv"
bad_year ←read_csv (url)
bad_year %>% select (1:3)%>% sample_n (10)
## # A tibble: 10 x 3
## country year donors
## <chr> <int> <dbl>
## 1 United States 1994 19.4
## 2 Australia 1999 8.67
## 3 Canada 2001 13.5
## 4 Australia 1994 10.2
## 5 Sweden 1993 15.2
## 6 Ireland 1992 19.5
## 7 Switzerland 1997 14.3
## 8 Ireland 2000 17.6
## 9 Switzerland 1998 15.4
## 10 Norway NA NA
This is a version of organdata b u tinal e s sc l ea nf o rm a t .T h e
yearvariable is an integer (its classis <int>) and not a date. Let’s
saywewanttoplotdonationrateagainstyear.
p←ggplot (data = bad_year, aes(x= year, y= donors))
p+geom_point ()
1992.5102030Donors
1995.0 1997.5 2000.0 2002.5
Year
Figure A.6: Integer year shown with a decimal point.The decimal point on the x-axis labels in figure A.6 is un-
wanted. We could sort this out cosmetically, by giving scale_x_
continuous() asetof breaksandlabelsthatrepresenttheyears
as characters. Alternatively, we can change the class of the year
variable. For convenience, we will tell R that the yearvariable


------------------------


Appendix •249
should be treated as a date measure and not an integer. We’ll use
a home-cooked function, int_to_year() ,t h a tt a k e si n t e g e r sa n d
convertsthemtodates.
bad_year $year ←int_to_year (bad_year $year)
bad_year %>% select (1:3)
## # A tibble: 238 x 3
## country year donors
## <chr> <date> <dbl>## 1 Australia NA NA## 2 Australia 1991-01-01 12.1
## 3 Australia 1992-01-01 12.4
## 4 Australia 1993-01-01 12.5## 5 Australia 1994-01-01 10.2## 6 Australia 1995-01-01 10.2
## 7 Australia 1996-01-01 10.6
## 8 Australia 1997-01-01 10.3## 9 Australia 1998-01-01 10.5## 10 Australia 1999-01-01 8.67
## # ... with 228 more rows
Intheprocess,today’sdayandmonthareintroducedintothe
year data, but that is irrelevant in this case, given that our data is
observed only in a yearly window to begin with. However, if you
wish to specify a generic day and month for all the observations,thefunctionallowsyoutodothis.
Write functions for repetitive tasks
I fy o ua r ew o r k i n gw i t had a t a s e tt h a ty o uw i l lb em a k i n gal o to fsimilarplotsfromorwillneedtoperiodicallylookatinawaythatisrepetitivebutcan’tbecarriedoutinasinglesteponceandforall,
then the chances are that you will start accumulating sequences
of code that you find yourself using repeatedly. When this hap-pens, the temptation will be to start copying and pasting thesesequences from one analysis to the next. We can see something
of this tendency in the code samples for this book. To make the
exposition clearer, we have periodically repeated chunks of code


------------------------


250 •Appendix
that differ only in the dependent or independent variable being
plotted.
Trytoavoidcopyingandpastingcoderepeatedlyinthisway.
Instead,thisisanopportunitytowriteafunctiontohelpyououtalittle. Almost everything in R is accomplished through functions,and it’s not difficult to write your own. This is especially the case
w h e ny o ub e g i nb yt h i n k i n go ff u n c t i o n sa saw a yt oh e l py o u
automatesomelocalorsmallertaskratherthanameansofaccom-plishing some very complex task. R has the resources to help you
build complex functions and function libraries, like ggplot itself.
Butwecanstartquitesmall,withfunctionsthathelpusmanageaparticulardatasetordataanalysis.
Remember,functionstake inputs,perform actions,andreturn
outputs. Forexample, imagineafunctionthataddstwonumbers,
xandy.Inuse,itmightlooklikethis:
add_xy (x= 1,y= 7)
## [1] 8
How do we createthis function? Remember, everything is an
object,sofunctionsarejustspecialkindsofobject.Andeverything
inRisdoneviafunctions. Soifwewanttomakeanewfunction,wewilluseanexistingfunctiontodoit.InR,functionsarecreated
with
function() :
add_xy ←function (x, y) {
x+y
}
You can see that function() isalittledifferentfromordinary
functions in two ways. First, the arguments we give it (here, x
and y)a r ef o rt h e add_xyfunction that we are creating.S e c o n d ,
immediatelyafterthe function(x, y) statementthere’sanopen-
ingbrace, {,followedbyabitofRcodethataddsxandy,andthen
the closing brace }. That’s the content of the function. We assign
this code to the add_xyobject, and now we have a function that
addstwonumberstogetherandreturnstheresult.The x+yline
insidetheparenthesesisevaluatedasifitweretypedattheconsole,
assumingyouhavetolditwhat xandyare.


------------------------


Appendix •251
add_xy (x= 5,y= 2)
## [1] 7
Functionscantakemanykindsofarguments,andwecanalso
tell them what the default value of each argument should be byspecifyingitinsidethe
function(...) section.Functionsarelittle
programs that have all the power of R at their disposal, including
standardthingslikeflow-controlthrough if ... else statements
andsoon.Here,forinstance,isafunctionthatwillmakeascatter-p l o tf o ra n ys e c t i o ni nt h eA S Ad a t a ,o ro p t i o n a l l yfi tas m o o t h e r
tothedataandplotthatinstead.Definingafunctionlooksalittle
like calling one, except that we spell out the steps inside. We alsospecifythedefaultarguments.
plot_section ←function (section= "Culture" ,x= "Year" ,
y= "Members" ,data = asasec,
smooth= FALSE ){
require (ggplot2)
require (splines)
# Note use of aes_string() rather than aes()
p←ggplot (subset (data, Sname ==section),
mapping = aes_string (x=x,y=y))
if(smooth ==TRUE ){
p0←p+geom_smooth (color = "#999999" ,
size = 1.2,method = "lm" ,
formula = y~ns(x, 3))+
scale_x_continuous (breaks = c(seq(2005 ,2015 ,4))) +
labs (title = section)
}else {
p0←p+geom_line (color= "#E69F00" ,size= 1.2)+
scale_x_continuous (breaks = c(seq(2005 ,2015 ,4))) +
labs (title = section)
}
print (p0)
}
Thisfunctionisnotverygeneral.Norisitparticularlyrobust.
Butfortheusewewanttoputitto(fig.A.7)itworksjustfine.


------------------------


252 •Appendix
Figure A.7: Using a function to plot your results. 190RationalityMembers170
150
2005 2009 2013
Year600Sexualities
2005 2009 2013YearMembers550
500
450
400
350
plot_section ("Rationality" )
plot_section ("Sexualities" ,smooth = TRUE )
If we were going to work with this data for long enough, we
couldmakethefunctionprogressivelymoregeneral.Forexample,
we can add the special ...argument (which means, roughly,
“andanyothernamedarguments”)toallowustopassarguments
throughtothe geom_smooth() function(fig.A.8)inthewaywe’d
expectifwewereusingitdirectly.Withthatinplace,wecanpick
thesmoothingmethodwewant.
plot_section ←function (section= "Culture" ,x= "Year" ,
y= "Members" ,data = asasec,
smooth= FALSE , ...){
require (ggplot2)
require (splines)
# Note use of aes_string() rather than aes()
p←ggplot (subset (data, Sname ==section),
mapping = aes_string (x=x,y=y))
if(smooth ==TRUE ){
p0←p+geom_smooth (color = "#999999" ,
size = 1.2, ...) +
scale_x_continuous (breaks = c(seq(2005 ,2015 ,4))) +
labs (title = section)
}else {
p0←p+geom_line (color= "#E69F00" ,size= 1.2)+
scale_x_continuous (breaks = c(seq(2005 ,2015 ,4))) +
labs (title = section)
}
print (p0)
}


------------------------


Appendix •253
Comm/UrbanMembers700
600
2005 2009 2013
YearChildrenMembers440
430
420
410
400
390
2005 2009 2013
YearFigure A.8: Our custom function can now pass
arguments along to fit different smoothers to
section membership data.
plot_section ("Comm/Urban" ,
smooth = TRUE ,
method = "loess" )
plot_section ("Children" ,
smooth = TRUE ,
method = "lm" ,
formula = y~ns(x, 2))
3 Managing Projects and Files
RMarkdown and knitr
Markdownisalooselystandardizedwa yofwritingplaintexttha t en.wikipedia.org/wiki/Markdown
includes information about the formatting of your document. It
was originally developed by John Gruber, with input from Aaron
Swartz. The aim was to make a simple format that could incor-
porate some structural information about the document (such as
headings and subheadings, emphasis, hyperlinks, lists, and foot-
noteswithminimallossofreadabilityinplain-textform.Aplain-
text format like HTML is much more extensive and well defined
thanMarkdown,butMarkdownwasmeanttobesimple.Overthe
years, and despite various weaknesses, it has become a de facto
standard.Texteditorsandnote-takingapplicationssupportit,and
tools exist to convert Markdown not just into HTML (its original
targetoutputformat)butintomanyotherdocumenttypesaswell.
The most powerful of these is Pandoc, which can get you from pandoc.org
Markdowntomanyotherformats(andviceversa).Pandociswhat
powersRStudio’sabilitytoconvertyournotestoHTML,Microsoft
Word,andPDFdocuments.


------------------------


254 •Appendix
C h a p t e r1e n c o u r a g e dy o ut ot a k en o t e sa n do r g a n i z ey o u r
analysis using RMarkdown and (behind the scenes) knitr. These rmarkdown.rstudio.com
yihui.name/knitr are R libraries that RStudio makes easy to use. RMarkdown
extends Markdown by letting you intersperse your notes withch unksofRcode.Codech unkscanha velabelsandafewoptionsthat determine how they will behave when the file is processed.
After writing your notes and your code, you
knitthe document
(Xie 2015). That is, you feed your .Rmdfile to R, which processes
the code chunks and produces a new .mdwhere the code chunks
havebeenreplacedbytheiroutput.YoucanthenturnthatMark-
down file into a more readable PDF or HTML document, or theWorddocumentthatajournaldemandsyousendthem.
BehindthescenesinRStudio,thisisalldoneusingthe
knitr
andrmarkdown libraries. The latter provides a render() function
thattakesyoufrom .Rmdto HTML or PDF in a single step. Con-
versely ,ifyoujustwanttoextractthecodeyou’vewrittenfromthesurroundingtext,thenyou“tangle”thefile,whichresultsinan
.R
file. The strength of this approach is that is makes it much easiertodocumentyourworkproperly.Thereisjustonefileforboththedataanalysisandthewriteup.Theoutputoftheanalysisiscreatedon the fly, and the code to do it is embedded in the paper. If you
needtodomultiplebutidentical(orverysimilar)analysesofdif-
ferent bits of data, RMarkdown and
knitrcan make generating
consistentandreliablereportsmucheasier.
Pandoc’ sflavorofMarkdownistheoneusedinknitrandRStu-
dio. It allows for a wide range of markup and can handle many
of the nuts and bolts of scholarly writing, such as complex tables,citations, bibliographies, references, and mathematics. In addi-tiontobeingabletoproducedocumentsinvarious fileformats,it
can also produce many different kindsof document, from articles
and handouts to websites and slide decks. RStudio’s RMarkdownwebsite has extensive documentation and examples on the insand outs of RMarkdown’s capabilities, including information on
customizingitifyouwish.
Writingyournotesandpapersinaplain-textformatlikethis
has many advantages. It keeps your writing, your code, and yourresultsclosertogetherandallowsyoutousepowerfulversioncon-
t r o lm e t h o d st ok e e pt r a c ko fy o u rw o r ka n dy o u rr e s u l t s .E r r o r s
in data analysis often well up out of the gap that typically existsbetweentheprocedureusedtoproduceafigureortableinapaperandthesubsequentuseofthatoutputlater.Intheordinarywayof
d o i n gth i n g s ,y o uh a v eth ec od ef o ry o u rda taa n al y s i si no n efil e ,


------------------------


Appendix •255
th eo u t p u ti tp r od ucedina n o th e r ,a n dth et e xto fy o urpa pe rina
thirdfile.Youdotheanalysis,collecttheoutput,andcopytherele-
vantresultsintoyourpaper,oftenmanuallyreformattingthemon
the way. Each of these transitions introduces the opportunity fore r r o r .I np a r t i c u l a r ,i ti se a s yf o rat a b l eo fr e s u l t st og e td e t a c h e dfrom the sequence of steps that produced it. Almost everyone
who has written a quantitative paper has been confronted with
the problem of reading an old draft containing results or figuresthatneedtoberevisitedorreproduced(asaresultofpeerreview,
say) but which lack any information about the circumstances of
their creation. Academic papers take a long time to get throughthe cycle of writing, review, revision, and publication, even whenyou’re working hard the whole time. It is not uncommon to have
to return to something you did two years previously in order to
answer some question or other from a reviewer. You do not wanttohavetodoeverythingoverfromscratchinordertogettherightanswer.Whateverthechallengesofreplicatingtheresultsofsome-
one else’s quantitative analysis, after a fairly short period of time
authorsthemselvesfindithardtoreplicatetheir ownwork.Bit-rot
isthetermofartincomputersciencefortheseeminglyinevitableprocess of decay that overtakes a project just because you left it
aloneonyourcomputerforsixmonthsormore.
For small and medium-sized projects, plain-text approaches
thatrelyonRMarkdowndocumentsandthetoolsdescribedhereworkwell.Thingsbecomealittlemorecomplicatedasprojectsget
larger. (This is not an intrinsic flaw of plain-text methods, by the
way.Itistruenomatterhowyouchoosetoorganizeyourproject.)In general, it is worth trying to keep your notes and analysis ina standardized and simple format. The final outputs of projects
(suchasjournalarticlesorbooks)tend,astheyapproachcomple-
tion, to descend into a rush of specific fixes and adjustments, allrunningagainsttheidealofafullyportable,reproducibleanalysis.It is worth trying to minimize the scope of the inevitable final
scramble.
Project organization
Managing projects is a large topic of its own, about which manypeople have strong opinions. Your goal should be to make your
code and data portable, reproducible, and self-contained. Toaccomplish this, use a project-based approach in RStudio. When


------------------------


256 •Appendix
you start an analysis with some new data, create a new project
containing the data and the R or RMarkdown code you will be
workingwith.Itshouldthenbepossible,intheidealcase,tomove
that folder to another computer that also has R, RStudio, and anyrequiredlibrariesinstalled,andsuccessfullyrerunthecontentsoftheproject.
In practice that means two things. First, even though R is an
object-orientedlanguage,theonly“real,”persistentthingsinyourprojectshouldbetherawdatafilesyoustartwithandthecodethat
operatesonthem.Thecodeiswhatisreal.Yourcodemanipulates
thedataandcreatesalltheobjectsandoutputsyouneed.It’spos-sibletosaveobjectsinR,butingeneralyoushouldnotneedtodothisforeverydayanalysis.
S e c o n d ,y o u rc o d es h o u l dn o tr e f e rt oa n yfi l el o c a t i o n so u t -
s i d eo ft h ep r o j e c tf o l d e r .T h ep r o j e c tf o l d e rs h o u l db et h e“ r o o t ”or ground floor for the files inside it. This means you should notuseabsolutefi l ep a t h st os a v eo rr e f e rt od a t ao rfi g u r e s .I n s t e a d ,
use onlyrelativepaths. A relative path will start at the root of the
project.So,forexample,youshouldnotloaddatawithacommandlikethis:
## An absolute ﬁle path. Notice the leading '/'that starts
## at the very top of the computer 's ﬁle hierarchy.
my_data ←read_csv ("/Users/kjhealy/projects/gss/data/gss.csv" )
Instead, because you have an R project file started in the gss
folder,youcanusethe here()librarytospecifyarelativepath,like
this:
my_data ←read_csv (here ("data" ,"gss.csv" ))
While you could type the relative paths out yourself, using
here()has the advantage that it will work if, for example, you
use Mac OS and you send your project to someone working on
W i n d o w s .T h es a m eru l eg o e sf o rs a v i n gy o u rw o r k ,a sw es a wa tt h ee n do fc h a p t e r3 ,w h e ny o us a v ei n d i v i d u a lp l o t sa sP D Fo rPNGfiles.
Within your project folder, a little organization goes a long
way. You should get in the habit of keeping different parts of theprojectindifferentsubfoldersofyourworkingdirectory(fig.A.9).More complex projects may have a more complex structure, but
youcangoalongwaywithsomesimpleorganization.RMarkdown
filescanbeinthetoplevelofyourworkingdirectory,withseparate


------------------------


Appendix •257
Figure A.9: Folder organization for a simple project.
subfolderscalled data/(foryourCSVfiles),onefor ﬁgures/(that
you might save), and perhaps one called docs/for information
aboutyourprojectordatafiles.Rstudiocanhelpwithorganization
aswellthroughitsprojectmanagementfeatures.
Keepingyourprojectorganizedwillpreventyoufromending
up with huge numbers of files of different kinds all sitting at the
topofyourworkingdirectory.
4 Some Features of This Book
Preparing the county-level maps
The U.S. county-level maps in the socvizlibrary were prepared
usingshapefilesfromtheU.S.CensusBureauthatwereconverted
to GeoJSON format by Eric Celeste. The code to prepare the eric.clst.org/Stuff/USGeoJSON
imported shapefile was written by Bob Rudis and draws on the
rgdall i b r a r yt od ot h eh e a v yl i ft i n go fi m p o r t i n gt h es h a p e fi l e
andtransformingtheprojection.Bob’scodeextractsthe(county-
identifying) rownames from the imported spatial data frame and
thenmovesAlaskaandHawaiitonewlocationsinthebottomleft
ofthemapareasothatwecanmapallfiftystates.
First we read in the map file, set the projection, and set up
an identifying variable we can work with later on to merge in
data. The call to CRS()is a single long line of text conforming
to a technical GIS specification defining the projection and other
details that the map is encoded in. Long lines of code are con-
ventionally indicated by the backslash character, “ \,” when we
havetoartificiallybreakthemonthepage.Donottypetheback-
slashifyouwriteoutthiscodeyourself.Weassumethemapfileis
named gz_2010_us_050_00_5m.json andisinthe data/geojson
subfolderoftheprojectdirectory .


------------------------


258 •Appendix
# You will need to use install.packages() to install
# these map and GIS libraries if you do not already
# have them.
library (maptools)
library (mapproj)
library (rgeos)
library (rgdal)
us_counties ←readOGR (dsn= "data/geojson/gz_2010_us_050_00_5m.json" ,
layer= "OGRGeoJSON" )
us_counties_aea ←spTransform (us_counties,
CRS("+proj=laea +lat_0=45 +lon_0=-100 \
+x_0=0 +y_0=0 +a=6370997 +b=6370997 \+units=m +no_defs" ))
us_counties_aea @data $id←rownames (us_counties_aea @data)
With the file imported, we then extract, rotate, shrink, and
moveAlaska,resettingtheprojectionintheprocess.Wealsomove
Hawaii. The areas are identified by their state FIPS codes. Weremove the old states and put the new ones back in, and removePuerto Ricoasourexamples lackdatafor thisregion. Ifyouhave
dataforthearea,youcanmoveitbetweenTexasandFlorida.
alaska ←us_counties_aea[us_counties_aea $STATE =="02" ,]
alaska ←elide (alaska, rotate = -50)
alaska ←elide (alaska, scale = max(apply (bbox (alaska), 1, diff)) /2.3)
alaska ←elide (alaska, shift = c(-2100000 ,-2500000 ))
proj4string (alaska) ←proj4string (us_counties_aea)
hawaii ←us_counties_aea[us_counties_aea $STATE =="15" ,]
hawaii ←elide (hawaii, rotate = -35)
hawaii ←elide (hawaii, shift = c(5400000 ,-1400000 ))
proj4string (hawaii) ←proj4string (us_counties_aea)
us_counties_aea ←us_counties_aea[ !us_counties_aea $STATE %in%
c("02" ,"15" ,"72" ), ]
us_counties_aea ←rbind (us_counties_aea, alaska, hawaii)


------------------------


Appendix •259
Finally,wetidythespatialobjectintoadataframethatggplot
canuseandcleanupthe idlabelbystrippingoutaprefixfromthe
string.
county_map ←tidy (us_counties_aea, region = "GEO_ID" )
county_map $id←stringr ::str_replace (county_map $id,
pattern = "0500000US" ,replacement = "")
Atthispointthe county_map objectisreadytobemergedwith For more detail and code for the merge, see
github.com/kjhealy/us-countya table of FIPS-coded U.S. county data using either merge()or
left_join() .WhileIshowthesestepsindetailhere,theyarealso
convenientlywrappedasfunctionsinthetidycensuslibrary.
This book’s plot theme, and its map theme
The ggplot theme used in this book is derived principally fromthe work (again) of Bob Rudis. His
hrbrthemes package pro-
vides theme_ipsum() , acompactthemethatcanbeusedwiththe
Arial typeface or, in a variant, the freely available Roboto Con-
densed typeface. The main difference between the theme_book()
usedhereandRudis’s theme_ipsum() isthechoiceoftypeface.The
hrbrthemes package can be installed from GitHub in the usual
way:
devtools ::install_github ("hrbrmstr/hrbrthemes" )
T h eb o o k ’ st h e m ei sa l s oa v a i l a b l eo nG i t H u b .T h i sp a c k a g e github.com/kjhealy/myriad
doesnotincludethefontfilesthemselves.Theseareavailablefrom
Adobe,whichmakesthetypeface.
W h e nd r a w i n gm a p sw ea l s ou s e da theme_map() function.
Thisthemebeginswiththebuilt-in theme_bw() andturnsoffmost
oftheguide,scale,andpanelcontentthatisnotneededwhenpre-sentingamap.Itisavailablethroughthe
socvizlibrary.Thecode
lookslikethis:
theme_map ←function (base_size= 9,base_family= ""){
require (grid)
theme_bw (base_size= base_size, base_family= base_family) %+replace%
theme (axis.line= element_blank (),
axis.text= element_blank (),


------------------------


260 •Appendix
axis.ticks= element_blank (),
axis.title= element_blank (),
panel.background= element_blank (),
panel.border= element_blank (),
panel.grid= element_blank (),
panel.spacing= unit (0,"lines" ),
plot.background= element_blank (),
legend.justiﬁcation = c(0,0),
legend.position = c(0,0)
)
}
Themesarefunctions.Creatingathememeanswritingafunc-
tionwithasequenceofinstructionsaboutwhatthematicelementsto modify, and how. We give it a default
base_size argument
and an empty base_family argument (for the font family). The
%+replace% operatorinthecodeisnewtous.Thisisaconvenience
operatordefinedbyggplotandusedforupdatingthemeelementsin bulk. Throughout the book we saw repeated use of the
+oper-
ator to incrementally add to or tweak the content of a theme, as
whenwewoulddo + theme(legend.position = "top") .Using +
addedtheinstructiontothetheme,adjustingwhateverwasspeci-
fiedandleavingeverythingelseasitwas.The %+replace% operator
does something similar but has a stronger effect. We begin with
theme_bw() and then use a theme()statement to add new con-
tent,asusual.The %+replace% operatorreplacestheentireelement
specified,ratherthanaddingtoit.Anyelementnotspecifiedinthe
theme()statementwillbedeletedfromthenewtheme.Sothisisa
waytocreatethemesbystartingfromexistingones,specifyingnew
elements,anddeletinganythingnotexplicitlymentioned.Seethedocumentation for
theme_get() for more details. In thefunction
here, you can see each of the thematic elements that are switched
offusingthe element_blank() function.


------------------------


References
Adelson, E. (1995). Checkershadow illusion . Perceptual Science Group @ MIT,
http://persci.mit.edu/gallery/checkershadow.
Ai, C., & Norton, E. C. (2003). Interaction terms in logit and probit models.
EconomicsLetters ,80,123–29.
Anderson, E. W., Potter, K. C., Matzen, L. E., Shepherd, J. F., Preston, G. A., &
Silva, C. T. (2011). A user study of visualization effectiveness using eeg and
cognitiveload.In Proceedingsof the13th Eurographics/ IEEE-VGT CConfer-
enceonVisualization (pp.791–800).Chichester,UK:EurographsAssociation;
Wiley.https://doi.org/10.1111/j.1467-8659.2011.01928.x
Anscombe, F. (1973). Graphs in statistical analysis. American Statistician ,27,
17–21.
Arnold,J.B.(2018). Ggthemes:Extrathemes,scalesandgeomsfor’ggplot2 .’https://
CRAN.R-project.org/package=ggthemes.
Baddeley,A.,Turner,R.,Rubak,E.,BerthelsenKasperKlitgaard,CronieOttmar,
Guan Yongtao, Hahn Ute, Jalilian Abdollah, Lieshout Marie-Colette van,
McSwiggan Greg, Rajala Thomas, Rakshit Suman, Schuhmacher Dominic,Waagepetersen Rasmus, Adepeju, M., Anderson, C., Ang, Q. W., Austenfeld,
M., Azaele, S., Baddeley, M., Beale, C., Bell, M., Bernhardt, R., Bendtsen,
T., Bevan, A., Biggerstaff, B., Bilgrau, A., Bischof, L., Biscio, C., Bivand, R.,Blanco Moreno, J. M., Bonneu, F., Burgos, J., Byers, S., Chang, Y. M., Chen,
J. B., Chernayavsky, I., Chin, Y. C., Christensen B., Coeurjolly J.-F., Colyvas
K., Constantine R., Corria Ainslie R., Cotton, R., de la Cruz M., Dalgaard P.,D’Antuono M., Das S., Davies T., Diggle P. J., Donnelly P., Dryden I., Eglen
S., El-Gabbas A., Fandohan B., Flores O., Ford E. D., Forbes P., Frank S.,
Franklin J., Funwi-Gabga N., Garcia O., Gault A., Geldmann J., Genton M.,Ghalandarayeshi S., Gilbey J., Goldstick J., Grabarnik P., Graf C., Hahn U.,
HardegenA.,HansenM.B.,HazeltonM.,HeikkinenJ.,HeringM.,Herrmann
M., Hewson P., Hingee K., Hornik K., Hunziker P., Hywood J., Ihaka R., IcosC.,JammalamadakaA.,John-ChandranR.,JohnsonD.,KhanmohammadiM.,
Klaver R., Kovesi P., Kozmian-Ledward L., Kuhn M., Laake J., Lavancier F.,
Lawrence T., Lamb R. A., Lee J., Leser G. P, Li H. T., Limitsios G., Lister A.,Madin B., Maechler M., Marcus J., Marchikanti K., Mark R., Mateu J., Mc-
Cullagh P., Mehlig U., Mestre F., Meyer S., Mi X. C., De Middeleer L., Milne
R. K., Miranda E., Moller J., Moradi M., Morera Pujol V., Mudrak E., Nair G.M.,NajariN.,NavaN.,NielsenL.S.,NunesF.,NyengaardJ.R.,Oehlschlaegel
J.,OnkelinxT.,O’RiordanS.,ParilovE.,PickaJ.,PicardN.,PorterM.,Protsiv
S., Raftery A., Rakshit S., Ramage B., Ramon P., Raynaud X., Read N., ReiterM., Renner I., Richardson T. O., Ripley B. D., Rosenbaum E., Rowlingson B.,
RudokasJ.,RudgeJ.,RyanC.,SafavimaneshF.,SarkkaA.,SchankC.,Schladitz
K., SchutteS., ScottB.T., SemboliO., SemecurbeF., ShcherbakovV., ShenG.C., Shi P., Ship H.-J., Silva T. L., Sintorn I.-M., Song Y., Spiess M., Stevenson
M., Stucki K., Sumner M., Surovy P., Taylor B., Thorarinsdottir T., Torres L.,
Turlach B., Tvedebrink T., Ummer K., Uppala M., van Burgel A., Verbeke T.,


------------------------


262 •References
Vihtakari M., Villers A., Vinatier F., Voss S., Wagner S., Wang H., Wendrock
H., Wild J., Witthoft C., Wong S., Woringer M., Zamboni M. E., Zeileis A.,
(2017).Spatstat: Spatial point pattern analysis, model-fitting, simulation, tests .
Retrievedfromhttps://CRAN.R-project.org/package=spatstat.
Bateman, S., Mandryk, R., Gutwin, C., Genest, A., McDine, D., & Brooks, C.
(2010). Useful junk? The effects of visual embellishment on comprehen-sion and memorability of charts. In ACM Conference on Human Factors in
ComputingSystems(chi2010) (pp.2573–82).Atlanta.
Bates,D.,&Maechler,M.(2015). MatrixModels:Modellingwithsparseanddense
matrices.https://CRAN.R-project.org/package=MatrixModels.
———. (2017). M a t r i x :S p a r s ea n dd e n s em a t r i xc l a s s e sa n dm e t h o d s . https://
CRAN.R-project.org/package=Matrix.
Bertin,J.(2010). Semiologyofgraphics .Redlands,CA:ESRIPress.
Borkin, M. A., Vo, A. A., Bylinskii, Z., Isola, P., Sunkavalli, S., Oliva, A., &
Pfister,H.(2013).Whatmakesavisualizationmemorable? IEEETransactions
onVisualizationandComputerGraphics(ProceedingsofInfoVis 2013).
Brambor,T.,Clark,W.,&Golder,M.(2006).Understandinginteractionmodels:
Improvingempiricalanalyses. PoliticalAnalysis ,14,63–82.
Brownrigg, R. (2017). Maps: Draw geographical maps . https://CRAN.R-project.
org/package=maps.
Brundson,C.,&Comber,L.(2015). Anintroduction to R forspatial analysis and
mapping.Londin:Sage.
Bryan,J.(2017). Gapminder: Data from gapminder .https://CRAN.R-project.org
/package=gapminder.
Cairo,A.(2013). Thefunctionalart:Anintroductiontoinformationgraphicsand
visualization .Berkeley,CA:NewRiders.
Chakrabarti, R., Haughwout, A., Lee, D., Scally, J., &Klaauw, W.vander. (2017,
April).Pressbriefingonhouseholddebt,withafocusonstudentdebt.Federal
ReserveBankofN ewY ork.
Chang,W.(2013). Rgraphicscookbook .Sebastopol,CA:O’ReillyMedia.
Chatterjee,S.,&Firat,A.(2007).Generatingdatawithidenticalstatisticsbutdis-
similargraphics: AfollowuptotheAnscombedataset. AmericanStatistician ,
61,248–54.
Cleveland,W.S.(1993). Theelementsofgraphingdata .Summit,NJ:HobartPress.
———.(1994). Visualizingdata .Summit,NJ:HobartPress.
Cleveland,W.S.,&McGill,R.(1984).Graphicalperception:Theory,experimen-
tation,andapplicationtothedevelopmentofgraphicalmethods. Journalofthe
AmericanStatisticalAssociation ,79,531–34.
———.Graphicalperception:Thevisualdecodingofquantitativeinformationon
graphicaldisplaysofdata. J o u rna lo ft heRo ya lS t a t is t ica lSocietySerie sA ,150,
192–229.
Codd, E. F. (1990). The relational model for database management: Version 2 .
Boston,MA:Addison-WesleyLongman.
Dalgaard, P. (2008). Introductory statistics with R (second edition). New York:
Springer.
Davies,T.M.(2016). ThebookofR .SanFrancisco:NoStarchPress.
Doherty, M. E., Anderson, R. B., Angott, A. M., & Klopfer, D. S. (2007). The
perceptionofscatterplots. Perception&Psychophysics ,69,1261–72.
Eddelbuettel, D. (2018). Tint: ‘Tint’ is not ‘Tufte.’
https://CRAN.R-project.org
/package=tint.


------------------------


References •263
Few, S. (2009). Now you see it: Simple visualization techniques for quantitative
analysis.Oakland,CA:AnalyticsPress.
Fox, J. (2014, December). The rise of the y-axis-zero fundamentalists. https://
byjustinfox.com/2014/12/14/the-rise-of-the-y-axis-zero-fundamentalists/.
Freedman Ellis, G. (2017). Srvyr: ‘Dplyr’-like syntax for summary statistics of
surveydata .https://CRAN.R-project.org/package=srvyr.
Friendly, M., & Meyer, D. (2017). Dis c r e t ed a t aa n a l y s iswi t hR . Boca Raton, FL:
CRC/Chapman;Hall.
Garnier, S. (2017). Viridis: Default color maps from ‘matplotlib’ (lite version) .
https://CRAN.R-project.org/package=viridisLite.
———.Viridis: Default color maps from ‘matplotlib’ . https://CRAN.R-project.org
/package=viridis.
Gelman, A. (2004). Exploratory data analysis for complex models. Journal of
ComputationalandGraphicalStatistics ,13,755–79.
Gelman,A.,&Hill,J.(2018). Regressionandotherstories .NewYork:Cambridge
UniversityPress.
Gould,S.J.(1991).Glow,bigglowworm.In Bullyforbrontosaurus:Reflectionsin
naturalhistory (pp.255–68).NewYork:Norton.
Harrell, F. (2016). Regression modeling strategies (Second edition). New York:
Springer.
Healy, K. (2018). S o cvi z :U t i l i t yf u n c t i o n sa n dd a t as e t sf o ras h o rtc o u r s ei nd a t a
visualization .https://github.com/kjhealy/socviz.
Healy, K., &Moody, J.(2014). Datavisualizationinsociology. Annual Review of
Sociology,40,105–28.
Heer, J., & Bostock, M. (2010). Crowdsourcing graphical perception: Using
mechanical turk to asse ss visualization design. In Proceedings of the Sigchi
Conference on Human Factors in Computing Systems (pp. 203–12). New York:
ACM.https://doi.org/10.1145/1753326.1753357.
Henry, L., & Wickham, H. (2017). Purrr: Functional programming tools . https://
CRAN.R-project.org/package=purrr.
Hewitt, C. (1977). The effect of political democracy and social democracy
on equality in industrial societies: A cross-national comparison. American
SociologicalReview ,42,450–64.
Imai, K. (2017). Quantitative social science: An introduction . Princeton, NJ:
PrincetonUniversityPress.
Isenberg, P., Bezerianos, A., Dragicevic, P., & Fekete, J.-D. (2011). A study
on dual-scale data charts. IEEE Transactions on Visualization and Computer
Graphics,17(12),2469–87.https://doi.org/10.1109/TVCG.2011.238.
Jackman, R. M. (1980). The impact of outliers on income inequality. American
SociologicalReview ,45,344–47.
Koenker, R. (2017). Quantreg: Quantile regression . https://CRAN.R-project.org
/package=quantreg.
Koenker, R., & Ng, P. (2017). SparseM: Sparse linear algebra . https://CRAN
.R-project.org/package=SparseM.
Lander, J. P. (2018). Coefplot: Plots coefficients from fitted models . https://CRAN
.R-project.org/package=coefplot.
Leeper, T. J. (2017). Margins: Marginal effects for model objects . https://CRAN
.R-project.org/package=margins.
Lumley, T. (2004). Analysis of complex survey samples. Journal of Statistical
Software,Articles ,9(8),1–19.https://doi.org/10.18637/jss.v009.i08.


------------------------


264 •References
———.(2010). Complexsurveys:AguidetoanalysisusingR .N ewY ork:W iley .
———. (2013). Dichromat: Color schemes for dichromats . https://CRAN.R
-project.org/package=dichromat.
———. (2017). Survey: Analysis of complex survey samples . https://CRAN.R
-project.org/package=survey.
Matloff,N.(2011). TheartofRprogramming .SanFrancisco:NoStarchPress.
Munzer,T.(2014). Visualizationanalysisanddesign .BocaRaton,FL:CRCPress.
Müller,K.(2017a). Bindrcpp: An’rcpp’interfacetoactivebindings .https://CRAN
.R-project.org/package=bindrcpp.
———. (2017b). Here: A simpler way to find your files . https://CRAN.R-project
.org/package=here.
Müller, K., & Wickham, H. (2018). Tibble: Simple data frames . https://CRAN
.R-project.org/package=tibble.
Nakayama,K.,&Joseph,J.S.(1998).Attention,patternrecognitionandpopout
in visual search. In R. Parasuraman (Ed.), The attentive brain (pp. 279–98).
Cambridge,MA:MITPress.
Neuwirth, E. (2014). RColorBrewer: ColorBrewer palettes . https://CRAN.R
-project.org/package=RColorBrewer.
Openshaw,S.(1983) TheM odifia bleA realU nitProblem .N orwich:GeoBooks.
Pebesma, E. (2018). Sf: Simple features for R . https://CRAN.R-project.org
/package=sf.
Peng,R.(2016). programmingfordatascience .http://leanpub.com/rprogramming.
Pinheiro,J.,Bates,D.,&R-core.(2017). Nlme:Linearandnonlinearmixedeffects
models.Retrievedfromhttps://CRAN.R-project.org/package=nlme.
Qiu,Y.,etal.(2018a). Sysfonts:LoadingfontsintoR .https://CRAN.R-project.org
/package=sysfonts.
———. (2018b). Showtext: Using fonts more easily in R graphs . https://CRAN
.R-project.org/package=showtext.
R Core Team. (2018). R: A language and environment for statistical comput-
ing. Vienna, Austria: R Foundation for Statistical Computing. https://www
.R-project.org/.
Rensink, R.A., &Baldridge, G.(2010). Theperceptionofcorrelationinscatter-
plots.ComputerGraphicsForum ,29,1203–10.
Ripley,B.(2017). MASS: Support functions and datasets for Venables and Ripley’s
mass.https://CRAN.R-project.org/package=MASS.
Robinson, D. (2017). Broom: Convert statistical analysis objects into tidy data
frames.https://CRAN.R-project.org/package=broom.
Rudis, B. (2015). Statebins: U.S. State cartogram heatmaps in R; An alterna-
tive to choropleth maps for USA states . https://CRAN.R-project.org/package
=statebins.
Ryan, J. A. (2007). Defaults: Create global function defaults . https://CRAN.R
-project.org/package=Defaults.
Salganik, M.J.(2018). B i tb yb i t:So ci a lr e se a r c hi nt h ed i gi t a la ge . Princeton, NJ:
PrincetonUniversityPress.
Sarkar, D. (2008). Lattice: Multivariate data visualization with R .N e wY o r k :
Springer.
Silge, J., & Robinson, D. (2017). Text mining with R . Sebastopol, CA: O’Reilly.
Media.
Slowikowski, K. (2017). Ggrepel: Repulsive text and label geoms for ’ggplot2.’
https://CRAN.R-project.org/package=ggrepel.


------------------------


References •265
Spinu, V., Grolemund, G., & Wickham, H.(2017). Lubridate: Make dealing with
da tesalittleeasier .https://CRAN.R-project.org/package=lubridate.
Taub, A. (2016). How stable are democracies? “Warning signs are flashing red.”
N ewY orkT imes .
Therneau, T. M. (2017). Survival: Survival analysis . https://CRAN.R-project.org
/package=survival.
Therneau,T.,&Atkinson,B.(2018). Rpart: Recursive partitioning and regression
trees.https://CRAN.R-project.org/package=rpart.
Treisman, A., & Gormican, S. (1988). Feature analysis in early vision: Evidence
fromsearchasymmetries. PsychologicalReview ,95,15–48.
Tufte, E. R. (1978). Political control of the economy . Princeton, NJ: Princeton
UniversityPress.
———. (1983). The visual display of quantitative information . Cheshire, CT:
GraphicsPress.
———.(1990). Envisioninginformation .Cheshire,CT:GraphicsPress.
———.(1997). Visualexplanations:Imagesandquantities,evidenceandnarrative .
Cheshire,CT:GraphicsPress.
Vanhove, J. (2016, November). What data patterns can lie behind a correlation
coefficient?https://janhove.github.io/teaching/2016/11/21/what-correlations
-look-like.
Venables,W.,&Ripley,B.(2002). ModernappliedstatisticswithS (fourthedition).
NewYork:Springer.
Wainer,H.(1984).Howtodisplaydatabadly. AmericanStatistician ,38,137–47.
Walker,K.(2018). AnalyzingtheUSCensuswithR .BocaRaton,FL:CRCPress.
Ware,C.(2008). Visualthinkingfordesign .Waltham,MA:Morgan
Kaufman.
———. (2013). Information visualization: Perception for design (third edition).
Waltham,MA:MorganKaufman.
Wehrwein,A.(2017).Plotinspirationviafivethirtyeight.http://www
.austinwehrwein.com/data-visualization/plot-inspiration-via-fivethirtyeight/.
Wickham, H. (2014). Tidy data. Journal of Statistical Software ,59(1), 1–23.
https://doi.org/10.18637/jss.v059.i10.
———.(2016). Ggplot2:Elegantgraphicsfordataanalysis .N ewY ork:Springer .
———.(2017a). Stringr:Simple,consistentwrappersforcommonstringoperations .
https://CRAN.R-project.org/package=stringr.
———.(2017b). Testthat:UnittestingforR .https://CRAN.R-project.org/package
=testthat.
———. (2017c). Tidyverse: Easily install and load the ‘tidyverse.’ https://CRAN.
R-project.org/package=tidyverse.
Wickham,H.,&Chang,W.(2017). Devtools:ToolstomakedevelopingRpackages
easier.https://CRAN.R-project.org/package=devtools.
———. (2018). G g p l o t 2 :C r e a t ee l e g a n td a t av i s u a l i s a t i o n su s i n gt h eg r a m m a ro f
graphics.http://ggplotz.tidyverse.org.
Wickham, H., & Grolemund, G. (2016). R for data science . Sebastopbol, CA:
O’ReillyMedia.
Wickham, H., & Henry, L. (2017). Tidyr: Easily tidy data with ‘spread()’ and
‘gather()’functions .https://CRAN.R-project.org/package=tidyr.
Wickham,H.,Francois,R.,Henry,L.,&Müller,K.(2017a). Dplyr:Agrammarof
datamanipulation .https://CRAN.R-project.org/package=dplyr.
Wickham, H., Hester, J., & Francois, R. (2017b). Readr: Read rectangular text
data.https://CRAN.R-project.org/package=readr.


------------------------


266 •References
Wilke,C.O.(2017). Ggridges:Ridgelineplotsin‘ggplot2.’ https://CRAN.R-project
.org/package=ggridges.
Wilkinson, L. (2005). The grammar of graphics (second edition). New York:
Springer.
Xie,Y.(2015). Dynamic documents with r and knitr (secondedition).NewYork:
Chapman;Hall.
———.(2017). Knitr:Ageneral-purposepackagefordynamicreportgenerationin
R.https://yihui.name/knitr/.
Zeileis, A., & Hornik, K. (2006). Choosing color palettes for statistical graphics
(Research Report Series / Department of Statistics and Mathematics No. 41).
Vienna, Austria: WU Vienna University of Economics; Business. http://epub.
wu.ac.at/1404/.


------------------------


Index
Note: functions, packages, and datasets discussed in the text are indexed in monospace
type.
%+replace% ,259–260
%>%,95–97,99–100,103,110–111,118,
132,147,149–150,152–156,160,162–165,170,175,183,190,204,212,217,248–249
%in%,87–88,121,123,145,148,163–165,
212,258
%nin%,148,156,167–168,176,182,190,
212
::,62–63<-,xviii,97. Seealsoassignment
operator
3-Dcharts,11–12,26
Adelson, Edward, 15
aes(),58,63–64,66,71,81,127,133,136,
251–252
aestheticmappings,16–17,26–28,55,58,
72;74,94–95;contrastedwithsetting63–65;errorsin,75;pergeom,66–67;representedonscales,67,126–129
Albersprojection,178,183alphaaesthetic,64–65
AmericanCommunitySurvey,198
AmericanSociologicalAssociation,199angles,12,20,24–27,35,101
annotate() ,124–126,132
Anscombe’squartet,2–3,5area,11,14–16,20–21,24,26–27,59,66,
83,86–88,124,142,146,173,175,182–183,186,189,198,218,231,257–258
argumentstofunctions,41–44,49,55,58,
61–62,64,93,98,124–125,138,142,167,208,212–214,227,235,250–253
as_labeller() ,227,229
asasec,199–200,251–252
assignmentoperator,40,58,97,241.
Seealso<-
augment() ,149–150
autoplot() ,169
axes,12,26,29,52,55,62–63,74,91,101,
105,114–115,130,177,200–201,207,215–216,218,220–222Bach,Michael,31
backtick,34,37,68–69,227badtaste,5barcharts,11–13,24–28,30,55,80–81,
83–86,89–90,100,109,165,221,224,227–228,230
basegraphics,169,215baselines,forgraphs,13,25,28–29,87,89,
230
bins(forhistograms),67,85–87,91,188,
192
boxplots,xiii,8,55,104–107,127,
133–134,148
brewer.pal() ,135,187,203
brightness,15–17,27,70broom,134,146–147,150–152,155,
169–170
businessanalysts,222
c(),39,41–43,46,238,242
Cartesiancoordinates,60,74,101,
143,178
cartography,198
CentersforDiseaseControl(CDC),
188–189
census,83,88,95,175–176,194–198,243,
257
censusregion,83,95,176,194Chang,Winston,xi,203,230chartjunk,6–9,11–13,27–28checkershadowillusion,15–16choroplethmaps,173,182,188,194chroma,17,202chrominance,17–18chunks,code,34,36–38,55,68–69,192,
239,249,254
classes,46–47,51,137–139,143,146,151Clevelanddotplot,28,109,113–114,224Cleveland,WilliamS.,23code,21,30,32–40,43,48–49,51–52,
55–56,72–75,77,80,95–97,99,102–103,106,111,119,123–124,131,133,139,143,146,152,154,177,183,231,235,237,239,249–250,254–260


------------------------


268 •Index
coefficients,3–4,115,139–140,142,146,
148,152,157–159,169,241
coefplot ,169–170
cognition,2color,xii,2,8,11,14–20,23,26–28,30,
54–56,58–59,63–67,70–72,74,76–77,82,87–88,90–91,106–109,113,119,123–132,134–136,145,156–157,
160–161,167–168,170,173,175–178,
180–182,184–190,192,194–196,200–212,218,222–223,225,227–229,251–252
colorblindness,203–204colormodels,17columnmarginals,94commentsincode,33–34,37–38,55,239conditionaleffect,161confidenceintervals,7,9,115,142,
147–148,163,165,169
console,xvi–xviii,35,38,40,43,47–48,50,
57,59,61,72,78,139–140,155,177,250
conventions,xvi,34,162Cook’sdistance,149
coord_cartesian() ,56,101,196
correlation,3–4,170,215,219county-level,173,182–184,186,198,207,
257
county_data ,183–184,186,205–206
county_map ,183–184,259
cowplot,xviii,210,218–219
cplot(),159,161
data,xix,1–33,36,38–43;categorical,4,
18,27–28,76–79,168;channelsforrepresenting,vii,18–20,26–28,203;
continuous,64,66–67,78–79,85–87,
102,104,114,127–129,141,165;geomstransform,81–82;long-format,56,244;readingin,49–51;tidy,51,56,60,93,145–146,164,218,242;wide-format,56,244
dataframes,46–47,57,62,81,95–98,102,
110–111,137,140,143–147,149–151,154,164,177,179–180,182–184,190,218,227,238–241,246,257,259.Seealsotibbles
data-to-inkratio(Tufte),8,14dates,7,103,127,137,216–219,221,
245–249
democracy,possiblecollapseof9–11densityplots,viii,85,88,134,213dichromat,203–204discrete,127–129,192,228,231diverging,17–18,128–129,196,202
dplyr,85,93,95–97,99,101,109,
132–133,152,162,244
dual-axisplot,219edgecontrasts,16
election ,118–120,131,157,173–176,
179–181,183,189–191,207–208
elections_historic ,118–119,131
element_blank() ,194,210–211,213,229,
259–260
element_text() ,211,227,229
Emaasit,Daniel,231
errors,xiv–xv,40–41,48–49,55,83,85,95,
106,179,239;annoyingpersistenceof,73;inggplot,44,74;ingraphperception,25–26;andreproducibility254–255
expand.grid() ,143
facet_grid() ,78–79,91,101,212–213,
227
facet_wrap() ,76–77,84,91,103,114,
138,167–168,176–177,192,196
faceting,73,76–79,85,91,100–101,
165–166,168,192,196,213,218,226–227
factors,51,71,79,105,137–138,159–160,
214,246
fillaesthetic,65–67,82–84,87–90,
106–107,127–129,134–136,177–182,184–188,192,194,202,207–209,211–212,214,226–229
ﬁlter(),96,132,237
FIPScode,176,183–184,191,198,
258–259
fittedvalues,144,146,149–150Foa,RobertoStefan,9formatters,62,176formulanotation,76,79Fox,Justin,29
fredts,217–218
FreedmanEllis,Greg,162frequencyplots:awkwardway,82–85;
dplyrway,94–95
frequencypolygons,91functionalprogramming,111,154functions,xiv,xvi,30,38–39,41–44,49,
51,54,58,60–62,64–66,71–74,80,87–88,93–98,102,110–113,125–131,133–137,139,143,146,151,154–155,162–164,170,192,194,202–203,208,210,215,218,235,237,244,247,249–251,259–260
gam(),61–62,65
gapminder ,xviii,52,56–58,61–67,71,
74–78,91,102–103,132–134,136–140,144–145,150–155,157,169–170,194
GeneralSocialSurvey(GSS),78,82,84,
94–95,132,157,161–163,166–168,211–214,256
generalizedadditivemodel,61,80


------------------------


Index •269
generalizedpairsplot,170–171
GeographicalInformationSystem,173GeoJSON,257–258geoms,55–57,59–61,65–66,72–73,75–77,
80,85,89–90,93–94,99,106,108–109,115,118–121,123–127,131,133–134,142,146,195,207,212–214,230–231
geom_bar() ,55,80,82–84,87–90,94,
100–101,104,229
geom_bin2d() ,91
geom_boxplot() ,55,104–106,125,133
geom_col() ,89–90,100
geom_density() ,87,211–212
geom_density_ridges() ,214
geom_errorbar() ,133,142
geom_freqpoly() ,91
geom_histogram() ,86–87,125
geom_hline() ,119
geom_jitter() ,108–109
geom_line() ,75,103,145,151,168,195,
218,246–247
geom_point() ,49,52,56,59,61–69,71,80,
92,103,107–108,113,115–116,119,121,123–125,127,129–131,147,150,200,206,248
geom_pointrange() ,115,125,133,142,
148,157,161
geom_polygon() ,177–178,180,192
geom_quantile() ,135
geom_ribbon() ,146,168
geom_smooth() ,61,64,67,71,79–80,
134–135,143,200,252
geom_text() ,115–116,118,120–121,124,
212
geom_text_repel() ,118–119,121,195,
206
geom_violin() ,106,133
geom_vline() ,119,212,223
Gestaltrules,21–22
GGally,xviii,170–171
ggfortify ,169
ggplot:additivecharacterof,77,96,99;
can’tmakeyouhonest,230–231;firstuse,51–52;implementsgrammarofgraphics,30–33;layeredstructureof,xiv,60,135,202,207–208,230–231;overview,54–68;mainflow,72–77;palettes,202–203;refining,199–200;scalesandguides,125–130
ggplot() ,30,55,58–62,65–66,99,102,
146
ggraph,231
ggrepel,xviii,118,120,231
ggridges ,xviii,213–214,231
ggsave() ,68–70
ggthemes ,208–209
git,xviiiGitHub,xviii,198,215,259glance() ,150
glm(),158
Gould,21grammarofgraphics,xii,xiv,30,64,74,
208,231
grayscale,16–17Grolemund,Garrett,230groupaesthetic,75,133,195,246
group_by() ,96–97,99,111,132,152–153,
164
groupeddata,23,74–76,81,95–97,99,
111–112,132,151,164,194
gss_lon,162,211–212,214
gss_sm,78–84,95–98,132–133,157–158
Gruber,John253guides,55–56,60,67,82,90,101,123,
125–127,130,135,176,178,184–186,206,226,228–229,231
guides() ,60,82,123,125–127,185,229
gun-relatedsuicides,186–189
HCLcolormodel,17
head(),102,183
helppages,xiv,58,69,133,235–237
here(),69–70,256
Hermanngrideffect,14–15hexadecimal,187,203histogram,27,85–87,91,115,134Holmes, Nigel, 8Holtz,Yan,231honesty,vii,27hue,16–18,27–28,64,185,192,202
identity,88–90,226,228
infer,15,22,170
install.packages() ,210,258
interaction() ,164
interactioneffect,169
Jackson,Eric,220
jitter,109judgment,good,1,8,16,24,26–27
Kaplan-Meierplot,151
kerneldensity,87keyboardshortcut,37,40
knitr,68,253–254
labels,5,8,10,29–30,42,55–57,60,62–63,
65,68,76–77,91,93,95,97,99–101,
103,105–107,109,111,113,115–121,
123–131,133,145,148,160,164,167–168,176,180,184–185,190–192,195–196,200–201,205–207,210–214,221,223,226–229,243,248,254,259
labs(),60,65,101,106,129
latticegraphics,169lawschoolenrollments,28–29


------------------------


270 •Index
Leeper,Thomas157
left_join() ,179,259
legends,8,30,55,63,65,67,82,88–90,
100,106,108–109,113,123,125–127,129–130,135–136,157,167–168,178,180,184–188,192,194,200–202,207–210,218,223,225,229,260
legend.position ,89,100,106,108–109,
113,130,136,157,167–168,184,
186–188,194,201–202,207–210,218,223,229,260
length,xii,11,24–28,83
library() ,38,43,52,57
Likertscale,201lists,xiv,1,30,36,45,48,60,112,137,140,
143,151,153–155,170,204,218,236,253
listcolumns,151,154–155
lm(),138
LOESS,63–66,69,77,80,134,136,200,
253
logisticregression,143,146,157–158loops,154
lubridate ,247
luminance,15–18,202Lumley,Thomas,161–162,233
Machbands,15
map(aesthetic). Seeaestheticmapping
map(cartographic),173–196,202,204,
212,229,257–259
mapping(infunctionalprogramming),
154–155
marginaleffects,ix,157,159–160margins,xviii,94,118,120,134,157,159,
161,170,181–182
margins() ,159
markdown,34,253–254Matérnmodel,21Mayer,Marissa,220–224McGill, Robert, 23
mean(),39,41–43,96–97,106,110–112,
235
merge(),237
mergingdataframes,145,179,183–184,
237,257,259
methods(infunctions),137,139,146,159,
161,169,231
MicrosoftExcel,xi,11–12,221,243MicrosoftPowerPoint,220MicrosoftWord,253
midwest,80–81,83–88,92,94–95,99–102,
176,196
Minard,Charles,7–8misleadinggraphs,3,5,9,11,27–29,173,
189
missingdata,39,51,102,150modelobjects,137–141,143,146–147,
149,169,236
models,xiii,xvi,3,5,7,21,33,42,44,61,
80,88,115,134–151,153–159,161,163,165,167–170,189,198,231,236
M organ,Liz,234Mounk, Yascha, 9Müller, Kirill, 69
Munzer,Tamara,xi,27–28,31
mutatingdata,96–99,132,154,156,162,
164–165,190
mutate() ,96,98–99,132
names,39–43,47,49,58,69,81,98,
101–102,105–106,111,114,127,136,140,148,179,190,203–204,214,227,235,239,242–243
nest(),153–155. Seealsolistcolumns
New York Times, 9, 11
Obama,Barack,157
objects,xvi,2,15–16,18,22,39–41,44–49,
60,69,74,97,119,132,137,139–140,143,146,153,169,177,200,210,218,235,238,241,247,256
oecd_sum ,89–90
OLSregression,80,134–136,138,145,
147–148,150,155,157,169,200. See
alsolm()
opiates,191–192,194–195
“opticalillusion.” Seevisualeffect
organdata ,50,102–106,108–112,121,
123–124,127,129–130,133,170,202,248
outliers,3–4,75,121,125,200
packages,xiv,xviii,17,36,38–39,43,51,
53,170,210,233,247,258
palettes,17–18,129,186–187,192,
202–203,210;gradients,17–18,27,64,66–67,128,173,181;qualitative,18,202.SeealsoRColorBrewer
pandoc,253–254
panic,don’t,xv
Pebesma,Edzer,198Pedersen,ThomasLin,231P eng,Roger ,230perception,1–2,11,13–14,16–17,23,31perceptualuniformity,18piechart,24,26,224–228pipesviii,94–99,102,109–112,132,
154–155,162,170,204,212. Seealso
%>%
plaintext,32–35,37,253–255
plot_grid() ,218
Poissonprocess,21pop-out,19,21


------------------------


Index •271
positionargument,20,24–25,27,72,74,
83–84,100–101,106,108–109;dodge,83–84,89,100,157167;dodge2,100–101;identity88–91
preattentivesearch,18predictedvalues,141–143,151,168prediction,143–144,146,151,157,
219–220
predict() ,143–144,146,151
preﬁx_replace() ,159
preﬁx_strip() ,148,159
projection(cartographic),178,180–183,
192,257–258
projects,xviii,32,35–37,40,69–70,72,
140,170,233–234,253,255–257
purpleAmerica(map),181–182
R,xii–xviii,32–35,37–40,42–46,48–49,
60–61,63–64,68,79,102–103,137–140,143,169,173,198,218,230–231,235–239,242,246–248,250–251,254–256
randomdata,deceptiveclumpinessof,
21–22
rasterimageformats,70
RColorBrewer ,135,187,202–203
read_csv() ,49–51
read_dta() ,51
readingdata,49,53;commonproblems
with,245–249
regression,3,54,80,134–135,138,143,
146,149–150,154,156–158,220
regularexpressions,165
relevel() ,158
reorderingoutput,93,105–106,108–109,
113–115,131,148,160–161,176,196
reorder() ,105–106,131,148
reproducibility,xi,29,255residuals,4,139–140,146,149–150,152,
158
ridgeplots,214RMarkdown,32,34–37,53,55,68–69,
253–256
Rmdfiles,37,68,254Robinson,David,146robustregression,134–135Romney,Mitt,157rowmarginals,94RStudio,xviii,35–37,40,52–53,57,235,
253–254,256–257
Rudis,Bob,189,198,233,257,259
sample_n() ,102
SAS,49savingyourwork,68–70,256
scale_functions,62,65,125–131,
194,202scale_color_brewer() ,202
scale_color_hue() ,202
scale_color_manual() ,135–136,177,
206
scale_ﬁll_brewer() ,185,202,227
scale_ﬁll_manual() ,135–136,202
scales,xviii,11,18,27–28,30,55–57,
60–63,65,67,74,76–77,82,90,114,
119,125–128,135,145,167–168,
176–177,181–182,192,200–202,205–207,223,226,228,231
scatterplots,xii,2–3,7,21,23,30,34,52,
54–55,59,62,71,78–79,103,115,120,125,136,175,200,220–223,251
Schwabish,Jon,231
select() ,96,102,132,237
selection,inbaseR,237sequentialgradients,17–18,27,99,202,
225
shapeaesthetic,xii,xiv,2,11,14–15,
19–20,22–23,26–27,30,43,54–59,62–64,68,70,72,82,93,107,125,127,148,175,207,242,245
shapefiles(cartography),198,257simplefeatures(cartography),198smallmultiples,xiii,76–77,165,211–212
socviz,xviii,36,38,46,49,69,89,102,
118,148,183,205,257,259
software,xi,xvi–xvii,2,12,20,38,49,51,
59,70,198,233,235
Sonders,LizAnn,215spatialdata,176,198,257splines,41,134–136,251–252
SPSS,xi,49
srvyr,xviii,162
stackedbargraph,12–13,24,83–84,228,
230
standarderrors,61,64,66–67,139,149,
152,163,165,167
stat_functions,80,87–88,94,
134,136
Stata,49,51,159
statebins ,ix,189–191
str(),47,138
studebt,225–228
studentloans,226,228Swartz,Aaron,253subsetting,33,78,87–88,93,99,112,121,
123,131,145,148,151,162,167–168,176,182,190,192,195,200,205–206,208,212,237,251–252
subset(),87,121,131,237
summarizing data ,33,53,73,79,86,
93–101,109–112,132–133,146,163–165,172,212
summarize() ,96–99,110–111,132
summarize_if() ,112


------------------------


272 •Index
summary() ,42,139–140,143,
150,169
survey package ,161–163
surveyweights,78,161–163,175syntax,32,34,42,49,55,62,73–74,76,
189,239
taste,xi,1,5,14,40,59,199,208
text(ingraphs),115–117,119–125,195,
200,205–206,210–213,223,226–227,229–230,233. Seealsoplaintext;
labels
themes,ix,89,93,100,106,108–109,113,
125–127,130,136,157,167–168,176,180,184,186–188,192,194,201–202,207–211,213–214,218,223,226–227,229,259–260
theme_set() ,208
tibbles,47,52,57,81,89,98,100,103,
110,112,118,132–133,137,153–156,159–160,163–165,175,191,204,225,238–241,244–249
tidy(),147,155
tidycensus ,198,259
tidyr,165,217,244
tidyverse,xiv,xviii,38–39,47,49–51,53,
55–56,85,93,95,162,165,170,198,230,237,244–245
tigris(cartography),198timeseries,103,215–216,219–220,248titanic,46–47,88–90transformations,viii,62,71,73,85,88,
96–97,99,113,127–128,154,168,183,205
Trump,Donald,180Tufte,Edward,xi,5–8,11,209uncertainty,142,165,168
ungroup() ,111–112
unnest() ,153
unordered,17–18,27–28,78,127–128,
141,185,201,225
ur-choropleths,America’s,ix,182,186,194
us_counties ,258
us_states ,177–179,191–192
Vanhove, Jan, 3–4
vectors,39–43,45–47,51,63,70,87,112,
135,137,143,148,163,187,190,
203–204,237–238,242
vectorizedoperations,45
viridis,xviii,192,194,228–229
vision,14,19visualeffects,14–16,31visualtasks,vii,23Voeten,Erik,10–11volume,5,7,26–27,43
Walker,Kyle,198
Ware,Colin,14warnings,9,11,47,103
warnings() ,103
Wickham,Hadley,38,233,243Wilke,ClausO.,210,213,233Wilkinson,Leland,xii,30–31,74WorldValuesSurvey,10
Yahoo,220–224
year-onlydates,248
zero,asmid-pointinscale,17–18;baseline
problem,28–29;FIPSidof,183;donotcodemissingdataas,189


------------------------


